- Guide of Building Developing Environment on Archlinux

* non-GUI
  base base-devel fish git tmux gitmux-bin git-delta lazygit yazi neovim fzf eza dua-cli bat ripgrep fd handlr-regex zoxide
  btop paru reflector fastfetch lua python-pip aria2 xclip zip unzip ouch

  aspell-en ffmpeg ffmpegthumbnailer emacs-nativecomp w3m jq moreutils poppler calc scc watchexec
  proxychains wget shellcheck-static shfmt cppcheck upx hunspell npm nodejs
  clang gdb cmake meson sccache auto-cpufreq input-remapper-git

  xorg-xhost xdotool xorg-xev xorg-xwininfo xorg-xrandr wmctrl

  # https://airekans.github.io/cpp/2014/07/04/gperftools-profile
  valgrind qcachegrind gperftools

  gdbgui (binary downloaded from github release page, do not install using pip)

** wms
*** i3 Window Manager
    i3-wm i3lock i3status-rust
    dunst picom-git feh pavucontrol blueman gnome-icon-theme
    vimix-cursors polkit-gnome lxappearance-gtk3 qt5ct doublecmd-qt5

*** qtile
    qtile-git
    dunst picom-git feh pavucontrol blueman gnome-icon-theme
    vimix-cursors polkit-gnome lxappearance-gtk3 qt5ct doublecmd-qt5
    : pip install dbus-next psutil

*** hyprland
    # https://github.com/rharish101/ReGreet
    # https://fcitx-im.org/wiki/Using_Fcitx_5_on_Wayland
    hyprland wayland nwg-look waybar rofi-wayland greetd-gtkgreet waybar-module-pacman-updates-git
    : pip install pyprland
    # KNOWN issues:
    1. no systray in waybar
    2. flameshot does not work
    3. copyq doesn't work most ly

** input method(IME)
   # fcitx5, rime and dictionaries
   # https://blog.coelacanthus.moe/tech/welcome-to-fcitx5/#arch
   fci5x5-im fcitx5-rime
   # git clone https://github.com/iDvel/rime-ice/ ~/.local/share/fcitx5/rime
   # compare default.yaml, double_pinyin_flypy.schema.yaml and merge
   # or
   # git clone https://github.com/expoli/rime-config ~/.local/share/fcitx5/rime
   # compare misc/double_pinyin_flypy.schema.yaml, double_pinyin_flypy.custom.yaml, default.custom.yaml and merge
   # https://wiki.archlinux.org/index.php/WPS_Office_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)
   # config, make fcitx5 work in programs like alacritty and Calibre
   # put the following lines into ~/.pam_environment and reboot (x11)
   #INPUT_METHOD  DEFAULT=fcitx5
   #GTK_IM_MODULE DEFAULT=fcitx5
   #QT_IM_MODULE  DEFAULT=fcitx5
   #XMODIFIERS    DEFAULT=\@im=fcitx5
   # use `fcitx5-diagnose` to analyzer
   # wayland: https://fcitx-im.org/wiki/Using_Fcitx_5_on_Wayland

** Rust
   # install rustc/cargo first
   : rust (`curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh`)
   # or better to install from archlinux repo since some aur packages depend on rust to be installed,
   # after installing from repo, need to manually install the toolchain using `rustup defult stable`
   # NOTE to install rust-analyzer since rustup will symbolic /usr/lib/rustup/bin/rust-analyzer to /usr/bin/rustup which will not work
   : sudo pacman -S rustup rust-analyzer && rustup default stable
   cargo install cargo-edit cargo-audit cargo-outdated cargo-cache cargo-diet cargo-modules cargo-bloat bacon cargo-nextest cargo-update cargo-wizard xidlehook
   # clean cargo cache `cargo cache -a`

* GUI
  alacritty kitty firefox mpv brave-bin audacious meld fuse fuse-exfat exfat-utils file-roller copyq qimgv-git kimageformats qt6-imageformats qpdfview
  noto-fonts noto-fonts-emoji noto-fonts-cjk font-manager flameshot peek rofi thunderbird drawio-desktop-bin

  # NOTE: after installing noto-fonts-cjk, to fix the default CJK font order choosen by the system
  # ln -s ~/Dotfiles.d/misc/70-cjk-fonts.conf ~/.config/fontconfig/70-cjk-fonts.conf

  imagemagick darktable krita krita-plugin-gmic easytag

* Python/NodeJS
  pip install ipython pip_search wheel pynvim rope ropemacs pep8 pylint ptpython pygments pudb codespell gdb-tools colour-valgrind scan-build compiledb gpustat visidata gdbfrontend yt-dlp

** for spacemacs
   # change /etc/pip.conf so you can install these packages using in system-wide
   pip install importmagic epc flake8 pytest nose autoflake black isort mypy cmake-language-server pygls==0.8.1 cmake_format python-lsp-server 'python-lsp-server[all]'

   npm install -g prettier import-js eslint typescript typescript-language-server tern lua-fmt prettier-plugin-toml vscode-json-languageserver bash-language-server vim-language-server
