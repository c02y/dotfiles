#!/usr/bin/env bash
#
# Script name: dm-confedit
# Description: Choose from a list of configuration files to edit.

ROFI="rofi -dmenu -theme ~/Dotfiles.d/misc/rofi-theme-solarized_alternate.rasi -theme-str 'window {width: 50%; height: 50%;} configuration {show-icons:false;}' -p"

declare -A confedit_list
confedit_list[alacritty]="$HOME/.config/alacritty/alacritty.yml"
# confedit_list[awesome]="$HOME/.config/awesome/rc.lua"
# confedit_list[bash]="$HOME/.bashrc"
confedit_list[bash_alias]="$HOME/Dotfiles.d/misc/bash_aliases"
confedit_list[dunst]="$HOME/.config/i3/dunstrc"
confedit_list[fish]="$HOME/.config/fish/config.fish"
confedit_list[spacemacs]="$HOME/.spacemacs.d/init.el"
confedit_list[i3]="$HOME/.config/i3/config"
confedit_list[i3status_rust]="$HOME/.config/i3/i3status-rust.toml"
confedit_list[kitty]="$HOME/.config/kitty/kitty.conf"
confedit_list[lvim]="$HOME/.config/lvim/config.lua"
confedit_list[lazygit]="$HOME/.config/lazygit/config.yml"
confedit_list[picom]="$HOME/.config/i3/picom.conf"
confedit_list[ranger]="$HOME/.config/ranger"
confedit_list[rofi_theme]="$HOME/Dotfiles.d/misc/rofi-theme-solarized_alternate.rasi"
confedit_list[ssh]="$HOME/.ssh/config"
confedit_list[sxhkd]="$HOME/.config/sxhkd/sxhkdrc"
confedit_list[tig]="$HOME/.config/tig/config"
confedit_list[tmux]="$HOME/.config/tmux/tmux.conf"
# confedit_list[xinitrc]="$HOME/.xinitrc"
# confedit_list[xresources]="$HOME/.Xresources"

# Clean options array making sure that the files exist
declare -A _clean_list
declare -A _confedit_value_list
# shellcheck disable=SC2154
for i in "${!confedit_list[@]}"; do
	_clean_list["${i}"]=${confedit_list["${i}"]} && cfg=$(printf '%s\n' "${_clean_list["${i}"]}")
done

# Piping the above array (cleaned) into dmenu.
# We use "printf '%s\n'" to format the array one item to a line.
choice=$(printf '%s\n' "${!_clean_list[@]}" | sort | eval ${ROFI} 'EDIT_CONFIG' "$@")

# What to do when/if we choose a file to edit.
if [ "$choice" ]; then
	cfg=$(printf '%s\n' "${_clean_list["${choice}"]}")
	# shellcheck disable=SC2154
	kitty vim "$cfg"
# What to do if we just escape without choosing anything.
else
	echo "Program terminated." && exit 0
fi
