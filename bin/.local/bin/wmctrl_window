#!/bin/bash

# TODO: 1. move a window using mouse, 2. resize a window using mouse
if [[ $1 == 'left' || $1 == 'right' ]]; then # tile window to lef/right
	size=`wmctrl -d | head -n 1 | grep -Eho '[0-9]{4}x[0-9]{3,4}' | tail -1`
	width=`echo $size | cut -d'x' -f 1`
	height=`echo $(($(echo $size | cut -d'x' -f 2) - 24))`
	half=$(( $width/2 ))

	wmctrl -r :ACTIVE: -b remove,maximized_horz,shaded &

	if [[ $1 == 'left' ]]; then
		wmctrl -r :ACTIVE: -b add,maximized_vert -e 0,0,24,$half,$height &
	else
		wmctrl -r :ACTIVE: -b add,maximized_vert -e 0,$half,24,$half,$height &
	fi
elif [[ $1 == 'center' ]]; then # center the window
	IFS='x' read screenWidth screenHeight < <(xdpyinfo | grep dimensions | grep -o '[0-9x]*' | head -n1)

	width=$(xdotool getactivewindow getwindowgeometry --shell | head -4 | tail -1 | sed 's/[^0-9]*//')
	height=$(xdotool getactivewindow getwindowgeometry --shell | head -5 | tail -1 | sed 's/[^0-9]*//')

	newPosX=$((screenWidth/2-width/2))
	newPosY=$((screenHeight/2-height/2))

	xdotool getactivewindow windowmove "$newPosX" "$newPosY"
elif [[ $1 == 'desktop' ]]; then # toggle/show the desktop
	status="$(wmctrl -m | grep "showing the desktop" | sed -r 's/(.*)(ON|OFF)/\2/g')"

	if [ $status == "ON" ]; then
		wmctrl -k off
	else
		wmctrl -k on
	fi
elif [[ $1 == 'above' ]]; then
	wmctrl -r :ACTIVE: -b toggle,above
elif [[ $1 == 'vert' ]]; then
	wmctrl -r :ACTIVE: -b toggle,maximized_vert
elif [[ $1 = 'horz' ]]; then
	wmctrl -r :ACTIVE: -b toggle,maximized_horz
elif [[ $1 == 'max' ]]; then
	wmctrl -r :ACTIVE: -b toggle,maximized_vert,maximized_horz
fi

exit 0
