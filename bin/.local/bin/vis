#!/bin/bash

print_usage() {
	cat <<EOF
$(basename "$0") -- vim different targets

  -h -- print this usage
  -2 -- edit $HOME/Dotfiles.d/todo.org
  -a -- edit $HOME/.config/alacritty/alacritty.yml
  -b -- edit $HOME/.bashrc
  -B -- edit $HOME/.bash_aliases
  -d -- vim diff
  -c -- edit $HOME/Dotfiles.d/misc/clang-format-c-cpp
  -e -- edit $EMACS_EL
  -E -- sudo edit
  -f -- edit $FISHRC
  -F -- edit file disabling format_on_save
  -i -- vim $HOME/.config/i3/config
  -k -- edit $HOME/.config/kitty/kitty.conf
  -m -- vim $HOME/Dotfiles.d/misc/cmake-format.json
  -M -- vim $HOME/.config/mpv
  -o -- edit $HOME/Dotfiles.d.d/vim/.vimrc
  -O -- edit $HOME/Dotfiles.d/vim/vimrc.more
  -q -- edit $HOME/.config/qtile/config.py
  -s -- edit $HOME/.config/sxhkd/sxhkdrc
  -t -- edit $HOME/.config/tmux/tmux.conf
  -T -- edit $HOME/.config/tig/config
  -r -- vim $HOME/.config/yazi
  -R -- vim $HOME/.local/bin/rofis
  -u -- vim -U NONE +argv
  -U -- vim -u $HOME/Dotfiles.d/vim/vimrc.more +argv
  -v -- edit $HOME/.config/lvim/config.lua
EOF
	exit 0
}

EMACS_EL="$HOME/.spacemacs.d/init.el"
FISHRC="$HOME/.config/fish/config.fish"
cmd=vim
file=$*
while getopts ":h2abBdDceEfFikmMoOqyRstTuUv" args; do # prefix-: no warning for illegal option
	case "$args" in
	h | \?)
		print_usage
		;;
	2)
		file="$HOME/Dotfiles.d/todo.org"
		;;
	a)
		file="$HOME/.config/alacritty/alacritty.yml"
		;;
	b)
		file="$HOME/.bashrc"
		;;
	B)
		file="$HOME/.bash_aliases"
		;;
	d)
		shift
		if [ "$#" -eq 1 ]; then
			eval "$cmd" -c "Gvdiffsplit!" "$1"
			exit
		fi
		if [ -f "$1" ]; then
			eval "$cmd" -d -o "$1" "$2"
		elif [ -d "$1" ]; then
			eval "$cmd" -c "DirDiff $1 $2"
		fi
		exit
		;;
	c)
		file="$HOME/Dotfiles.d/misc/clang-format-c-cpp"
		;;
	e)
		file=$EMACS_EL
		;;
	E)
		shift
		sudo -E vim "$@"
		exit
		;;
	f)
		file=$FISHRC
		;;
	F) # disable format_on_save using lunarvim, or toggle it inside lunarvim before saving it
		shift
		lvim +LvimToggleFormatOnSave "$@"
		exit
		;;
	i)
		file="$HOME/.config/i3/config"
		;;
	k)
		file="$HOME/.config/kitty/kitty.conf"
		;;
	m)
		file="$HOME/Dotfiles.d/misc/cmake-format.json"
		;;
	M)
		file="$HOME/.config/mpv"
		;;
	o)
		file="$HOME/Dotfiles.d/vim/.vimrc"
		;;
	O)
		file="$HOME/Dotfiles.d/vim/vimrc.more"
		;;
	q)
		file="$HOME/.config/qtile/config.py"
		;;
	y)
		file="$HOME/.config/yazi"
		;;
	R)
		file="$HOME/.local/bin/rofis"
		;;
	s)
		file="$HOME/.config/sxhkd/sxhkdrc"
		;;
	t)
		eval "$cmd" "$HOME/.config/tmux/tmux.conf" && tmux source-file "$HOME/.config/tmux/tmux.conf" && echo "$HOME/.config/tmux/tmux.conf reloaded!"
		exit
		;;
	T)
		file="$HOME/.config/tig/config"
		;;
	u)
		cmd="vim -u NONE -c 'nmap q :q!<CR>'"
		shift
		file="$*"
		;;
	U)
		cmd="vim -u $HOME/Dotfiles.d/vim/vimrc.more"
		shift
		file="$*"
		;;
	v)
		file="$HOME/.config/lvim/config.lua"
		;;
	esac
done
shift
num="$*"

eval "$cmd" "$file" "$num"
