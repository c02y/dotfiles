#!/bin/bash

# Quick compile and run a c/cpp file or compile and run target in CMakeLists.txt or just compile using Makefile/makefile

# gcc/g++ for simple c/c++ file
if [ $# -ne 0 ]; then # argv is provided
	DIR=$(dirname "$@")
	BIN="${@%.*}"
	EXT="${@##*.}"
	# echo DIR: $DIR
	# echo BIN: $BIN
	# echo EXT: $EXT
	if [ ! -z $EXT ]; then # if EXT variable is not empty
		if [ "$EXT" = "cpp" -o "$EXT" = "cc" ]; then
			CC=g++
		elif [ "$EXT" = "c" ]; then
			CC=gcc
		fi
		if [ ! -z $CC ]; then
			if grep -q " main(" $@; then
				$CC -Wall -W -pthread -g $@ -o $DIR/$BIN && $DIR/$BIN
			else # if no main is found in the argv, just compile it (do not link) to check if it fails
				$CC -Wall -W -pthread -g -c $@
			fi
			exit 0
		fi
	fi
fi

if [ -f ../CMakeLists.txt -o -f ./CMakeLists.txt ]; then # using cmake+make/ninja
	if [ -f ../CMakeLists.txt ]; then
		cmake .. -G Ninja
	else
		if [ ! -d ./build ]; then
			mkdir build
		fi
		cd build && cmake .. -G Ninja
	fi

	if [ $? = 0 ]; then
		CMD=make
		if [ -f build.ninja ]; then
			CMD=ninja
		fi
		if [ $# -ne 0 ]; then # argv is provided
			eval $CMD $@ && ./$@
		else
			eval $CMD
		fi
	fi
elif [ -f ../meson.build -o -f ./meson.build ]; then # using meson+ninja
	if [ -f ../meson.build ]; then
		meson ..
	else
		meson build
	fi
	if [ $? = 0 ]; then
		cd build
		if [ $# -ne 0 ]; then # argv is provided
			meson compile $@ && ./$@
		else
			meson compile
		fi
	fi
elif [ -f ./Makefile -o -f ./makefile ]; then
	make
else
	echo "No CMakeLists.txt/meson.build or no Makefile/makefile..."
fi
