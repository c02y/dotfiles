#!/usr/bin/env bash
#
# Script name: dm-websearch
# Description: Search various search engines (inspired by surfraw).

ROFI="rofi -dmenu -theme ~/Dotfiles.d/misc/rofi-theme-solarized_alternate.rasi -theme-str 'window {width: 50%; height: 50%;} configuration {show-icons:false;}' -p"

# Search engine config
declare -A websearch
# Syntax:
# websearch[name]="https://www.example.com/search?q="

# Search Engines------------
websearch[Baidu]="https://www.baidu.com/s?wd="
websearch[Bing]="https://www.bing.com/search?q="
# websearch[Brave]="https://search.brave.com/search?q="
websearch[Duckduckgo]="https://duckduckgo.com/?q="
# websearch[gemini search \(https\)]="https://portal.mozz.us/gemini/geminispace.info/search%3F"
websearch[Google]="https://www.google.com/search?q="
# websearch[qwant]="https://www.qwant.com/?q="
# websearch[swisscows]="https://swisscows.com/web?query="
# websearch[yandex]="https://yandex.com/search/?text="
# Information/News----------
# websearch[bbcnews]="https://www.bbc.co.uk/search?q="
# websearch[cnn]="https://www.cnn.com/search?q="
websearch[GoogleNews]="https://news.google.com/search?q="
websearch[Wikipedia]="https://en.wikipedia.org/w/index.php?search="
websearch[Wiktionary]="https://en.wiktionary.org/w/index.php?search="
# Social Media--------------
websearch[Bilibili]="https://search.bilibili.com/all?keyword="
websearch[Douban]="https://www.douban.com/search?q="
# NOTE: DoubanBook and DoubanMovie doesn't support search ' ' to jump to home page
websearch[DoubanBook]="https://search.douban.com/book/subject_search?search_text="
websearch[DoubanMovie]="https://search.douban.com/movie/subject_search?search_text="
websearch[Zhihu]="https://www.zhihu.com/search?type=content&q="
websearch[Twitter]="https://twitter.com/search?q="
websearch[ZLibrary]="https://book4you.org/s/?q="
websearch[Weibo]="https://s.weibo.com/weibo?q="
websearch[KindleBook]="https://www.amazon.cn/s/ref=nb_sb_noss?field-keywords="
websearch[JD]="https://search.jd.com/Search?keyword="
websearch[JavDB]="https://javdb.com/search?q="
websearch[Reddit]="https://www.reddit.com/search/?q="
# websearch[odysee]="https://odysee.com/$/search?q="
websearch[Youtube]="https://www.youtube.com/results?search_query="
# Online Shopping-----------
websearch[Amazon]="https://www.amazon.com/s?k="
# websearch[craigslist]="https://www.craigslist.org/search/sss?query="
# websearch[ebay]="https://www.ebay.com/sch/i.html?&_nkw="
# websearch[gumtree]="https://www.gumtree.com/search?search_category=all&q="
# Linux---------------------
websearch[Arch_AUR]="https://aur.archlinux.org/packages/?O=0&K="
websearch[Arch_pkg]="https://archlinux.org/packages/?sort=&q="
websearch[ArchWiki]="https://wiki.archlinux.org/index.php?search="
# websearch[debianpkg]="https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords="
# Development---------------
websearch[Github]="https://github.com/search?q="
websearch[Gitlab]="https://gitlab.com/search?search="
websearch[GoogleOpenSource]="https://opensource.google/projects/search?q="
# websearch[sourceforge]="https://sourceforge.net/directory/?q="
websearch[StackOverFlow]="https://stackoverflow.com/search?q="
# Etc

# As this is loaded from other file it is technically not defined
# shellcheck disable=SC2154 # Choosing  a search engine by name from array above.
engine=$(printf '%s\n' "${!websearch[@]}" | sort | eval ${ROFI} 'SEARCH_ENGINE' -i "$@") || exit 1

# Getting the URL of the search engine we chose.
url="${websearch["${engine}"]}"

# Searching the chosen engine.
query=$(eval ${ROFI} 'SEARCH_$engine')
if [ "$query" = "" ]; then
	exit
elif [ "$query" = " " ]; then
	firefox "$(dirname ${url})"
else
	query="$(echo -n "${query}" | jq -s -R -r @uri)"
	# Display search results in web browser
	# shellcheck disable=SC2154
	firefox "${url}${query}"
fi
