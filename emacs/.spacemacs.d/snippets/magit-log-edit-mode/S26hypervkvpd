;; Object asm/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "asm/"
  :tables (list 
   (semanticdb-table "string.h"
    :major-mode 'c-mode
    :tags 
        '( ("_M68K_STRING_H_" variable (:constant-flag t) nil [33 48])
            ("linux/types.h" include (:system-flag t) nil [50 74])
            ("linux/compiler.h" include (:system-flag t) nil [75 102])
            ("__kernel_strlen" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [141 155]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [104 224])
            ("__kernel_strcpy" function
               (:pointer 1
                :typemodifiers ("static" "inline")
                :arguments 
                  ( ("dest" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [262 273])
                    ("src" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [274 290]))                  
                :type "char")
                nil [226 436])
            ("__HAVE_ARCH_STRLEN" variable (:constant-flag t) nil [469 487])
            ("strlen" variable (:constant-flag t) nil [496 502])
            ("__HAVE_ARCH_STRNLEN" variable (:constant-flag t) nil [597 616])
            ("strnlen" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [646 660])
                    ("count" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [661 674]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [617 902])
            ("__HAVE_ARCH_STRCPY" variable (:constant-flag t) nil [912 930])
            ("strcpy" variable (:constant-flag t) nil [957 963])
            ("__HAVE_ARCH_STRNCPY" variable (:constant-flag t) nil [1157 1176])
            ("strncpy" function
               (:pointer 1
                :typemodifiers ("static" "inline")
                :arguments 
                  ( ("dest" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1205 1216])
                    ("src" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1217 1233])
                    ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1234 1243]))                  
                :type "char")
                nil [1177 1470])
            ("__HAVE_ARCH_STRCAT" variable (:constant-flag t) nil [1480 1498])
            ("strcat" variable (:constant-flag t) nil [1507 1513])
            ("__HAVE_ARCH_STRCMP" variable (:constant-flag t) nil [1621 1639])
            ("strcmp" function
               (:typemodifiers ("static" "inline")
                :arguments 
                  ( ("cs" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1665 1680])
                    ("ct" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1681 1696]))                  
                :type "int")
                nil [1640 2058])
            ("__HAVE_ARCH_MEMMOVE" variable (:constant-flag t) nil [2097 2116])
            ("memmove" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [2138 2145])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [2146 2159])
                    ("" variable (:type ("__kernel_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2160 2176]))                  
                :type "void")
                nil [2117 2177])
            ("memcmp" variable (:constant-flag t) nil [2187 2193])
            ("__HAVE_ARCH_MEMSET" variable (:constant-flag t) nil [2238 2256])
            ("memset" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [2277 2284])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [2285 2289])
                    ("" variable (:type ("__kernel_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2290 2306]))                  
                :type "void")
                nil [2257 2307])
            ("memset" variable (:constant-flag t) nil [2316 2322])
            ("__HAVE_ARCH_MEMCPY" variable (:constant-flag t) nil [2367 2385])
            ("memcpy" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [2406 2413])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [2414 2427])
                    ("" variable (:type ("__kernel_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2428 2444]))                  
                :type "void")
                nil [2386 2445])
            ("memcpy" variable (:constant-flag t) nil [2454 2460]))          
    :file "string.h"
    :pointmax 2534
    :fsize 2533
    :lastmodtime '(21468 8939 771684 523000)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("strcat" (spp-arg-list ("d" "s") 1513 . 1519) . ((semantic-list "({			\\
	char *__d = (d);			\\
	strcpy(__d + strlen(__d), (s));		\\
})" 1520 . 1587)))
          ("memset" (spp-arg-list ("d" "c" "n") 2322 . 2331) . ((symbol "__builtin_memset" 2332 . 2348) (semantic-list "(d, c, n)" 2348 . 2357)))
          ("__HAVE_ARCH_STRNLEN")
          ("__HAVE_ARCH_STRCAT")
          ("__HAVE_ARCH_MEMSET")
          ("__HAVE_ARCH_STRNCPY")
          ("__HAVE_ARCH_MEMMOVE")
          ("memcmp" (spp-arg-list ("d" "s" "n") 2193 . 2202) . ((symbol "__builtin_memcmp" 2203 . 2219) (semantic-list "(d, s, n)" 2219 . 2228)))
          ("__HAVE_ARCH_STRCMP")
          ("strlen" (spp-arg-list ("s") 502 . 505) . ((semantic-list "(__builtin_constant_p(s) ?	\\
			 __builtin_strlen(s) :		\\
			 __kernel_strlen(s))" 506 . 587)))
          ("__HAVE_ARCH_STRLEN")
          ("strcpy" (spp-arg-list ("d" "s") 963 . 969) . ((semantic-list "(__builtin_constant_p(s) &&	\\
			 __builtin_strlen(s) <= 32 ?	\\
			 __builtin_strcpy(d, s) :	\\
			 __kernel_strcpy(d, s))" 970 . 1091)))
          ("memcpy" (spp-arg-list ("d" "s" "n") 2460 . 2469) . ((symbol "__builtin_memcpy" 2470 . 2486) (semantic-list "(d, s, n)" 2486 . 2495)))
          ("_M68K_STRING_H_")
          ("__HAVE_ARCH_STRCPY")
          ("__HAVE_ARCH_MEMCPY")
          )

    )
   )
  :file "!home!chz!linux-3.0.8!arch!m68k!include!asm!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
