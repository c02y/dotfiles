;; Object INTF/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "INTF/"
  :tables
  (list
    (semanticdb-table "SentinelKeystypes.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SENTINEL_KEYS_TYPES_H" variable (:constant-flag t) nil [856 878])
            ("_DOS_" variable (:constant-flag t) nil [1159 1164])
            ("_16BIT_" variable (:constant-flag t) nil [1177 1184])
            ("SP_API" variable (:constant-flag t) nil [2345 2351])
            ("SP_PTR" variable (:constant-flag t) nil [2362 2368])
            ("SP_IN" variable (:constant-flag t) nil [2469 2474])
            ("SP_OUT" variable (:constant-flag t) nil [2483 2489])
            ("SP_INOUT" variable (:constant-flag t) nil [2498 2506])
            ("SP_IO" variable (:constant-flag t) nil [2515 2520])
            ("SP_STRUCT" variable (:constant-flag t) nil [2529 2538])
            ("SP_UNION" variable (:constant-flag t) nil [2562 2570])
            ("SP_TRUE" variable (:constant-flag t) nil [2595 2602])
            ("SP_FALSE" variable (:constant-flag t) nil [2615 2623])
            ("SP_EXPORT" variable (:constant-flag t) nil [2655 2664])
            ("SP_LOCAL" variable (:constant-flag t) nil [2741 2749])
            ("SP_LOCAL" variable (:constant-flag t) nil [2741 2749])
            ("SP_LOCAL" variable (:constant-flag t) nil [2741 2749])
            ("SP_LOCAL" variable (:constant-flag t) nil [2741 2749])
            ("SP_LONG" type
               (:typedef ("int")
                :type "typedef")
                nil [2868 2900])
            ("SP_ULONG" type
               (:typedef ("unsigned int")
                :type "typedef")
                nil [2902 2935])
            ("SP_DWORD" type
               (:typedef ("unsigned int")
                :type "typedef")
                nil [2944 2977])
            ("SP_VOID" type
               (:typedef ("void")
                :type "typedef")
                nil [3141 3179])
            ("SP_CHAR" type
               (:typedef ("char")
                :type "typedef")
                nil [3180 3218])
            ("SP_INT" type
               (:typedef ("int")
                :type "typedef")
                nil [3219 3249])
            ("SP_SHORT" type
               (:typedef ("short int")
                :type "typedef")
                nil [3251 3290])
            ("SP_BOOLEAN" type
               (:typedef ("unsigned char")
                :type "typedef")
                nil [3292 3333])
            ("SP_BYTE" type
               (:typedef ("unsigned char")
                :type "typedef")
                nil [3334 3372])
            ("SP_UCHAR" type
               (:typedef ("unsigned char")
                :type "typedef")
                nil [3373 3412])
            ("SP_USHORT" type
               (:typedef ("unsigned short int")
                :type "typedef")
                nil [3413 3453])
            ("SP_WORD" type
               (:typedef ("unsigned short int")
                :type "typedef")
                nil [3454 3492])
            ("SP_UINT" type
               (:typedef ("unsigned int")
                :type "typedef")
                nil [3493 3531])
            ("SP_HANDLE" type
               (:typedef ("void")
                :pointer 1
                :type "typedef")
                nil [3551 3591])
            ("SP_SYS_HANDLE" type
               (:typedef ("void")
                :pointer 1
                :type "typedef")
                nil [3599 3643])
            ("SPP_CHAR" type
               (:typedef ("SP_CHAR" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [3646 3685])
            ("SPP_SHORT" type
               (:typedef ("SP_SHORT" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [3686 3726])
            ("SPP_LONG" type
               (:typedef ("SP_LONG" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [3727 3766])
            ("SPP_INT" type
               (:typedef ("SP_INT" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [3767 3805])
            ("SPP_BOOLEAN" type
               (:typedef ("SP_BOOLEAN" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [3806 3848])
            ("SPP_BYTE" type
               (:typedef ("SP_BYTE" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [3849 3888])
            ("SPP_UCHAR" type
               (:typedef ("SP_UCHAR" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [3889 3929])
            ("SPP_USHORT" type
               (:typedef ("SP_USHORT" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [3930 3971])
            ("SPP_WORD" type
               (:typedef ("SP_WORD" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [3972 4011])
            ("SPP_ULONG" type
               (:typedef ("SP_ULONG" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [4012 4052])
            ("SPP_DWORD" type
               (:typedef ("SP_DWORD" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [4053 4093])
            ("SPP_VOID" type
               (:typedef ("SP_VOID" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [4094 4133])
            ("SPP_HANDLE" type
               (:typedef ("SP_HANDLE" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [4134 4175])
            ("SPP_SYS_HANDLE" type
               (:typedef ("SP_SYS_HANDLE" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [4176 4221])
            ("SP_STATUS" type
               (:typedef ("SP_DWORD" type (:type "class") nil nil)
                :type "typedef")
                nil [4222 4255])
            ("SP_SUCCESS" variable (:constant-flag t) nil [4340 4350])
            ("SP_FAIL" variable (:constant-flag t) nil [4379 4386])
            ("SP_DRIVER_LIBRARY_ERROR_BASE" variable (:constant-flag t) nil [4424 4452])
            ("SP_DUAL_LIBRARY_ERROR_BASE" variable (:constant-flag t) nil [4470 4496])
            ("SP_SERVER_ERROR_BASE" variable (:constant-flag t) nil [4516 4536])
            ("SP_SHELL_ERROR_BASE" variable (:constant-flag t) nil [4562 4581])
            ("SP_SECURE_UPDATE_ERROR_BASE" variable (:constant-flag t) nil [4608 4635])
            ("SP_SETUP_LIBRARY_ERROR_BASE" variable (:constant-flag t) nil [4654 4681])
            ("SP_ERR_INVALID_PARAMETER" variable (:constant-flag t) nil [4736 4760])
            ("SP_ERR_SOFTWARE_KEY" variable (:constant-flag t) nil [4806 4825])
            ("SP_ERR_INVALID_LICENSE" variable (:constant-flag t) nil [4872 4894])
            ("SP_ERR_INVALID_FEATURE" variable (:constant-flag t) nil [4938 4960])
            ("SP_ERR_INVALID_TOKEN" variable (:constant-flag t) nil [5004 5024])
            ("SP_ERR_NO_LICENSE" variable (:constant-flag t) nil [5071 5088])
            ("SP_ERR_INSUFFICIENT_BUFFER" variable (:constant-flag t) nil [5138 5164])
            ("SP_ERR_VERIFY_FAILED" variable (:constant-flag t) nil [5207 5227])
            ("SP_ERR_CANNOT_OPEN_DRIVER" variable (:constant-flag t) nil [5274 5299])
            ("SP_ERR_ACCESS_DENIED" variable (:constant-flag t) nil [5342 5362])
            ("SP_ERR_INVALID_DEVICE_RESPONSE" variable (:constant-flag t) nil [5410 5440])
            ("SP_ERR_COMMUNICATIONS_ERROR" variable (:constant-flag t) nil [5483 5510])
            ("SP_ERR_COUNTER_LIMIT" variable (:constant-flag t) nil [5554 5574])
            ("SP_ERR_MEM_CORRUPT" variable (:constant-flag t) nil [5622 5640])
            ("SP_ERR_INVALID_FEATURE_TYPE" variable (:constant-flag t) nil [5691 5718])
            ("SP_ERR_DEVICE_IN_USE" variable (:constant-flag t) nil [5762 5782])
            ("SP_ERR_INVALID_API_VERSION" variable (:constant-flag t) nil [5830 5856])
            ("SP_ERR_TIME_OUT_ERROR" variable (:constant-flag t) nil [5900 5921])
            ("SP_ERR_INVALID_PACKET" variable (:constant-flag t) nil [5969 5990])
            ("SP_ERR_KEY_NOT_ACTIVE" variable (:constant-flag t) nil [6038 6059])
            ("SP_ERR_FUNCTION_NOT_ENABLED" variable (:constant-flag t) nil [6107 6134])
            ("SP_ERR_DEVICE_RESET" variable (:constant-flag t) nil [6178 6197])
            ("SP_ERR_TIME_CHEAT" variable (:constant-flag t) nil [6245 6262])
            ("SP_ERR_INVALID_COMMAND" variable (:constant-flag t) nil [6313 6335])
            ("SP_ERR_RESOURCE" variable (:constant-flag t) nil [6380 6395])
            ("SP_ERR_UNIT_NOT_FOUND" variable (:constant-flag t) nil [6447 6468])
            ("SP_ERR_DEMO_EXPIRED" variable (:constant-flag t) nil [6516 6535])
            ("SP_ERR_QUERY_TOO_LONG" variable (:constant-flag t) nil [6583 6604])
            ("SP_ERR_USER_AUTH_REQUIRED" variable (:constant-flag t) nil [6652 6677])
            ("SP_ERR_DUPLICATE_LIC_ID" variable (:constant-flag t) nil [6725 6748])
            ("SP_ERR_DECRYPTION_FAILED" variable (:constant-flag t) nil [6803 6827])
            ("SP_ERR_BAD_CHKSUM" variable (:constant-flag t) nil [6881 6898])
            ("SP_ERR_BAD_LICENSE_IMAGE" variable (:constant-flag t) nil [6959 6983])
            ("SP_ERR_INSUFFICIENT_MEMORY" variable (:constant-flag t) nil [7037 7063])
            ("SP_ERR_CONFIG_FILE_NOT_FOUND" variable (:constant-flag t) nil [7116 7144])
            ("SP_ERR_SERVER_PROBABLY_NOT_UP" variable (:constant-flag t) nil [7219 7248])
            ("SP_ERR_UNKNOWN_HOST" variable (:constant-flag t) nil [7290 7309])
            ("SP_ERR_BAD_SERVER_MESSAGE" variable (:constant-flag t) nil [7361 7386])
            ("SP_ERR_NO_LICENSE_AVAILABLE" variable (:constant-flag t) nil [7432 7459])
            ("SP_ERR_INVALID_OPERATION" variable (:constant-flag t) nil [7503 7527])
            ("SP_ERR_INTERNAL_ERROR" variable (:constant-flag t) nil [7574 7595])
            ("SP_ERR_PROTOCOL_NOT_INSTALLED" variable (:constant-flag t) nil [7645 7674])
            ("SP_ERR_BAD_CLIENT_MESSAGE" variable (:constant-flag t) nil [7716 7741])
            ("SP_ERR_SOCKET_OPERATION" variable (:constant-flag t) nil [7787 7810])
            ("SP_ERR_NO_SERVER_RESPONSE" variable (:constant-flag t) nil [7858 7883])
            ("SP_ERR_SERVER_BUSY" variable (:constant-flag t) nil [7931 7949])
            ("SP_ERR_SERVER_TIME_OUT" variable (:constant-flag t) nil [8003 8025])
            ("SP_ERR_BAD_ALGO" variable (:constant-flag t) nil [8102 8117])
            ("SP_ERR_LONG_MSG" variable (:constant-flag t) nil [8173 8188])
            ("SP_ERR_READ_ERROR" variable (:constant-flag t) nil [8244 8261])
            ("SP_ERR_NOT_ENOUGH_MEMORY" variable (:constant-flag t) nil [8315 8339])
            ("SP_ERR_CANNOT_OPEN" variable (:constant-flag t) nil [8386 8404])
            ("SP_ERR_WRITE_ERROR" variable (:constant-flag t) nil [8457 8475])
            ("SP_ERR_CANNOT_OVERWRITE" variable (:constant-flag t) nil [8528 8551])
            ("SP_ERR_INVALID_HEADER" variable (:constant-flag t) nil [8599 8620])
            ("SP_ERR_TMP_CREATE_ERROR" variable (:constant-flag t) nil [8670 8693])
            ("SP_ERR_PATH_NOT_THERE" variable (:constant-flag t) nil [8741 8762])
            ("SP_ERR_BAD_FILE_INFO" variable (:constant-flag t) nil [8813 8833])
            ("SP_ERR_NOT_WIN32_FILE" variable (:constant-flag t) nil [8885 8906])
            ("SP_ERR_INVALID_MACHINE" variable (:constant-flag t) nil [8957 8979])
            ("SP_ERR_INVALID_SECTION" variable (:constant-flag t) nil [9029 9051])
            ("SP_ERR_INVALID_RELOC" variable (:constant-flag t) nil [9101 9121])
            ("SP_ERR_CRYPT_ERROR" variable (:constant-flag t) nil [9173 9191])
            ("SP_ERR_SMARTHEAP_ERROR" variable (:constant-flag t) nil [9245 9267])
            ("SP_ERR_IMPORT_OVERWRITE_ERROR" variable (:constant-flag t) nil [9317 9346])
            ("SP_ERR_FRAMEWORK_REQUIRED" variable (:constant-flag t) nil [9389 9414])
            ("SP_ERR_CANNOT_HANDLE_FILE" variable (:constant-flag t) nil [9461 9486])
            ("SP_ERR_STRONG_NAME" variable (:constant-flag t) nil [9534 9552])
            ("SP_ERR_FRAMEWORK_10" variable (:constant-flag t) nil [9605 9624])
            ("SP_ERR_FRAMEWORK_SDK_10" variable (:constant-flag t) nil [9676 9699])
            ("SP_ERR_FRAMEWORK_11" variable (:constant-flag t) nil [9748 9767])
            ("SP_ERR_FRAMEWORK_SDK_11" variable (:constant-flag t) nil [9819 9842])
            ("SP_ERR_FRAMEWORK_20" variable (:constant-flag t) nil [9890 9909])
            ("SP_ERR_FRAMEWORK_SDK_20" variable (:constant-flag t) nil [9961 9984])
            ("SP_ERR_APP_NOT_SUPPORTED" variable (:constant-flag t) nil [10032 10056])
            ("SP_ERR_FILE_COPY" variable (:constant-flag t) nil [10103 10119])
            ("SP_ERR_HEADER_SIZE_EXCEED" variable (:constant-flag t) nil [10168 10193])
            ("SP_ERR_SGEN" variable (:constant-flag t) nil [10239 10250])
            ("SP_ERR_CODE_MORPHING" variable (:constant-flag t) nil [10292 10312])
            ("SP_ERR_PARAMETER_MISSING" variable (:constant-flag t) nil [10397 10421])
            ("SP_ERR_PARAMETER_IDENTIFIER_MISSING" variable (:constant-flag t) nil [10466 10501])
            ("SP_ERR_PARAMETER_INVALID" variable (:constant-flag t) nil [10544 10568])
            ("SP_ERR_REGISTRY" variable (:constant-flag t) nil [10613 10628])
            ("SP_ERR_VERIFY_SIGN" variable (:constant-flag t) nil [10676 10694])
            ("SP_ERR_PARAMETER" variable (:constant-flag t) nil [10741 10757])
            ("SP_ERR_LICENSE_TEMPLATE_FILE" variable (:constant-flag t) nil [10804 10832])
            ("SP_ERR_NO_DEVELOPER_KEY" variable (:constant-flag t) nil [10873 10896])
            ("SP_ERR_NO_ENDUSER_KEY" variable (:constant-flag t) nil [10948 10969])
            ("SP_ERR_NO_POINT_KEYS" variable (:constant-flag t) nil [11018 11038])
            ("SP_ERR_NO_SHELL_FEATURE" variable (:constant-flag t) nil [11087 11110])
            ("SP_ERR_SHELL_OPTION_FILE_MISSING" variable (:constant-flag t) nil [11159 11191])
            ("SP_ERR_SHELL_OPTION_FILE_FORMAT" variable (:constant-flag t) nil [11234 11265])
            ("SP_ERR_SHELL_OPTION_FILE_INVALID" variable (:constant-flag t) nil [11310 11342])
            ("SP_ERR_DELETE_LICENSE" variable (:constant-flag t) nil [11389 11410])
            ("SP_ERR_FILE_CREATE_FAILED" variable (:constant-flag t) nil [11468 11493])
            ("SP_ERR_SHELLFILES_LIMIT" variable (:constant-flag t) nil [11547 11570])
            ("SP_ERR_SINGLE_INSTANCE_ERROR" variable (:constant-flag t) nil [11626 11654])
            ("SP_ERR_NO_EXE_FILE" variable (:constant-flag t) nil [11706 11724])
            ("SP_ERR_KEY_NOT_FOUND" variable (:constant-flag t) nil [11818 11838])
            ("SP_ERR_ILLEGAL_UPDATE" variable (:constant-flag t) nil [11896 11917])
            ("SP_ERR_DLL_LOAD_ERROR" variable (:constant-flag t) nil [11974 11995])
            ("SP_ERR_NO_CONFIG_FILE" variable (:constant-flag t) nil [12052 12073])
            ("SP_ERR_INVALID_CONFIG_FILE" variable (:constant-flag t) nil [12130 12156])
            ("SP_ERR_UPDATE_WIZARD_NOT_FOUND" variable (:constant-flag t) nil [12209 12239])
            ("SP_ERR_UPDATE_WIZARD_SPAWN_ERROR" variable (:constant-flag t) nil [12287 12319])
            ("SP_ERR_EXCEPTION_ERROR" variable (:constant-flag t) nil [12365 12387])
            ("SP_ERR_INVALID_CLIENT_LIB" variable (:constant-flag t) nil [12443 12468])
            ("SP_ERR_CABINET_DLL" variable (:constant-flag t) nil [12521 12539])
            ("SP_ERR_INSUFFICIENT_REQ_CODE_BUFFER" variable (:constant-flag t) nil [12600 12635])
            ("SP_ERR_UPDATE_WIZARD_USER_CANCELED" variable (:constant-flag t) nil [12679 12713])
            ("SP_ERR_INVALID_DLL_VERSION" variable (:constant-flag t) nil [12808 12834])
            ("SP_ERR_INVALID_FILE_TYPE" variable (:constant-flag t) nil [12887 12911])
            ("SP_ERR_NLF_DUPLICATE_FEATURE_ID" variable (:constant-flag t) nil [13006 13037])
            ("SP_ERR_NLF_DUPLICATE_LICENSE_ID" variable (:constant-flag t) nil [13085 13116])
            ("SP_ERR_NLF_SIZEOVERFLOW" variable (:constant-flag t) nil [13164 13187])
            ("SP_ERR_BAD_XML" variable (:constant-flag t) nil [13246 13260])
            ("SP_ERR_BAD_PACKET" variable (:constant-flag t) nil [13317 13334])
            ("SP_ERR_BAD_FEATURE" variable (:constant-flag t) nil [13388 13406])
            ("SP_ERR_BAD_HEADER" variable (:constant-flag t) nil [13459 13476])
            ("SP_ERR_ISV_MISSING" variable (:constant-flag t) nil [13531 13549])
            ("SP_ERR_DEVID_MISMATCH" variable (:constant-flag t) nil [13603 13624])
            ("SP_ERR_LM_TOKEN_ERROR" variable (:constant-flag t) nil [13674 13695])
            ("SP_ERR_LM_MISSING" variable (:constant-flag t) nil [13745 13762])
            ("SP_ERR_INVALID_SIZE" variable (:constant-flag t) nil [13816 13835])
            ("SP_ERR_FEATURE_NOT_FOUND" variable (:constant-flag t) nil [13887 13911])
            ("SP_ERR_LICENSE_NOT_FOUND" variable (:constant-flag t) nil [13960 13984])
            ("SP_ERR_BEYOND_RANGE" variable (:constant-flag t) nil [14033 14052]))          
      :file "SentinelKeystypes.h"
      :pointmax 14107
      :fsize 14106
      :lastmodtime '(21956 21909 674987 424000)
      :unmatched-syntax nil
      :lexical-table 
        '(("_16BIT_" . ((number "1" 1185 . 1186)))
          ("SP_OUT")
          ("SP_IO")
          ("SP_STRUCT" . ((TYPEDEF "typedef" 2539 . 2546) (STRUCT "struct" 2547 . 2553)))
          ("SP_SECURE_UPDATE_ERROR_BASE" . ((number "500" 4642 . 4645)))
          ("SP_ERR_INSUFFICIENT_BUFFER" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 7)" 5166 . 5198)))
          ("SP_ERR_DEMO_EXPIRED" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 27)" 6541 . 6574)))
          ("SP_ERR_BAD_LICENSE_IMAGE" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 33)" 6995 . 7028)))
          ("SP_ERR_PROTOCOL_NOT_INSTALLED" . ((semantic-list "(SP_SERVER_ERROR_BASE + 7)" 7681 . 7707)))
          ("SP_ERR_PARAMETER_MISSING" . ((semantic-list "(SP_SHELL_ERROR_BASE + 50)" 10431 . 10457)))
          ("SP_ERR_NO_ENDUSER_KEY" . ((semantic-list "(SP_SHELL_ERROR_BASE + 59)" 10983 . 11009)))
          ("SP_ERR_SHELL_OPTION_FILE_MISSING" . ((semantic-list "(SP_SHELL_ERROR_BASE + 62)" 11199 . 11225)))
          ("SP_ERR_CABINET_DLL" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 10)" 12557 . 12591)))
          ("SP_ERR_INSUFFICIENT_REQ_CODE_BUFFER" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 11)" 12636 . 12670)))
          ("SP_ERR_INVALID_PARAMETER" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 1)" 4765 . 4797)))
          ("SP_ERR_VERIFY_FAILED" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 8)" 5233 . 5265)))
          ("SP_ERR_MEM_CORRUPT" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 14)" 5649 . 5682)))
          ("SP_ERR_CANNOT_OVERWRITE" . ((semantic-list "(SP_SHELL_ERROR_BASE + 7)" 8565 . 8590)))
          ("SP_ERR_APP_NOT_SUPPORTED" . ((semantic-list "(SP_SHELL_ERROR_BASE + 33)" 10068 . 10094)))
          ("SP_ERR_HEADER_SIZE_EXCEED" . ((semantic-list "(SP_SHELL_ERROR_BASE + 35)" 10204 . 10230)))
          ("SP_ERR_NO_DEVELOPER_KEY" . ((semantic-list "(SP_SHELL_ERROR_BASE + 58)" 10913 . 10939)))
          ("SP_ERR_NO_EXE_FILE" . ((semantic-list "(SP_SHELL_ERROR_BASE +  69)" 11749 . 11776)))
          ("SP_ERR_INVALID_CONFIG_FILE" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 5)" 12166 . 12199)))
          ("SP_ERR_INVALID_DLL_VERSION" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 13)" 12844 . 12878)))
          ("SP_ERR_BAD_XML" . ((semantic-list "(SP_SETUP_LIBRARY_ERROR_BASE + 1)" 13275 . 13308)))
          ("SP_ERR_BAD_HEADER" . ((semantic-list "(SP_SETUP_LIBRARY_ERROR_BASE + 4)" 13488 . 13521)))
          ("SP_SERVER_ERROR_BASE" . ((number "300" 4550 . 4553)))
          ("SP_SHELL_ERROR_BASE" . ((number "400" 4596 . 4599)))
          ("SP_ERR_UNKNOWN_HOST" . ((semantic-list "(SP_SERVER_ERROR_BASE + 2)" 7326 . 7352)))
          ("SP_ERR_LONG_MSG" . ((semantic-list "(SP_SHELL_ERROR_BASE + 2)" 8210 . 8235)))
          ("SP_ERR_READ_ERROR" . ((semantic-list "(SP_SHELL_ERROR_BASE + 3)" 8281 . 8306)))
          ("SP_ERR_INVALID_RELOC" . ((semantic-list "(SP_SHELL_ERROR_BASE + 15)" 9138 . 9164)))
          ("SP_ERR_CRYPT_ERROR" . ((semantic-list "(SP_SHELL_ERROR_BASE + 16)" 9210 . 9236)))
          ("SP_ERR_IMPORT_OVERWRITE_ERROR" . ((semantic-list "(SP_SHELL_ERROR_BASE + 18)" 9354 . 9380)))
          ("SP_ERR_SGEN" . ((semantic-list "(SP_SHELL_ERROR_BASE + 36)" 10257 . 10283)))
          ("SP_ERR_PARAMETER_INVALID" . ((semantic-list "(SP_SHELL_ERROR_BASE + 52)" 10578 . 10604)))
          ("SP_ERR_SHELL_OPTION_FILE_INVALID" . ((semantic-list "(SP_SHELL_ERROR_BASE +  64)" 11353 . 11380)))
          ("SP_ERR_FILE_CREATE_FAILED" . ((semantic-list "(SP_SHELL_ERROR_BASE +  66)" 11511 . 11538)))
          ("SP_ERR_NO_CONFIG_FILE" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 4)" 12088 . 12121)))
          ("SP_FALSE" . ((number "0" 2625 . 2626)))
          ("SP_ERR_INVALID_TOKEN" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 5)" 5030 . 5062)))
          ("SP_ERR_ACCESS_DENIED" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 10)" 5368 . 5401)))
          ("SP_ERR_INSUFFICIENT_MEMORY" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 34)" 7073 . 7106)))
          ("SP_ERR_SERVER_BUSY" . ((semantic-list "(SP_SERVER_ERROR_BASE + 11)" 7967 . 7994)))
          ("SP_ERR_PARAMETER_IDENTIFIER_MISSING" . ((semantic-list "(SP_SHELL_ERROR_BASE + 51)" 10509 . 10535)))
          ("SP_ERR_INVALID_SIZE" . ((semantic-list "(SP_SETUP_LIBRARY_ERROR_BASE + 9)" 13845 . 13878)))
          ("SP_ERR_LICENSE_NOT_FOUND" . ((semantic-list "(SP_SETUP_LIBRARY_ERROR_BASE + 11)" 13989 . 14023)))
          ("_DOS_" . ((number "1" 1167 . 1168)))
          ("SP_API")
          ("SP_PTR" . ((punctuation "*" 2373 . 2374)))
          ("SP_ERR_STRONG_NAME" . ((semantic-list "(SP_SHELL_ERROR_BASE + 26)" 9570 . 9596)))
          ("SP_ERR_CODE_MORPHING" . ((semantic-list "(SP_SHELL_ERROR_BASE + 37)" 10316 . 10342)))
          ("SP_ERR_SHELL_OPTION_FILE_FORMAT" . ((semantic-list "(SP_SHELL_ERROR_BASE +  63)" 11274 . 11301)))
          ("SP_ERR_EXCEPTION_ERROR" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 8)" 12401 . 12434)))
          ("SP_ERR_NLF_DUPLICATE_FEATURE_ID" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 30)" 13042 . 13076)))
          ("SP_ERR_DEVID_MISMATCH" . ((semantic-list "(SP_SETUP_LIBRARY_ERROR_BASE + 6)" 13632 . 13665)))
          ("SP_UNION" . ((TYPEDEF "typedef" 2572 . 2579) (UNION "union" 2580 . 2585)))
          ("SP_EXPORT" . ((EXTERN "extern" 2665 . 2671) (string "\"C\"" 2672 . 2675)))
          ("SP_ERR_CONFIG_FILE_NOT_FOUND" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 35)" 7151 . 7184)))
          ("SP_ERR_INVALID_OPERATION" . ((semantic-list "(SP_SERVER_ERROR_BASE + 5)" 7539 . 7565)))
          ("SP_ERR_SOCKET_OPERATION" . ((semantic-list "(SP_SERVER_ERROR_BASE + 9)" 7823 . 7849)))
          ("SP_ERR_SERVER_TIME_OUT" . ((semantic-list "(SP_SERVER_ERROR_BASE + 12)" 8039 . 8066)))
          ("SP_ERR_PATH_NOT_THERE" . ((semantic-list "(SP_SHELL_ERROR_BASE + 10)" 8778 . 8804)))
          ("SP_ERR_CANNOT_HANDLE_FILE" . ((semantic-list "(SP_SHELL_ERROR_BASE + 22)" 9498 . 9524)))
          ("SP_ERR_PARAMETER" . ((semantic-list "(SP_SHELL_ERROR_BASE + 56)" 10769 . 10795)))
          ("SP_ERR_DLL_LOAD_ERROR" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 3)" 12010 . 12043)))
          ("SP_ERR_ISV_MISSING" . ((semantic-list "(SP_SETUP_LIBRARY_ERROR_BASE + 5)" 13560 . 13593)))
          ("_SENTINEL_KEYS_TYPES_H")
          ("SP_DRIVER_LIBRARY_ERROR_BASE" . ((number "100" 4458 . 4461)))
          ("SP_ERR_SOFTWARE_KEY" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 2)" 4831 . 4863)))
          ("SP_ERR_INVALID_LICENSE" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 3)" 4897 . 4929)))
          ("SP_ERR_COUNTER_LIMIT" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 13)" 5580 . 5613)))
          ("SP_ERR_FUNCTION_NOT_ENABLED" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 21)" 6136 . 6169)))
          ("SP_ERR_QUERY_TOO_LONG" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 28)" 6610 . 6643)))
          ("SP_ERR_NOT_ENOUGH_MEMORY" . ((semantic-list "(SP_SHELL_ERROR_BASE + 4)" 8352 . 8377)))
          ("SP_ERR_FRAMEWORK_10" . ((semantic-list "(SP_SHELL_ERROR_BASE + 27)" 9641 . 9667)))
          ("SP_ERR_FRAMEWORK_SDK_10" . ((semantic-list "(SP_SHELL_ERROR_BASE + 28)" 9712 . 9738)))
          ("SP_ERR_REGISTRY" . ((semantic-list "(SP_SHELL_ERROR_BASE + 54)" 10641 . 10667)))
          ("SP_ERR_LM_TOKEN_ERROR" . ((semantic-list "(SP_SETUP_LIBRARY_ERROR_BASE + 7)" 13703 . 13736)))
          ("SP_ERR_INVALID_FEATURE" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 4)" 4963 . 4995)))
          ("SP_ERR_INVALID_DEVICE_RESPONSE" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 11)" 5441 . 5474)))
          ("SP_ERR_INVALID_PACKET" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 19)" 5996 . 6029)))
          ("SP_ERR_WRITE_ERROR" . ((semantic-list "(SP_SHELL_ERROR_BASE + 6)" 8494 . 8519)))
          ("SP_ERR_SMARTHEAP_ERROR" . ((semantic-list "(SP_SHELL_ERROR_BASE + 17)" 9282 . 9308)))
          ("SP_ERR_FRAMEWORK_11" . ((semantic-list "(SP_SHELL_ERROR_BASE + 29)" 9784 . 9810)))
          ("SP_ERR_FRAMEWORK_SDK_11" . ((semantic-list "(SP_SHELL_ERROR_BASE + 30)" 9855 . 9881)))
          ("SP_ERR_NO_SHELL_FEATURE" . ((semantic-list "(SP_SHELL_ERROR_BASE + 61)" 11124 . 11150)))
          ("SP_ERR_ILLEGAL_UPDATE" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 2)" 11932 . 11965)))
          ("SP_ERR_INVALID_CLIENT_LIB" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 9)" 12479 . 12512)))
          ("SP_ERR_NLF_SIZEOVERFLOW" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 32)" 13200 . 13234)))
          ("SP_ERR_LM_MISSING" . ((semantic-list "(SP_SETUP_LIBRARY_ERROR_BASE + 8)" 13774 . 13807)))
          ("SP_INOUT")
          ("SP_ERR_INVALID_FEATURE_TYPE" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 15)" 5720 . 5753)))
          ("SP_ERR_KEY_NOT_ACTIVE" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 20)" 6065 . 6098)))
          ("SP_ERR_INVALID_COMMAND" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 24)" 6338 . 6371)))
          ("SP_ERR_BAD_SERVER_MESSAGE" . ((semantic-list "(SP_SERVER_ERROR_BASE + 3)" 7397 . 7423)))
          ("SP_ERR_INVALID_MACHINE" . ((semantic-list "(SP_SHELL_ERROR_BASE + 13)" 8994 . 9020)))
          ("SP_ERR_VERIFY_SIGN" . ((semantic-list "(SP_SHELL_ERROR_BASE + 55)" 10706 . 10732)))
          ("SP_ERR_NO_POINT_KEYS" . ((semantic-list "(SP_SHELL_ERROR_BASE + 60)" 11052 . 11078)))
          ("SP_ERR_DELETE_LICENSE" . ((semantic-list "(SP_SHELL_ERROR_BASE +  65)" 11432 . 11459)))
          ("SP_ERR_FEATURE_NOT_FOUND" . ((semantic-list "(SP_SETUP_LIBRARY_ERROR_BASE + 10)" 13916 . 13950)))
          ("SP_SUCCESS" . ((number "0" 4369 . 4370)))
          ("SP_ERR_CANNOT_OPEN_DRIVER" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 9)" 5301 . 5333)))
          ("SP_ERR_INVALID_API_VERSION" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 17)" 5858 . 5891)))
          ("SP_ERR_DEVICE_RESET" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 22)" 6203 . 6236)))
          ("SP_ERR_UNIT_NOT_FOUND" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 26)" 6474 . 6507)))
          ("SP_ERR_NO_LICENSE_AVAILABLE" . ((semantic-list "(SP_SERVER_ERROR_BASE + 4)" 7468 . 7494)))
          ("SP_ERR_CANNOT_OPEN" . ((semantic-list "(SP_SHELL_ERROR_BASE + 5)" 8423 . 8448)))
          ("SP_ERR_TMP_CREATE_ERROR" . ((semantic-list "(SP_SHELL_ERROR_BASE + 9)" 8707 . 8732)))
          ("SP_ERR_BAD_FILE_INFO" . ((semantic-list "(SP_SHELL_ERROR_BASE + 11)" 8850 . 8876)))
          ("SP_ERR_INVALID_SECTION" . ((semantic-list "(SP_SHELL_ERROR_BASE + 14)" 9066 . 9092)))
          ("SP_ERR_FRAMEWORK_20" . ((semantic-list "(SP_SHELL_ERROR_BASE + 31)" 9926 . 9952)))
          ("SP_ERR_FRAMEWORK_SDK_20" . ((semantic-list "(SP_SHELL_ERROR_BASE + 32)" 9997 . 10023)))
          ("SP_ERR_LICENSE_TEMPLATE_FILE" . ((semantic-list "(SP_SHELL_ERROR_BASE + 57)" 10838 . 10864)))
          ("SP_ERR_SHELLFILES_LIMIT" . ((semantic-list "(SP_SHELL_ERROR_BASE +  67)" 11590 . 11617)))
          ("SP_ERR_UPDATE_WIZARD_SPAWN_ERROR" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 7)" 12323 . 12356)))
          ("SP_ERR_NLF_DUPLICATE_LICENSE_ID" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 31)" 13121 . 13155)))
          ("SP_ERR_BAD_FEATURE" . ((semantic-list "(SP_SETUP_LIBRARY_ERROR_BASE + 3)" 13417 . 13450)))
          ("SP_ERR_BEYOND_RANGE" . ((semantic-list "(SP_SETUP_LIBRARY_ERROR_BASE + 12)" 14062 . 14096)))
          ("SP_FAIL" . ((number "1" 4413 . 4414)))
          ("SP_DUAL_LIBRARY_ERROR_BASE" . ((number "200" 4504 . 4507)))
          ("SP_ERR_NO_LICENSE" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 6)" 5097 . 5129)))
          ("SP_ERR_DEVICE_IN_USE" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 16)" 5788 . 5821)))
          ("SP_ERR_USER_AUTH_REQUIRED" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 29)" 6683 . 6716)))
          ("SP_ERR_DUPLICATE_LIC_ID" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 30)" 6761 . 6794)))
          ("SP_ERR_DECRYPTION_FAILED" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 31)" 6839 . 6872)))
          ("SP_ERR_BAD_CHKSUM" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 32)" 6917 . 6950)))
          ("SP_ERR_INVALID_HEADER" . ((semantic-list "(SP_SHELL_ERROR_BASE + 8)" 8636 . 8661)))
          ("SP_ERR_NOT_WIN32_FILE" . ((semantic-list "(SP_SHELL_ERROR_BASE + 12)" 8922 . 8948)))
          ("SP_ERR_FILE_COPY" . ((semantic-list "(SP_SHELL_ERROR_BASE + 34)" 10133 . 10159)))
          ("SP_ERR_SINGLE_INSTANCE_ERROR" . ((semantic-list "(SP_SHELL_ERROR_BASE +  68)" 11669 . 11696)))
          ("SP_ERR_KEY_NOT_FOUND" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 1)" 11854 . 11887)))
          ("SP_ERR_UPDATE_WIZARD_NOT_FOUND" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 6)" 12245 . 12278)))
          ("SP_ERR_INVALID_FILE_TYPE" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 14)" 12923 . 12957)))
          ("SP_TRUE" . ((number "1" 2605 . 2606)))
          ("SP_LOCAL" . ((STATIC "static" 2751 . 2757)))
          ("SP_SETUP_LIBRARY_ERROR_BASE" . ((number "700" 4688 . 4691)))
          ("SP_ERR_COMMUNICATIONS_ERROR" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 12)" 5512 . 5545)))
          ("SP_ERR_TIME_OUT_ERROR" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 18)" 5927 . 5960)))
          ("SP_ERR_TIME_CHEAT" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 23)" 6271 . 6304)))
          ("SP_ERR_SERVER_PROBABLY_NOT_UP" . ((semantic-list "(SP_SERVER_ERROR_BASE + 1)" 7255 . 7281)))
          ("SP_ERR_INTERNAL_ERROR" . ((semantic-list "(SP_SERVER_ERROR_BASE + 6)" 7610 . 7636)))
          ("SP_ERR_NO_SERVER_RESPONSE" . ((semantic-list "(SP_SERVER_ERROR_BASE + 10)" 7894 . 7921)))
          ("SP_ERR_BAD_ALGO" . ((semantic-list "(SP_SHELL_ERROR_BASE + 1)" 8139 . 8164)))
          ("SP_ERR_FRAMEWORK_REQUIRED" . ((semantic-list "(SP_SHELL_ERROR_BASE + 21)" 9426 . 9452)))
          ("SP_ERR_UPDATE_WIZARD_USER_CANCELED" . ((semantic-list "(SP_SECURE_UPDATE_ERROR_BASE + 12)" 12715 . 12749)))
          ("SP_ERR_BAD_PACKET" . ((semantic-list "(SP_SETUP_LIBRARY_ERROR_BASE + 2)" 13346 . 13379)))
          ("SP_IN")
          ("SP_ERR_RESOURCE" . ((semantic-list "(SP_DUAL_LIBRARY_ERROR_BASE + 25)" 6405 . 6438)))
          ("SP_ERR_BAD_CLIENT_MESSAGE" . ((semantic-list "(SP_SERVER_ERROR_BASE + 8)" 7752 . 7778)))
          )
)
    (semanticdb-table "SecureUpdate.h"
      :major-mode 'c-mode
      :tags 
        '( ("SentinelKeystypes.h" include nil nil [270 300])
            ("SFNTGenerateRequestCode" function
               (:prototype-flag t
                :arguments 
                  ( ("SP_DWORD" variable (:type ("SP_IN" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1291 1325])
                    ("" variable (:type ("DeveloperID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1314 1326])
                    ("SP_DWORD" variable (:type ("SP_IN" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1368 1400])
                    ("" variable (:type ("licenseID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1391 1401])
                    ("SPP_BYTE" variable (:type ("SP_OUT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1443 1479])
                    ("" variable (:type ("requestBuffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1466 1480])
                    ("SPP_DWORD" variable (:type ("SP_INOUT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1522 1555])
                    ("" variable (:type ("bufferSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1545 1556]))                  
                :type "unsigned short")
                nil [1250 1557])
            ("TSFNTGenerateRequestCodeFnPtr" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("DeveloperID" variable (:type ("SP_DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1616 1640])
                    ("licenseID" variable (:type ("SP_DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1698 1720])
                    ("requestBuffer" variable (:type ("SPP_BYTE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1778 1804])
                    ("bufferSize" variable (:type ("SPP_DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1862 1885]))                  
                :type "unsigned short")
                nil [1568 1886])
            ("SFNTApplyUpdateCode" function
               (:prototype-flag t
                :arguments 
                  ( ("SPP_BYTE" variable (:type ("SP_IN" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1935 1963])
                    ("" variable (:type ("updateCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1953 1964])
                    ("SP_DWORD" variable (:type ("SP_IN" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2002 2024])
                    ("" variable (:type ("size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2020 2025]))                  
                :type "unsigned short")
                nil [1898 2026])
            ("TSFNTApplyUpdateCodeFnPtr" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("updateCode" variable (:type ("SPP_BYTE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2080 2101])
                    ("size" variable (:type ("SP_DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2154 2169]))                  
                :type "unsigned short")
                nil [2036 2170]))          
      :file "SecureUpdate.h"
      :pointmax 2180
      :fsize 2179
      :lastmodtime '(21956 21909 674987 424000)
      :unmatched-syntax '((TYPEDEF 2028 . 2035) (symbol 1888 . 1897) (TYPEDEF 1559 . 1566) (symbol 1240 . 1249))))
  :file "!home!chz!Documents!加密狗Linux!Sentinel_Keys_SDK_Components!sentinel_keys_installer!language_packs!en_US!SecureUpdateUtility!INTF!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
