;; Object JustForFun/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "JustForFun/"
  :tables
  (list
    (semanticdb-table "life.c"
      :major-mode 'c-mode
      :tags 
        '( ("curses.h" include (:system-flag t) nil [1 20])
            ("STARTX" variable
               (:default-value "0"
                :type "int")
                nil [22 37])
            ("STARTY" variable
               (:default-value "0"
                :type "int")
                nil [38 53])
            ("ENDX" variable
               (:default-value "79"
                :type "int")
                nil [54 68])
            ("ENDY" variable
               (:default-value "24"
                :type "int")
                nil [69 83])
            ("CELL_CHAR" variable (:constant-flag t) nil [93 102])
            ("TIME_OUT" variable (:constant-flag t) nil [115 123])
            ("_state" type
               (:members 
                  ( ("oldstate" variable (:type "int") (reparse-symbol classsubparts) [155 168])
                    ("newstate" variable (:type "int") (reparse-symbol classsubparts) [170 183]))                  
                :type "struct")
                nil [130 191])
            ("state" type
               (:typedef ("_state" type (:type "struct") nil nil)
                :type "typedef")
                nil [130 191])
            ("display" function
               (:prototype-flag t
                :arguments 
                  ( ("win" variable
                       (:pointer 1
                        :type ("WINDOW" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [206 218])
                    ("area" variable
                       (:pointer 2
                        :type ("state" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [219 232])
                    ("startx" variable (:type "int") (reparse-symbol arg-sub-list) [233 244])
                    ("starty" variable (:type "int") (reparse-symbol arg-sub-list) [245 256])
                    ("endx" variable (:type "int") (reparse-symbol arg-sub-list) [257 266])
                    ("endy" variable (:type "int") (reparse-symbol arg-sub-list) [267 276]))                  
                :type "void")
                nil [193 277])
            ("calc" function
               (:prototype-flag t
                :arguments 
                  ( ("area" variable
                       (:pointer 2
                        :type ("state" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [288 301])
                    ("x" variable (:type "int") (reparse-symbol arg-sub-list) [302 308])
                    ("y" variable (:type "int") (reparse-symbol arg-sub-list) [309 315]))                  
                :type "void")
                nil [278 316])
            ("update_state" function
               (:prototype-flag t
                :arguments 
                  ( ("area" variable
                       (:pointer 2
                        :type ("state" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [335 348])
                    ("startx" variable (:type "int") (reparse-symbol arg-sub-list) [349 360])
                    ("starty" variable (:type "int") (reparse-symbol arg-sub-list) [361 372])
                    ("endx" variable (:type "int") (reparse-symbol arg-sub-list) [373 382])
                    ("endy" variable (:type "int") (reparse-symbol arg-sub-list) [383 392]))                  
                :type "void")
                nil [317 393])
            ("main" function (:type "int") nil [395 1541])
            ("display" function
               (:arguments 
                  ( ("win" variable
                       (:pointer 1
                        :type ("WINDOW" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1557 1569])
                    ("area" variable
                       (:pointer 2
                        :type ("state" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1570 1583])
                    ("startx" variable (:type "int") (reparse-symbol arg-sub-list) [1584 1595])
                    ("starty" variable (:type "int") (reparse-symbol arg-sub-list) [1596 1607])
                    ("endx" variable (:type "int") (reparse-symbol arg-sub-list) [1608 1617])
                    ("endy" variable (:type "int") (reparse-symbol arg-sub-list) [1618 1627]))                  
                :type "void")
                nil [1544 1808])
            ("calc" function
               (:arguments 
                  ( ("area" variable
                       (:pointer 2
                        :type ("state" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1820 1833])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [1834 1840])
                    ("j" variable (:type "int") (reparse-symbol arg-sub-list) [1841 1847]))                  
                :type "void")
                nil [1810 2533])
            ("update_state" function
               (:arguments 
                  ( ("area" variable
                       (:pointer 2
                        :type ("state" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2553 2566])
                    ("startx" variable (:type "int") (reparse-symbol arg-sub-list) [2567 2578])
                    ("starty" variable (:type "int") (reparse-symbol arg-sub-list) [2579 2590])
                    ("endx" variable (:type "int") (reparse-symbol arg-sub-list) [2591 2600])
                    ("endy" variable (:type "int") (reparse-symbol arg-sub-list) [2601 2610]))                  
                :type "void")
                nil [2535 2739]))          
      :file "life.c"
      :pointmax 2741
      :fsize 2847
      :lastmodtime '(17074 58062 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("TIME_OUT" . ((number "300" 125 . 128)))
          ("CELL_CHAR" . ((string "'#'" 103 . 106)))
          )
))
  :file "!home!chz!Projects!CWork!snippets!ncurses!NCURSES-Programming-HOWTO!ncurses_programs!JustForFun!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
