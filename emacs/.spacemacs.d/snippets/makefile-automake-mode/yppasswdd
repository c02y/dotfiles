;; Object highlight-symbol-20140923.1029/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "highlight-symbol-20140923.1029/"
  :tables
  (list
    (semanticdb-table "highlight-symbol.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("thingatpt" include nil nil [3501 3521])
            ("cl" include nil nil [3541 3554])
            ("push" code nil nil [3557 3607])
            ("highlight-symbol" customgroup (:user-visible-flag t) nil [3609 3721])
            ("highlight-symbol-face" variable
               (:default-value (quote ((((class color) (background dark)) (:background "gray30")) (((class color) (background light)) (:background "gray90"))))
                :type "face")
                nil [3723 3961])
            ("highlight-symbol-timer" variable nil nil [3963 3998])
            ("highlight-symbol-update-timer" function (:arguments ("value")) nil [4000 4260])
            ("highlight-symbol-mode" variable nil nil [4262 4296])
            ("highlight-symbol-set" function (:arguments ("symbol" "value")) nil [4298 4449])
            ("highlight-symbol-idle-delay" variable (:default-value 1.5) nil [4451 4797])
            ("highlight-symbol-colors" variable (:default-value (quote ("yellow" "DeepPink" "cyan" "MediumPurple1" "SpringGreen1" "DarkOrange" "HotPink1" "RoyalBlue1" "OliveDrab"))) nil [4799 5139])
            ("highlight-symbol-on-navigation-p" variable nil nil [5141 5344])
            ("highlight-symbol-color-index" variable nil nil [5346 5385])
            ("make-variable-buffer-local" code nil nil [5386 5444])
            ("highlight-symbol" variable nil nil [5446 5475])
            ("make-variable-buffer-local" code nil nil [5476 5522])
            ("highlight-symbol-list" variable nil nil [5524 5558])
            ("make-variable-buffer-local" code nil nil [5559 5610])
            ("highlight-symbol-border-pattern" variable
               (:constant-flag t
                :default-value (if (>= emacs-major-version 22) (quote ("\\_<" . "\\_>")) (quote ("\\<" . "\\>"))))
                nil [5612 5725])
            ("highlight-symbol-foreground-color" variable
               (:user-visible-flag t
                :default-value "black")
                nil [5727 5938])
            ("define-minor-mode" code nil nil [5955 6526])
            ("highlight-symbol-at-point" function (:user-visible-flag t) nil [6543 6996])
            ("highlight-symbol-symbol-highlighted-p" function (:arguments ("symbol")) nil [6998 7150])
            ("highlight-symbol-add-symbol" function (:arguments ("symbol")) nil [7152 7886])
            ("highlight-symbol-add-symbol-with-face" function (:arguments ("symbol" "face")) nil [7888 8045])
            ("highlight-symbol-remove-symbol" function (:arguments ("symbol")) nil [8047 8321])
            ("highlight-symbol-uncompiled-keywords" function nil nil [8323 8464])
            ("highlight-symbol-remove-all" function (:user-visible-flag t) nil [8481 8640])
            ("highlight-symbol-list-all" function (:user-visible-flag t) nil [8657 8873])
            ("highlight-symbol-fontify-symbol" function (:arguments ("symbol")) nil [8875 9254])
            ("highlight-symbol-next" function (:user-visible-flag t) nil [9271 9419])
            ("highlight-symbol-prev" function (:user-visible-flag t) nil [9436 9589])
            ("highlight-symbol-next-in-defun" function (:user-visible-flag t) nil [9606 9807])
            ("highlight-symbol-prev-in-defun" function (:user-visible-flag t) nil [9824 10030])
            ("highlight-symbol-nav-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "\356" (quote highlight-symbol-next)) (define-key map "\360" (quote highlight-symbol-prev)) map)) nil [10032 10261])
            ("define-minor-mode" code nil nil [10278 10908])
            ("highlight-symbol-query-replace" function
               (:user-visible-flag t
                :arguments ("replacement"))
                nil [10925 11668])
            ("highlight-symbol-occur" function
               (:user-visible-flag t
                :arguments ("nlines"))
                nil [11685 12013])
            ("highlight-symbol-get-symbol" function nil nil [12015 12337])
            ("highlight-symbol-temp-highlight" function nil nil [12339 12866])
            ("highlight-symbol-mode-remove-temp" function nil nil [12868 13070])
            ("highlight-symbol-mode-post-command" function nil nil [13072 13607])
            ("highlight-symbol-jump" function (:arguments ("dir")) nil [13609 14584])
            ("highlight-symbol" package nil nil [14586 14613]))          
      :file "highlight-symbol.el"
      :pointmax 14649
      :fsize 14649
      :lastmodtime '(21626 40744 380107 713000)
      :unmatched-syntax '((close-paren 3554 . 3555) (symbol 3523 . 3540) (open-paren 3522 . 3523))))
  :file "!home!chz!.emacs.d!elpa!highlight-symbol-20140923.1029!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
