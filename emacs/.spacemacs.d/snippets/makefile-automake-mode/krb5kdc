;; Object highlight-symbol-20150816.628/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "highlight-symbol-20150816.628/"
  :tables
  (list
    (semanticdb-table "highlight-symbol.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("thingatpt" include nil nil [3804 3824])
            ("cl" include nil nil [3844 3857])
            ("push" code nil nil [3860 3910])
            ("highlight-symbol" customgroup (:user-visible-flag t) nil [3912 4024])
            ("highlight-symbol-face" variable
               (:default-value (quote ((((class color) (background dark)) (:background "gray30")) (((class color) (background light)) (:background "gray90"))))
                :type "face")
                nil [4026 4264])
            ("highlight-symbol-timer" variable nil nil [4266 4301])
            ("highlight-symbol-update-timer" function (:arguments ("value")) nil [4303 4563])
            ("highlight-symbol-mode" variable nil nil [4565 4599])
            ("highlight-symbol-set" function (:arguments ("symbol" "value")) nil [4601 4752])
            ("highlight-symbol-idle-delay" variable (:default-value 1.5) nil [4754 5100])
            ("highlight-symbol-highlight-single-occurrence" variable (:default-value t) nil [5102 5384])
            ("highlight-symbol-colors" variable (:default-value (quote ("yellow" "DeepPink" "cyan" "MediumPurple1" "SpringGreen1" "DarkOrange" "HotPink1" "RoyalBlue1" "OliveDrab"))) nil [5386 5717])
            ("highlight-symbol-on-navigation-p" variable nil nil [5719 5922])
            ("highlight-symbol-ignore-list" variable (:default-value (quote nil)) nil [5924 6100])
            ("highlight-symbol-color-index" variable nil nil [6102 6141])
            ("make-variable-buffer-local" code nil nil [6142 6200])
            ("highlight-symbol" variable nil nil [6202 6231])
            ("make-variable-buffer-local" code nil nil [6232 6278])
            ("highlight-symbol-list" variable nil nil [6280 6314])
            ("make-variable-buffer-local" code nil nil [6315 6366])
            ("highlight-symbol-border-pattern" variable
               (:constant-flag t
                :default-value (if (>= emacs-major-version 22) (quote ("\\_<" . "\\_>")) (quote ("\\<" . "\\>"))))
                nil [6368 6481])
            ("highlight-symbol-foreground-color" variable
               (:user-visible-flag t
                :default-value "black")
                nil [6483 6694])
            ("highlight-symbol-occurrence-message" variable
               (:user-visible-flag t
                :default-value (quote (explicit navigation)))
                nil [6696 7354])
            ("define-minor-mode" code nil nil [7371 7942])
            ("defalias" code nil nil [7959 8014])
            ("highlight-symbol" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [8031 8633])
            ("highlight-symbol-symbol-highlighted-p" function (:arguments ("symbol")) nil [8635 8787])
            ("highlight-symbol-should-auto-highlight-p" function (:arguments ("symbol")) nil [8789 8998])
            ("highlight-symbol-add-symbol" function (:arguments ("symbol")) nil [9000 9734])
            ("highlight-symbol-flush" function nil nil [9736 9901])
            ("highlight-symbol-add-symbol-with-face" function (:arguments ("symbol" "face")) nil [9903 10058])
            ("highlight-symbol-remove-symbol" function (:arguments ("symbol")) nil [10060 10332])
            ("highlight-symbol-uncompiled-keywords" function nil nil [10334 10475])
            ("highlight-symbol-remove-all" function (:user-visible-flag t) nil [10492 10651])
            ("highlight-symbol-list-all" function (:user-visible-flag t) nil [10668 10884])
            ("highlight-symbol-fontify-symbol" function (:arguments ("symbol")) nil [10886 11265])
            ("highlight-symbol-count" function
               (:user-visible-flag t
                :arguments ("symbol" "message-p"))
                nil [11282 11883])
            ("highlight-symbol-next" function (:user-visible-flag t) nil [11900 12048])
            ("highlight-symbol-prev" function (:user-visible-flag t) nil [12065 12218])
            ("highlight-symbol-next-in-defun" function (:user-visible-flag t) nil [12235 12436])
            ("highlight-symbol-prev-in-defun" function (:user-visible-flag t) nil [12453 12659])
            ("highlight-symbol-nav-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "\356" (quote highlight-symbol-next)) (define-key map "\360" (quote highlight-symbol-prev)) map)) nil [12661 12890])
            ("define-minor-mode" code nil nil [12907 13537])
            ("highlight-symbol-query-replace" function
               (:user-visible-flag t
                :arguments ("replacement"))
                nil [13554 14297])
            ("highlight-symbol-occur" function
               (:user-visible-flag t
                :arguments ("nlines"))
                nil [14314 14642])
            ("highlight-symbol-get-symbol" function nil nil [14644 15125])
            ("highlight-symbol-temp-highlight" function nil nil [15127 15827])
            ("highlight-symbol-mode-remove-temp" function nil nil [15829 16031])
            ("highlight-symbol-mode-post-command" function nil nil [16033 16568])
            ("highlight-symbol-jump" function (:arguments ("dir")) nil [16570 17719])
            ("highlight-symbol" package nil nil [17721 17748]))          
      :file "highlight-symbol.el"
      :pointmax 17784
      :fsize 17784
      :lastmodtime '(21988 9223 938981 317000)
      :unmatched-syntax '((close-paren 3857 . 3858) (symbol 3826 . 3843) (open-paren 3825 . 3826))))
  :file "!home!chz!.emacs.d!elpa!highlight-symbol-20150816.628!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
