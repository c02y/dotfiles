;; Object byteorder/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "byteorder/"
  :tables (list 
   (semanticdb-table "little_endian.h"
    :major-mode 'c-mode
    :tags 
        '( ("_LINUX_BYTEORDER_LITTLE_ENDIAN_H" variable (:constant-flag t) nil [50 82])
            ("__LITTLE_ENDIAN" variable (:constant-flag t) nil [116 131])
            ("__LITTLE_ENDIAN_BITFIELD" variable (:constant-flag t) nil [185 209])
            ("linux/types.h" include (:system-flag t) nil [218 242])
            ("linux/swab.h" include (:system-flag t) nil [243 266])
            ("__constant_htonl" variable (:constant-flag t) nil [276 292])
            ("__constant_ntohl" variable (:constant-flag t) nil [338 354])
            ("__constant_htons" variable (:constant-flag t) nil [398 414])
            ("__constant_ntohs" variable (:constant-flag t) nil [460 476])
            ("__constant_cpu_to_le64" variable (:constant-flag t) nil [520 542])
            ("__constant_le64_to_cpu" variable (:constant-flag t) nil [575 597])
            ("__constant_cpu_to_le32" variable (:constant-flag t) nil [630 652])
            ("__constant_le32_to_cpu" variable (:constant-flag t) nil [685 707])
            ("__constant_cpu_to_le16" variable (:constant-flag t) nil [740 762])
            ("__constant_le16_to_cpu" variable (:constant-flag t) nil [795 817])
            ("__constant_cpu_to_be64" variable (:constant-flag t) nil [850 872])
            ("__constant_be64_to_cpu" variable (:constant-flag t) nil [918 940])
            ("__constant_cpu_to_be32" variable (:constant-flag t) nil [991 1013])
            ("__constant_be32_to_cpu" variable (:constant-flag t) nil [1059 1081])
            ("__constant_cpu_to_be16" variable (:constant-flag t) nil [1132 1154])
            ("__constant_be16_to_cpu" variable (:constant-flag t) nil [1200 1222])
            ("__cpu_to_le64" variable (:constant-flag t) nil [1273 1286])
            ("__le64_to_cpu" variable (:constant-flag t) nil [1319 1332])
            ("__cpu_to_le32" variable (:constant-flag t) nil [1365 1378])
            ("__le32_to_cpu" variable (:constant-flag t) nil [1411 1424])
            ("__cpu_to_le16" variable (:constant-flag t) nil [1457 1470])
            ("__le16_to_cpu" variable (:constant-flag t) nil [1503 1516])
            ("__cpu_to_be64" variable (:constant-flag t) nil [1549 1562])
            ("__be64_to_cpu" variable (:constant-flag t) nil [1598 1611])
            ("__cpu_to_be32" variable (:constant-flag t) nil [1652 1665])
            ("__be32_to_cpu" variable (:constant-flag t) nil [1701 1714])
            ("__cpu_to_be16" variable (:constant-flag t) nil [1755 1768])
            ("__be16_to_cpu" variable (:constant-flag t) nil [1804 1817])
            ("__cpu_to_le64p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__u64" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1891 1906]))                  
                :type ("__le64" type (:type "class") nil nil))
                nil [1869 1930])
            ("__le64_to_cpup" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__le64" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1970 1986]))                  
                :type ("__u64" type (:type "class") nil nil))
                nil [1949 2009])
            ("__cpu_to_le32p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__u32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2050 2065]))                  
                :type ("__le32" type (:type "class") nil nil))
                nil [2028 2089])
            ("__le32_to_cpup" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__le32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2129 2145]))                  
                :type ("__u32" type (:type "class") nil nil))
                nil [2108 2168])
            ("__cpu_to_le16p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__u16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2209 2224]))                  
                :type ("__le16" type (:type "class") nil nil))
                nil [2187 2248])
            ("__le16_to_cpup" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__le16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2288 2304]))                  
                :type ("__u16" type (:type "class") nil nil))
                nil [2267 2327])
            ("__cpu_to_be64p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__u64" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2368 2383]))                  
                :type ("__be64" type (:type "class") nil nil))
                nil [2346 2417])
            ("__be64_to_cpup" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__be64" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2457 2473]))                  
                :type ("__u64" type (:type "class") nil nil))
                nil [2436 2508])
            ("__cpu_to_be32p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__u32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2549 2564]))                  
                :type ("__be32" type (:type "class") nil nil))
                nil [2527 2598])
            ("__be32_to_cpup" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__be32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2638 2654]))                  
                :type ("__u32" type (:type "class") nil nil))
                nil [2617 2689])
            ("__cpu_to_be16p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__u16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2730 2745]))                  
                :type ("__be16" type (:type "class") nil nil))
                nil [2708 2779])
            ("__be16_to_cpup" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__be16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2819 2835]))                  
                :type ("__u16" type (:type "class") nil nil))
                nil [2798 2870])
            ("__cpu_to_le64s" variable (:constant-flag t) nil [2879 2893])
            ("__le64_to_cpus" variable (:constant-flag t) nil [2933 2947])
            ("__cpu_to_le32s" variable (:constant-flag t) nil [2987 3001])
            ("__le32_to_cpus" variable (:constant-flag t) nil [3041 3055])
            ("__cpu_to_le16s" variable (:constant-flag t) nil [3095 3109])
            ("__le16_to_cpus" variable (:constant-flag t) nil [3149 3163])
            ("__cpu_to_be64s" variable (:constant-flag t) nil [3203 3217])
            ("__be64_to_cpus" variable (:constant-flag t) nil [3244 3258])
            ("__cpu_to_be32s" variable (:constant-flag t) nil [3285 3299])
            ("__be32_to_cpus" variable (:constant-flag t) nil [3326 3340])
            ("__cpu_to_be16s" variable (:constant-flag t) nil [3367 3381])
            ("__be16_to_cpus" variable (:constant-flag t) nil [3408 3422]))          
    :file "little_endian.h"
    :pointmax 3489
    :fsize 3488
    :lastmodtime '(21444 1510 0 0)
    :unmatched-syntax '((symbol 2787 . 2797) (STATIC 2780 . 2786) (symbol 2697 . 2707) (STATIC 2690 . 2696) (symbol 2606 . 2616) (STATIC 2599 . 2605) (symbol 2516 . 2526) (STATIC 2509 . 2515) (symbol 2425 . 2435) (STATIC 2418 . 2424) (symbol 2335 . 2345) (STATIC 2328 . 2334) (symbol 2256 . 2266) (STATIC 2249 . 2255) (symbol 2176 . 2186) (STATIC 2169 . 2175) (symbol 2097 . 2107) (STATIC 2090 . 2096) (symbol 2017 . 2027) (STATIC 2010 . 2016) (symbol 1938 . 1948) (STATIC 1931 . 1937) (symbol 1858 . 1868) (STATIC 1851 . 1857))
    :lexical-table 
        '(("__cpu_to_be32s" (spp-arg-list ("x") 3299 . 3302) . ((symbol "__swab32s" 3303 . 3312) (semantic-list "((x))" 3312 . 3317)))
          ("__constant_cpu_to_le32" (spp-arg-list ("x") 652 . 655) . ((semantic-list "((__le32)(__u32)(x))" 656 . 676)))
          ("__constant_cpu_to_be64" (spp-arg-list ("x") 872 . 875) . ((semantic-list "((__be64)___constant_swab64((x)))" 876 . 909)))
          ("__constant_cpu_to_be16" (spp-arg-list ("x") 1154 . 1157) . ((semantic-list "((__be16)___constant_swab16((x)))" 1158 . 1191)))
          ("__constant_htonl" (spp-arg-list ("x") 292 . 295) . ((semantic-list "((__be32)___constant_swab32((x)))" 296 . 329)))
          ("__constant_ntohl" (spp-arg-list ("x") 354 . 357) . ((symbol "___constant_swab32" 358 . 376) (semantic-list "((__be32)(x))" 376 . 389)))
          ("__constant_le64_to_cpu" (spp-arg-list ("x") 597 . 600) . ((semantic-list "((__u64)(__le64)(x))" 601 . 621)))
          ("__cpu_to_le64" (spp-arg-list ("x") 1286 . 1289) . ((semantic-list "((__le64)(__u64)(x))" 1290 . 1310)))
          ("__cpu_to_le16" (spp-arg-list ("x") 1470 . 1473) . ((semantic-list "((__le16)(__u16)(x))" 1474 . 1494)))
          ("__LITTLE_ENDIAN" . ((number "1234" 132 . 136)))
          ("__constant_le16_to_cpu" (spp-arg-list ("x") 817 . 820) . ((semantic-list "((__u16)(__le16)(x))" 821 . 841)))
          ("__constant_be64_to_cpu" (spp-arg-list ("x") 940 . 943) . ((symbol "___constant_swab64" 944 . 962) (semantic-list "((__u64)(__be64)(x))" 962 . 982)))
          ("__constant_cpu_to_be32" (spp-arg-list ("x") 1013 . 1016) . ((semantic-list "((__be32)___constant_swab32((x)))" 1017 . 1050)))
          ("__le64_to_cpus" (spp-arg-list ("x") 2947 . 2950) . 
              ((DO "do" 2951 . 2953) (semantic-list "{ (void)(x); }" 2954 . 2968) (WHILE "while" 2969 . 2974) (semantic-list "(0)" 2975 . 2978)))
          ("__cpu_to_le32s" (spp-arg-list ("x") 3001 . 3004) . 
              ((DO "do" 3005 . 3007) (semantic-list "{ (void)(x); }" 3008 . 3022) (WHILE "while" 3023 . 3028) (semantic-list "(0)" 3029 . 3032)))
          ("__le16_to_cpus" (spp-arg-list ("x") 3163 . 3166) . 
              ((DO "do" 3167 . 3169) (semantic-list "{ (void)(x); }" 3170 . 3184) (WHILE "while" 3185 . 3190) (semantic-list "(0)" 3191 . 3194)))
          ("__constant_be16_to_cpu" (spp-arg-list ("x") 1222 . 1225) . ((symbol "___constant_swab16" 1226 . 1244) (semantic-list "((__u16)(__be16)(x))" 1244 . 1264)))
          ("__cpu_to_le32" (spp-arg-list ("x") 1378 . 1381) . ((semantic-list "((__le32)(__u32)(x))" 1382 . 1402)))
          ("__LITTLE_ENDIAN_BITFIELD")
          ("__cpu_to_be64" (spp-arg-list ("x") 1562 . 1565) . ((semantic-list "((__be64)__swab64((x)))" 1566 . 1589)))
          ("__cpu_to_be16" (spp-arg-list ("x") 1768 . 1771) . ((semantic-list "((__be16)__swab16((x)))" 1772 . 1795)))
          ("__le32_to_cpus" (spp-arg-list ("x") 3055 . 3058) . 
              ((DO "do" 3059 . 3061) (semantic-list "{ (void)(x); }" 3062 . 3076) (WHILE "while" 3077 . 3082) (semantic-list "(0)" 3083 . 3086)))
          ("_LINUX_BYTEORDER_LITTLE_ENDIAN_H")
          ("__constant_le32_to_cpu" (spp-arg-list ("x") 707 . 710) . ((semantic-list "((__u32)(__le32)(x))" 711 . 731)))
          ("__le64_to_cpu" (spp-arg-list ("x") 1332 . 1335) . ((semantic-list "((__u64)(__le64)(x))" 1336 . 1356)))
          ("__cpu_to_be64s" (spp-arg-list ("x") 3217 . 3220) . ((symbol "__swab64s" 3221 . 3230) (semantic-list "((x))" 3230 . 3235)))
          ("__be64_to_cpus" (spp-arg-list ("x") 3258 . 3261) . ((symbol "__swab64s" 3262 . 3271) (semantic-list "((x))" 3271 . 3276)))
          ("__cpu_to_be16s" (spp-arg-list ("x") 3381 . 3384) . ((symbol "__swab16s" 3385 . 3394) (semantic-list "((x))" 3394 . 3399)))
          ("__be16_to_cpus" (spp-arg-list ("x") 3422 . 3425) . ((symbol "__swab16s" 3426 . 3435) (semantic-list "((x))" 3435 . 3440)))
          ("__constant_be32_to_cpu" (spp-arg-list ("x") 1081 . 1084) . ((symbol "___constant_swab32" 1085 . 1103) (semantic-list "((__u32)(__be32)(x))" 1103 . 1123)))
          ("__le16_to_cpu" (spp-arg-list ("x") 1516 . 1519) . ((semantic-list "((__u16)(__le16)(x))" 1520 . 1540)))
          ("__be64_to_cpu" (spp-arg-list ("x") 1611 . 1614) . ((symbol "__swab64" 1615 . 1623) (semantic-list "((__u64)(__be64)(x))" 1623 . 1643)))
          ("__cpu_to_be32" (spp-arg-list ("x") 1665 . 1668) . ((semantic-list "((__be32)__swab32((x)))" 1669 . 1692)))
          ("__be16_to_cpu" (spp-arg-list ("x") 1817 . 1820) . ((symbol "__swab16" 1821 . 1829) (semantic-list "((__u16)(__be16)(x))" 1829 . 1849)))
          ("__be32_to_cpus" (spp-arg-list ("x") 3340 . 3343) . ((symbol "__swab32s" 3344 . 3353) (semantic-list "((x))" 3353 . 3358)))
          ("__constant_htons" (spp-arg-list ("x") 414 . 417) . ((semantic-list "((__be16)___constant_swab16((x)))" 418 . 451)))
          ("__constant_ntohs" (spp-arg-list ("x") 476 . 479) . ((symbol "___constant_swab16" 480 . 498) (semantic-list "((__be16)(x))" 498 . 511)))
          ("__le32_to_cpu" (spp-arg-list ("x") 1424 . 1427) . ((semantic-list "((__u32)(__le32)(x))" 1428 . 1448)))
          ("__cpu_to_le64s" (spp-arg-list ("x") 2893 . 2896) . 
              ((DO "do" 2897 . 2899) (semantic-list "{ (void)(x); }" 2900 . 2914) (WHILE "while" 2915 . 2920) (semantic-list "(0)" 2921 . 2924)))
          ("__cpu_to_le16s" (spp-arg-list ("x") 3109 . 3112) . 
              ((DO "do" 3113 . 3115) (semantic-list "{ (void)(x); }" 3116 . 3130) (WHILE "while" 3131 . 3136) (semantic-list "(0)" 3137 . 3140)))
          ("__constant_cpu_to_le64" (spp-arg-list ("x") 542 . 545) . ((semantic-list "((__le64)(__u64)(x))" 546 . 566)))
          ("__constant_cpu_to_le16" (spp-arg-list ("x") 762 . 765) . ((semantic-list "((__le16)(__u16)(x))" 766 . 786)))
          ("__be32_to_cpu" (spp-arg-list ("x") 1714 . 1717) . ((symbol "__swab32" 1718 . 1726) (semantic-list "((__u32)(__be32)(x))" 1726 . 1746)))
          )

    )
   )
  :file "!usr!include!linux!byteorder!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
