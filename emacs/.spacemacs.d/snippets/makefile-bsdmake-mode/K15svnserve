;; Object mpl/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "mpl/"
  :tables (list 
   (semanticdb-table "if.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_IF_HPP_INCLUDED" variable (:constant-flag t) nil [44 69])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [466 506])
            ("boost/mpl/aux_/static_cast.hpp" include (:system-flag t) nil [507 548])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [549 586])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [587 631])
            ("boost/mpl/aux_/config/integral.hpp" include (:system-flag t) nil [632 677])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [678 719])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [720 767])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("if_c" type
                               (:template 
                                  ( ("bool" type nil nil nil)
                                    ("T1" type (:type "class") nil nil)
                                    ("T2" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T1" type (:type "class") nil nil)
                                        :superclasses "T1"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [943 959]))                                  )
                                (reparse-symbol namespacesubparts) [860 962])
                            ("if_c" type
                               (:template 
                                  ( ("T1" type (:type "class") nil nil)
                                    ("T2" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T2" type (:type "class") nil nil)
                                        :superclasses "T2"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1047 1063]))                                  
                                :template-specifier 
                                  ( ("false" type nil nil nil)
                                    ("T1" type nil nil nil)
                                    ("T2" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [964 1066])
                            ("if_" type
                               (:members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [1397 1405])
                                    ("almost_type_" variable (:type "int") (reparse-symbol classsubparts) [1721 1734])
                                    ("public" label nil (reparse-symbol classsubparts) [1738 1745])
                                    ("type" type
                                       (:typedef ("almost_type_::type" type (:type "class") nil nil)
                                        :superclasses "almost_type_::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1750 1791]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1383 1850]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [787 2975]))                  
                :type "namespace")
                nil [769 2976]))          
    :file "if.hpp"
    :pointmax 3014
    :fsize 3013
    :lastmodtime '(21169 37687 0 0)
    :unmatched-syntax '((semantic-list 2964 . 2972) (symbol 2943 . 2964) (number 2965 . 2966) (semantic-list 1829 . 1847) (symbol 1801 . 1829) (semantic-list 1836 . 1846) (number 1830 . 1831) (punctuation 1719 . 1720) (symbol 1708 . 1710) (punctuation 1706 . 1707) (symbol 1695 . 1697) (punctuation 1693 . 1694) (semantic-list 1634 . 1677) (symbol 1609 . 1634) (punctuation 1670 . 1671) (punctuation 1669 . 1670) (semantic-list 1665 . 1669) (punctuation 1495 . 1496) (symbol 1491 . 1495) (TYPEDEF 1483 . 1490) (punctuation 1381 . 1382) (semantic-list 1372 . 1376) (symbol 1350 . 1372) (TYPENAME 1341 . 1349) (punctuation 1339 . 1340) (semantic-list 1330 . 1334) (symbol 1308 . 1330) (TYPENAME 1299 . 1307) (punctuation 1297 . 1298) (semantic-list 1288 . 1292) (symbol 1266 . 1288) (TYPENAME 1257 . 1265) (punctuation 1249 . 1250) (TEMPLATE 1241 . 1249))
    :lexical-table 
        '(("BOOST_MPL_IF_HPP_INCLUDED")
          )

    )
   (semanticdb-table "and.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AND_HPP_INCLUDED" variable (:constant-flag t) nil [45 71])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [469 522])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [625 657])
            ("boost/mpl/aux_/nested_type_wknd.hpp" include (:system-flag t) nil [658 707])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [708 748])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [749 796])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1205 1234])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1243 1296]))          
    :file "and.hpp"
    :pointmax 1651
    :fsize 1650
    :lastmodtime '(21169 37687 0 0)
    :unmatched-syntax '((semantic-list 593 . 623) (symbol 586 . 593) (punctuation 585 . 586) (punctuation 583 . 584) (punctuation 582 . 583))
    :lexical-table 
        '(("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "and" 1235 . 1238) (punctuation "." 1238 . 1239) (symbol "hpp" 1239 . 1242)))
          ("BOOST_MPL_AND_HPP_INCLUDED")
          )

    )
   (semanticdb-table "bool.hpp"
    :file "bool.hpp"
    :fsize 1051
    :lastmodtime '(21169 37687 0 0)
    )
   (semanticdb-table "int.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_INT_HPP_INCLUDED" variable (:constant-flag t) nil [45 71])
            ("boost/mpl/int_fwd.hpp" include (:system-flag t) nil [469 501])
            ("AUX_WRAPPER_VALUE_TYPE" variable (:constant-flag t) nil [511 533])
            ("boost/mpl/aux_/integral_wrapper.hpp" include (:system-flag t) nil [538 584]))          
    :file "int.hpp"
    :pointmax 623
    :fsize 622
    :lastmodtime '(21169 37687 0 0)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("AUX_WRAPPER_VALUE_TYPE" . ((INT "int" 534 . 537)))
          ("BOOST_MPL_INT_HPP_INCLUDED")
          )

    )
   (semanticdb-table "int_fwd.hpp"
    :file "int_fwd.hpp"
    :fsize 784
    :lastmodtime '(21169 37687 0 0)
    )
   (semanticdb-table "long.hpp"
    :file "long.hpp"
    :fsize 628
    :lastmodtime '(21169 37687 0 0)
    )
   )
  :file "!usr!include!boost!mpl!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
