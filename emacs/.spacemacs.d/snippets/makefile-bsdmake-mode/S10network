;; Object org/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "org/"
  :tables (list 
   (semanticdb-table "org.el.gz"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("org-inhibit-highlight-removal" variable nil nil [2869 2911])
            ("org-table-formula-constants-local" variable nil nil [2939 3037])
            ("make-variable-buffer-local" code nil nil [3038 3101])
            ("cl" include nil nil [3153 3166])
            ("gnus-sum" include nil nil [3169 3188])
            ("calendar" include nil nil [3191 3210])
            ("find-func" include nil nil [3211 3231])
            ("format-spec" include nil nil [3232 3254])
            ("load" code nil nil [3256 3284])
            ("org-outline-regexp" variable (:default-value "\\*+ ") nil [3659 3729])
            ("org-outline-regexp-bol" variable (:default-value "^\\*+ ") nil [3731 3916])
            ("org-heading-regexp" variable (:default-value "^\\(\\*+\\)\\(?: +\\(.*?\\)\\)?[ 	]*$") nil [3918 4105])
            ("when" code nil nil [4186 4615])
            ("declare-function" code nil nil [4617 4680])
            ("declare-function" code nil nil [4681 4749])
            ("declare-function" code nil nil [4750 4821])
            ("declare-function" code nil nil [4822 4925])
            ("declare-function" code nil nil [4926 4983])
            ("declare-function" code nil nil [4984 5043])
            ("declare-function" code nil nil [5044 5120])
            ("declare-function" code nil nil [5122 5180])
            ("declare-function" code nil nil [5181 5274])
            ("declare-function" code nil nil [5275 5325])
            ("declare-function" code nil nil [5326 5383])
            ("declare-function" code nil nil [5384 5460])
            ("declare-function" code nil nil [5461 5524])
            ("declare-function" code nil nil [5525 5577])
            ("declare-function" code nil nil [5578 5651])
            ("declare-function" code nil nil [5652 5730])
            ("declare-function" code nil nil [5731 5780])
            ("declare-function" code nil nil [5781 5840])
            ("declare-function" code nil nil [5841 5903])
            ("declare-function" code nil nil [5904 5970])
            ("org-babel-load-languages" variable nil nil [6035 6068])
            ("org-babel-do-load-languages" function (:arguments ("sym" "value")) nil [6085 6569])
            ("org-babel-load-languages" variable (:default-value (quote ((emacs-lisp . t)))) nil [6571 8570])
            ("org-clone-delete-id" variable nil nil [8601 8869])
            ("org-compat" include nil nil [8883 8904])
            ("org-check-version" code nil nil [8905 8924])
            ("org-version" function
               (:user-visible-flag t
                :arguments ("here" "full" "message"))
                nil [8941 10097])
            ("org-version" variable
               (:constant-flag t
                :default-value (org-version))
                nil [10099 10135])
            ("org" customgroup (:user-visible-flag t) nil [10192 10311])
            ("org-mode-hook" variable nil nil [10313 10432])
            ("org-load-hook" variable nil nil [10434 10542])
            ("org-log-buffer-setup-hook" variable nil nil [10544 10688])
            ("org-modules" variable nil nil [10690 10710])
            ("org-modules-loaded" variable nil nil [10728 10801])
            ("org-load-modules-maybe" function (:arguments ("force")) nil [10803 11132])
            ("org-set-modules" function (:arguments ("var" "value")) nil [11134 11324])
            ("when" code nil nil [11326 11449])
            ("org-modules" variable (:default-value (quote (org-bbdb org-bibtex org-docview org-gnus org-info org-jsinfo org-irc org-mew org-mhe org-rmail org-vm org-w3m org-wl))) nil [11451 17280])
            ("org-support-shift-select" variable nil nil [17282 19421])
            ("org-loop-over-headlines-in-active-region" variable nil nil [19423 20515])
            ("org-startup" customgroup (:user-visible-flag t) nil [20517 20622])
            ("org-startup-folded" variable (:default-value t) nil [20624 21417])
            ("org-startup-truncated" variable (:default-value t) nil [21419 21682])
            ("org-startup-indented" variable nil nil [21684 22060])
            ("org-use-sub-superscripts" variable (:default-value t) nil [22062 23379])
            ("if" code nil nil [23381 23486])
            ("org-startup-with-beamer-mode" variable nil nil [23489 23777])
            ("org-startup-align-all-tables" variable nil nil [23779 24223])
            ("org-startup-with-inline-images" variable nil nil [24225 24559])
            ("org-insert-mode-line-in-empty-file" variable nil nil [24561 25029])
            ("org-replace-disputed-keys" variable nil nil [25031 25757])
            ("org-use-extra-keys" variable nil nil [25759 26279])
            ("if" code nil nil [26281 26373])
            ("org-disputed-keys" variable (:default-value (quote (([(shift up)] . [(meta p)]) ([(shift down)] . [(meta n)]) ([(shift left)] . [(meta -)]) ([(shift right)] . [(meta +)]) ([(control shift right)] . [(meta shift +)]) ([(control shift left)] . [(meta shift -)])))) nil [26375 27061])
            ("org-key" function (:arguments ("key")) nil [27063 27596])
            ("org-find-if" function (:arguments ("predicate" "seq")) nil [27598 27744])
            ("org-defkey" function (:arguments ("keymap" "key" "def")) nil [27746 27886])
            ("org-ellipsis" variable nil nil [27888 28417])
            ("org-display-table" variable nil nil [28419 28520])
            ("org-keywords" customgroup (:user-visible-flag t) nil [28522 28611])
            ("org-deadline-string" variable (:default-value "DEADLINE:") nil [28613 28955])
            ("org-scheduled-string" variable (:default-value "SCHEDULED:") nil [28957 29307])
            ("org-closed-string" variable (:default-value "CLOSED:") nil [29309 29462])
            ("org-clock-string" variable (:default-value "CLOCK:") nil [29464 29613])
            ("org-planning-or-clock-line-re" variable
               (:constant-flag t
                :default-value (concat "^[ 	]*\\(" org-scheduled-string "\\|" org-deadline-string "\\|" org-closed-string "\\|" org-clock-string "\\)"))
                nil [29615 29849])
            ("org-comment-string" variable (:default-value "COMMENT") nil [29851 30127])
            ("org-quote-string" variable (:default-value "QUOTE") nil [30129 30516])
            ("org-repeat-re" variable
               (:constant-flag t
                :default-value "<[0-9]\\{4\\}-[0-9][0-9]-[0-9][0-9] [^>
]*?\\([.+]?\\+[0-9]+[hdwmy]\\(/[0-9]+[hdwmy]\\)?\\)")
                nil [30518 30749])
            ("org-structure" customgroup (:user-visible-flag t) nil [30751 30880])
            ("org-reveal-location" customgroup (:user-visible-flag t) nil [30882 31030])
            ("org-context-choice" variable
               (:constant-flag t
                :default-value (quote (choice (const :tag "Always" t) (const :tag "Never" nil) (repeat :greedy t :tag "Individual contexts" (cons (choice :tag "Context" (const agenda) (const org-goto) (const occur-tree) (const tags-tree) (const link-search) (const mark-goto) (const bookmark-jump) (const isearch) (const default)) (boolean))))))
                nil [31032 31499])
            ("org-show-hierarchy-above" variable (:default-value (quote ((default . t)))) nil [31501 32578])
            ("org-show-following-heading" variable (:default-value (quote ((default)))) nil [32580 33249])
            ("org-show-siblings" variable (:default-value (quote ((default) (isearch t)))) nil [33251 34132])
            ("org-show-entry-below" variable (:default-value (quote ((default)))) nil [34134 34669])
            ("org-indirect-buffer-display" variable (:default-value (quote other-window)) nil [34671 35567])
            ("org-use-speed-commands" variable nil nil [35569 35921])
            ("org-speed-commands-user" variable nil nil [35923 36884])
            ("org-cycle" customgroup (:user-visible-flag t) nil [36886 37008])
            ("org-cycle-skip-children-state-if-no-children" variable (:default-value t) nil [37010 37175])
            ("org-cycle-max-level" variable nil nil [37177 37833])
            ("org-drawers" variable (:default-value (quote ("PROPERTIES" "CLOCK" "LOGBOOK" "RESULTS"))) nil [37835 38377])
            ("org-hide-block-startup" variable nil nil [38379 38628])
            ("org-cycle-global-at-bob" variable nil nil [38630 39220])
            ("org-cycle-level-after-item/entry-creation" variable (:default-value t) nil [39222 39941])
            ("org-cycle-emulate-tab" variable (:default-value t) nil [39943 40653])
            ("org-cycle-separator-lines" variable (:default-value 2) nil [40655 41417])
            ("put" code nil nil [41418 41481])
            ("org-pre-cycle-hook" variable nil nil [41483 41952])
            ("org-cycle-hook" variable (:default-value (quote (org-cycle-hide-archived-subtrees org-cycle-hide-drawers org-cycle-show-empty-lines org-optimize-window-after-visibility-change))) nil [41954 42583])
            ("org-edit-structure" customgroup (:user-visible-flag t) nil [42585 42724])
            ("org-odd-levels-only" variable nil nil [42726 43320])
            ("org-adapt-indentation" variable (:default-value t) nil [43322 44387])
            ("org-special-ctrl-a/e" variable nil nil [44389 46009])
            ("if" code nil nil [46010 46097])
            ("org-special-ctrl-k" variable nil nil [46099 46618])
            ("org-ctrl-k-protect-subtree" variable nil nil [46620 47233])
            ("org-catch-invisible-edits" variable nil nil [47235 48400])
            ("org-yank-folded-subtrees" variable (:default-value t) nil [48402 48824])
            ("org-yank-adjusted-subtrees" variable nil nil [48826 49074])
            ("org-M-RET-may-split-line" variable (:default-value (quote ((default . t)))) nil [49076 49851])
            ("org-insert-heading-respect-content" variable nil nil [49854 50235])
            ("org-blank-before-new-entry" variable (:default-value (quote ((heading . auto) (plain-list-item . auto)))) nil [50237 51143])
            ("org-insert-heading-hook" variable nil nil [51145 51277])
            ("org-enable-fixed-width-editor" variable (:default-value t) nil [51279 51581])
            ("org-goto-auto-isearch" variable (:default-value t) nil [51583 52035])
            ("org-sparse-trees" customgroup (:user-visible-flag t) nil [52037 52167])
            ("org-highlight-sparse-tree-matches" variable (:default-value t) nil [52169 52427])
            ("org-remove-highlights-with-change" variable (:default-value t) nil [52429 52842])
            ("org-occur-hook" variable (:default-value (quote (org-first-headline-recenter))) nil [52845 53099])
            ("org-imenu-and-speedbar" customgroup (:user-visible-flag t) nil [53101 53249])
            ("org-imenu-depth" variable (:default-value 2) nil [53251 53431])
            ("org-table" customgroup (:user-visible-flag t) nil [53433 53533])
            ("org-enable-table-editor" variable (:default-value (quote optimized)) nil [53535 55016])
            ("org-self-insert-cluster-for-undo" variable (:default-value (or (featurep (quote xemacs)) (version<= emacs-version "24.1"))) nil [55018 55412])
            ("org-table-tab-recognizes-table.el" variable (:default-value t) nil [55414 55674])
            ("org-link" customgroup (:user-visible-flag t) nil [55676 55773])
            ("org-link-abbrev-alist-local" variable nil nil [55775 55929])
            ("make-variable-buffer-local" code nil nil [55930 55987])
            ("org-link-abbrev-alist" variable nil nil [55989 57210])
            ("org-descriptive-links" variable (:default-value t) nil [57212 57668])
            ("org-link-file-path-type" variable (:default-value (quote adaptive)) nil [57670 58295])
            ("org-activate-links" variable (:default-value (quote (bracket angle plain radio tag date footnote))) nil [58297 59542])
            ("org-make-link-description-function" variable nil nil [59544 59924])
            ("org-link-store" customgroup (:user-visible-flag t) nil [59926 60048])
            ("org-url-hexify-p" variable (:default-value t) nil [60050 60191])
            ("org-email-link-description-format" variable (:default-value "Email %c: %.30s") nil [60193 60994])
            ("org-from-is-user-regexp" variable (:default-value (let (r1 r2) (when (and user-mail-address (not (string= user-mail-address ""))) (setq r1 (concat "\\<" (regexp-quote user-mail-address) "\\>"))) (when (and user-full-name (not (string= user-full-name ""))) (setq r2 (concat "\\<" (regexp-quote user-full-name) "\\>"))) (if (and r1 r2) (concat r1 "\\|" r2) (or r1 r2)))) nil [60996 61556])
            ("org-context-in-file-links" variable (:default-value t) nil [61558 62195])
            ("org-keep-stored-link-after-insertion" variable nil nil [62197 62785])
            ("org-link-follow" customgroup (:user-visible-flag t) nil [62787 62913])
            ("org-link-translation-function" variable nil nil [62915 63600])
            ("org-follow-link-hook" variable nil nil [63602 63731])
            ("org-tab-follows-link" variable nil nil [63733 63993])
            ("org-return-follows-link" variable nil nil [63995 64130])
            ("org-mouse-1-follows-link" variable (:default-value (if (boundp (quote mouse-1-click-follows-link)) mouse-1-click-follows-link t)) nil [64132 64452])
            ("org-mark-ring-length" variable (:default-value 4) nil [64454 64654])
            ("org-link-search-must-match-exact-headline" variable (:default-value (quote query-to-create)) nil [64656 65120])
            ("org-link-frame-setup" variable (:default-value (quote ((vm . vm-visit-folder-other-frame) (vm-imap . vm-visit-imap-folder-other-frame) (gnus . org-gnus-no-new-news) (file . find-file-other-window) (wl . wl-other-frame)))) nil [65122 66537])
            ("org-display-internal-link-with-indirect-buffer" variable nil nil [66539 67128])
            ("org-open-non-existing-files" variable nil nil [67130 67499])
            ("org-open-directory-means-index-dot-org" variable nil nil [67501 67769])
            ("org-link-mailto-program" variable (:default-value (quote (browse-url "mailto:%a?subject=%s"))) nil [67771 68481])
            ("org-confirm-shell-link-function" variable (:default-value (quote yes-or-no-p)) nil [68483 69197])
            ("put" code nil nil [69198 69317])
            ("org-confirm-shell-link-not-regexp" variable nil nil [69319 69478])
            ("org-confirm-elisp-link-function" variable (:default-value (quote yes-or-no-p)) nil [69480 70219])
            ("put" code nil nil [70220 70339])
            ("org-confirm-elisp-link-not-regexp" variable nil nil [70341 70500])
            ("org-file-apps-defaults-gnu" variable
               (:constant-flag t
                :default-value (quote ((remote . emacs) (system . mailcap) (t . mailcap))))
                nil [70502 70684])
            ("org-file-apps-defaults-macosx" variable
               (:constant-flag t
                :default-value (quote ((remote . emacs) (t . "open %s") (system . "open %s") ("ps.gz" . "gv %s") ("eps.gz" . "gv %s") ("dvi" . "xdvi %s") ("fig" . "xfig %s"))))
                nil [70686 71102])
            ("org-file-apps-defaults-windowsnt" variable
               (:constant-flag t
                :default-value (list (quote (remote . emacs)) (cons t (list (if (featurep (quote xemacs)) (quote mswindows-shell-execute) (quote w32-shell-execute)) "open" (quote file))) (cons (quote system) (list (if (featurep (quote xemacs)) (quote mswindows-shell-execute) (quote w32-shell-execute)) "open" (quote file)))))
                nil [71104 71538])
            ("org-file-apps" variable (:default-value (quote ((auto-mode . emacs) ("\\.mm\\'" . default) ("\\.x?html?\\'" . default) ("\\.pdf\\'" . xdg-open)))) nil [71540 76282])
            ("org-doi-server-url" variable (:default-value "http://dx.doi.org/") nil [76284 76426])
            ("org-refile" customgroup (:user-visible-flag t) nil [76428 76540])
            ("org-directory" variable (:default-value "~/org") nil [76542 77202])
            ("org-default-notes-file" variable (:default-value (convert-standard-filename "~/.notes")) nil [77204 77575])
            ("org-goto-interface" variable (:default-value (quote outline)) nil [77577 78250])
            ("org-goto-max-level" variable (:default-value 5) nil [78252 78394])
            ("org-reverse-note-order" variable nil nil [78396 78902])
            ("org-log-refile" variable nil nil [78904 79715])
            ("org-refile-targets" variable nil nil [79717 82039])
            ("org-refile-target-verify-function" variable nil nil [82041 82698])
            ("org-refile-use-cache" variable nil nil [82700 83236])
            ("org-refile-use-outline-path" variable nil nil [83238 83849])
            ("org-outline-path-complete-in-steps" variable (:default-value t) nil [83851 84458])
            ("org-refile-allow-creating-parent-nodes" variable nil nil [84460 85174])
            ("org-refile-active-region-within-subtree" variable nil nil [85176 85580])
            ("org-todo" customgroup (:user-visible-flag t) nil [85582 85684])
            ("org-progress" customgroup (:user-visible-flag t) nil [85686 85807])
            ("org-todo-interpretation-widgets" variable (:default-value (quote ((:tag "Sequence (cycling hits every state)" sequence) (:tag "Type     (cycling directly to DONE)" type)))) nil [85809 86086])
            ("org-todo-keywords" variable (:default-value (quote ((sequence "TODO" "DONE")))) nil [86088 88911])
            ("org-todo-keywords-1" variable nil nil [88913 88996])
            ("make-variable-buffer-local" code nil nil [88997 89046])
            ("org-todo-keywords-for-agenda" variable nil nil [89047 89088])
            ("org-done-keywords-for-agenda" variable nil nil [89089 89130])
            ("org-drawers-for-agenda" variable nil nil [89131 89166])
            ("org-todo-keyword-alist-for-agenda" variable nil nil [89167 89213])
            ("org-tag-alist-for-agenda" variable nil nil [89214 89251])
            ("org-agenda-contributing-files" variable nil nil [89252 89294])
            ("org-not-done-keywords" variable nil nil [89295 89329])
            ("make-variable-buffer-local" code nil nil [89330 89381])
            ("org-done-keywords" variable nil nil [89382 89412])
            ("make-variable-buffer-local" code nil nil [89413 89460])
            ("org-todo-heads" variable nil nil [89461 89488])
            ("make-variable-buffer-local" code nil nil [89489 89533])
            ("org-todo-sets" variable nil nil [89534 89560])
            ("make-variable-buffer-local" code nil nil [89561 89604])
            ("org-todo-log-states" variable nil nil [89605 89637])
            ("make-variable-buffer-local" code nil nil [89638 89687])
            ("org-todo-kwd-alist" variable nil nil [89688 89719])
            ("make-variable-buffer-local" code nil nil [89720 89768])
            ("org-todo-key-alist" variable nil nil [89769 89800])
            ("make-variable-buffer-local" code nil nil [89801 89849])
            ("org-todo-key-trigger" variable nil nil [89850 89883])
            ("make-variable-buffer-local" code nil nil [89884 89934])
            ("org-todo-interpretation" variable (:default-value (quote sequence)) nil [89936 90331])
            ("org-use-fast-todo-selection" variable (:default-value t) nil [90333 91251])
            ("org-provide-todo-statistics" variable (:default-value t) nil [91253 91949])
            ("org-hierarchical-todo-statistics" variable (:default-value t) nil [91951 92338])
            ("org-after-todo-state-change-hook" variable nil nil [92340 92587])
            ("org-blocker-hook" variable nil nil [92589 92937])
            ("org-trigger-hook" variable nil nil [92939 93539])
            ("org-enforce-todo-dependencies" variable nil nil [93541 94173])
            ("org-enforce-todo-checkbox-dependencies" variable nil nil [94175 94934])
            ("org-treat-insert-todo-heading-as-state-change" variable nil nil [94936 95297])
            ("org-treat-S-cursor-todo-selection-as-state-change" variable (:default-value t) nil [95299 95628])
            ("org-todo-state-tags-triggers" variable nil nil [95630 96346])
            ("org-log-done" variable nil nil [96348 97073])
            ("cond" code nil nil [97114 97253])
            ("org-log-reschedule" variable nil nil [97255 97882])
            ("org-log-redeadline" variable nil nil [97884 98626])
            ("org-log-note-clock-out" variable nil nil [98628 98961])
            ("org-log-done-with-time" variable (:default-value t) nil [98963 99149])
            ("org-log-note-headings" variable (:default-value (quote ((done . "CLOSING NOTE %t") (state . "State %-12s from %-12S %t") (note . "Note taken on %t") (reschedule . "Rescheduled from %S on %t") (delschedule . "Not scheduled, was %S on %t") (redeadline . "New deadline from %S on %t") (deldeadline . "Removed deadline, was %S on %t") (refile . "Refiled on %t") (clock-out . "")))) nil [99151 101096])
            ("unless" code nil nil [101098 101187])
            ("org-log-into-drawer" variable nil nil [101189 102004])
            ("if" code nil nil [102006 102105])
            ("org-log-into-drawer" function nil nil [102107 102502])
            ("org-log-state-notes-insert-after-drawers" variable nil nil [102504 102965])
            ("org-log-states-order-reversed" variable (:default-value t) nil [102967 103209])
            ("org-todo-repeat-to-state" variable nil nil [103211 103648])
            ("org-log-repeat" variable (:default-value (quote time)) nil [103650 104696])
            ("org-priorities" customgroup (:user-visible-flag t) nil [104699 104799])
            ("org-enable-priority-commands" variable (:default-value t) nil [104801 105023])
            ("org-highest-priority" variable (:default-value 65) nil [105025 105235])
            ("org-lowest-priority" variable (:default-value 67) nil [105237 105445])
            ("org-default-priority" variable (:default-value 66) nil [105447 106126])
            ("org-priority-start-cycle-with-default" variable (:default-value t) nil [106128 106457])
            ("org-get-priority-function" variable nil nil [106459 106931])
            ("org-time" customgroup (:user-visible-flag t) nil [106933 107050])
            ("org-insert-labeled-timestamps-at-point" variable nil nil [107052 107426])
            ("org-time-stamp-formats" variable
               (:constant-flag t
                :default-value (quote ("<%Y-%m-%d %a>" . "<%Y-%m-%d %a %H:%M>")))
                nil [107428 107620])
            ("org-time-stamp-rounding-minutes" variable (:default-value (quote (0 5))) nil [107622 108635])
            ("when" code nil nil [108687 108856])
            ("org-display-custom-times" variable nil nil [108858 109183])
            ("make-variable-buffer-local" code nil nil [109184 109238])
            ("org-time-stamp-custom-formats" variable (:default-value (quote ("<%m/%d/%y %a>" . "<%m/%d/%y %a %H:%M>"))) nil [109240 109722])
            ("org-time-stamp-format" function (:arguments ("long" "inactive")) nil [109724 109974])
            ("org-time-clocksum-format" variable (:default-value "%d:%02d") nil [109976 110173])
            ("org-time-clocksum-use-fractional" variable nil nil [110175 110356])
            ("org-time-clocksum-fractional-format" variable (:default-value "%.2f") nil [110358 110548])
            ("org-deadline-warning-days" variable (:default-value 14) nil [110550 111005])
            ("org-read-date-prefer-future" variable (:default-value t) nil [111007 112093])
            ("org-agenda-jump-prefer-future" variable (:default-value (quote org-read-date-prefer-future)) nil [112095 112639])
            ("org-read-date-force-compatible-dates" variable (:default-value t) nil [112641 114057])
            ("org-read-date-display-live" variable (:default-value t) nil [114059 114260])
            ("org-read-date-popup-calendar" variable (:default-value t) nil [114262 114597])
            ("if" code nil nil [114598 114715])
            ("org-read-date-minibuffer-setup-hook" variable nil nil [114717 114944])
            ("org-extend-today-until" variable nil nil [114946 115685])
            ("org-use-effective-time" variable nil nil [115687 116022])
            ("org-edit-timestamp-down-means-later" variable nil nil [116024 116206])
            ("org-calendar-follow-timestamp-change" variable (:default-value t) nil [116208 116462])
            ("org-tags" customgroup (:user-visible-flag t) nil [116464 116560])
            ("org-tag-alist" variable nil nil [116562 117314])
            ("org-tag-persistent-alist" variable nil nil [117316 118154])
            ("org-complete-tags-always-offer-all-agenda-tags" variable nil nil [118156 118727])
            ("org-file-tags" variable nil nil [118729 118962])
            ("org-use-fast-tag-selection" variable (:default-value (quote auto)) nil [118964 119624])
            ("org-fast-tag-selection-single-key" variable nil nil [119626 120109])
            ("org-fast-tag-selection-include-todo" variable nil nil [120111 120296])
            ("org-tags-column" variable (:default-value (if (featurep (quote xemacs)) -76 -77)) nil [120298 120733])
            ("org-auto-align-tags" variable (:default-value t) nil [120735 121066])
            ("org-use-tag-inheritance" variable (:default-value t) nil [121068 122053])
            ("org-tags-exclude-from-inheritance" variable nil nil [122055 122386])
            ("org-tag-inherit-p" function (:arguments ("tag")) nil [122388 122837])
            ("org-tags-match-list-sublevels" variable (:default-value t) nil [122839 123822])
            ("org-tags-sort-function" variable nil nil [123824 124126])
            ("org-tags-history" variable nil nil [124128 124199])
            ("org-last-tags-completion-table" variable nil nil [124200 124288])
            ("org-after-tags-change-hook" variable nil nil [124289 124388])
            ("org-properties" customgroup (:user-visible-flag t) nil [124390 124504])
            ("org-property-format" variable (:default-value "%-10s %s") nil [124506 124834])
            ("org-properties-postprocess-alist" variable nil nil [124836 125809])
            ("org-use-property-inheritance" variable nil nil [125811 127117])
            ("org-property-inherit-p" function (:arguments ("property")) nil [127119 127572])
            ("org-columns-default-format" variable (:default-value "%25ITEM %TODO %3PRIORITY %TAGS") nil [127574 127847])
            ("org-columns-ellipses" variable (:default-value "..") nil [127849 128357])
            ("org-columns-modify-value-for-display-function" variable nil nil [128359 128859])
            ("org-effort-property" variable (:default-value "Effort") nil [128861 129124])
            ("org-global-properties-fixed" variable
               (:constant-flag t
                :default-value (quote (("VISIBILITY_ALL" . "folded children content all") ("CLOCK_MODELINE_TOTAL_ALL" . "current today repeat all auto"))))
                nil [129126 129699])
            ("org-global-properties" variable nil nil [129701 130238])
            ("org-file-properties" variable nil nil [130240 130421])
            ("make-variable-buffer-local" code nil nil [130422 130471])
            ("org-agenda" customgroup (:user-visible-flag t) nil [130473 130581])
            ("org-category" variable nil nil [130583 130909])
            ("make-variable-buffer-local" code nil nil [130910 130952])
            ("put" code nil nil [130953 131037])
            ("org-agenda-files" variable nil nil [131039 131863])
            ("org-agenda-file-regexp" variable (:default-value "\\`[^.].*\\.org\\'") nil [131865 132200])
            ("org-agenda-text-search-extra-files" variable nil nil [132202 133013])
            ("if" code nil nil [133015 133138])
            ("org-agenda-skip-unavailable-files" variable nil nil [133140 133365])
            ("org-calendar-to-agenda-key" variable (:default-value [99]) nil [133367 133708])
            ("org-calendar-insert-diary-entry-key" variable (:default-value [105]) nil [133710 134239])
            ("org-agenda-diary-file" variable (:default-value (quote diary-file)) nil [134241 134717])
            ("eval-after-load" code nil nil [134719 135067])
            ("org-latex" customgroup (:user-visible-flag t) nil [135069 135178])
            ("org-format-latex-options" variable (:default-value (quote (:foreground default :background default :scale 1.0 :html-foreground "Black" :html-background "Transparent" :html-scale 1.0 :matchers ("begin" "$1" "$" "$$" "\\(" "\\[")))) nil [135180 136500])
            ("org-format-latex-signal-error" variable (:default-value t) nil [136502 136714])
            ("org-latex-to-mathml-jar-file" variable nil nil [136716 137097])
            ("org-latex-to-mathml-convert-command" variable nil nil [137099 137751])
            ("org-latex-create-formula-image-program" variable (:default-value (quote dvipng)) nil [137753 138313])
            ("org-latex-preview-ltxpng-directory" variable (:default-value "ltxpng/") nil [138315 138622])
            ("org-format-latex-mathml-available-p" function nil nil [138624 139125])
            ("org-format-latex-header" variable (:default-value "\\documentclass{article}
\\usepackage[usenames]{color}
\\usepackage{amsmath}
\\usepackage[mathscr]{eucal}
\\pagestyle{empty}             % do not remove
[PACKAGES]
[DEFAULT-PACKAGES]
% The settings below are copied from fullpage.sty
\\setlength{\\textwidth}{\\paperwidth}
\\addtolength{\\textwidth}{-3cm}
\\setlength{\\oddsidemargin}{1.5cm}
\\addtolength{\\oddsidemargin}{-2.54cm}
\\setlength{\\evensidemargin}{\\oddsidemargin}
\\setlength{\\textheight}{\\paperheight}
\\addtolength{\\textheight}{-\\headheight}
\\addtolength{\\textheight}{-\\headsep}
\\addtolength{\\textheight}{-\\footskip}
\\addtolength{\\textheight}{-3cm}
\\setlength{\\topmargin}{1.5cm}
\\addtolength{\\topmargin}{-2.54cm}") nil [139127 140254])
            ("org-format-latex-header-extra" variable nil nil [140256 140298])
            ("org-set-packages-alist" function (:arguments ("var" "val")) nil [140300 140540])
            ("org-get-packages-alist" function (:arguments ("var")) nil [140542 140777])
            ("org-export-latex-default-packages-alist" variable (:default-value (quote (("AUTO" "inputenc" t) ("T1" "fontenc" t) ("" "fixltx2e" nil) ("" "graphicx" t) ("" "longtable" nil) ("" "float" nil) ("" "wrapfig" nil) ("" "soul" t) ("" "textcomp" t) ("" "marvosym" t) ("" "wasysym" t) ("" "latexsym" t) ("" "amssymb" t) ("" "hyperref" nil) "\\tolerance=1000"))) nil [140974 142814])
            ("org-export-latex-packages-alist" variable nil nil [142816 143701])
            ("org-appearance" customgroup (:user-visible-flag t) nil [143704 143809])
            ("org-level-color-stars-only" variable nil nil [143811 144102])
            ("org-hide-leading-stars" variable nil nil [144104 144689])
            ("org-hidden-keywords" variable nil nil [144691 145130])
            ("org-custom-properties" variable nil nil [145132 145465])
            ("org-fontify-done-headline" variable nil nil [145467 145808])
            ("org-fontify-emphasized-text" variable (:default-value t) nil [145810 146026])
            ("org-fontify-whole-heading-line" variable nil nil [146028 146245])
            ("org-highlight-latex-fragments-and-specials" variable nil nil [146247 146417])
            ("org-hide-emphasis-markers" variable nil nil [146419 146573])
            ("org-pretty-entities" variable nil nil [146575 146771])
            ("org-pretty-entities-include-sub-superscripts" variable (:default-value t) nil [146773 146970])
            ("org-emph-re" variable nil nil [146972 147541])
            ("org-verbatim-re" variable nil nil [147542 147621])
            ("org-emphasis-regexp-components" variable nil nil [147622 147661])
            ("org-emphasis-alist" variable nil nil [147683 147710])
            ("org-set-emph-re" function (:arguments ("var" "val")) nil [147732 149505])
            ("org-emphasis-regexp-components" variable (:default-value (quote (" 	('\"{" "- 	.,:!?;'\")}\\" " 	
,\"'" "." 1))) nil [149507 150852])
            ("org-emphasis-alist" variable (:default-value (\` (("*" bold "<b>" "</b>") ("/" italic "<i>" "</i>") ("_" underline "<span style=\"text-decoration:underline;\">" "</span>") ("=" org-code "<code>" "</code>" verbatim) ("~" org-verbatim "<code>" "</code>" verbatim) ("+" (\, (if (featurep (quote xemacs)) (quote org-table) (quote (:strike-through t)))) "<del>" "</del>")))) nil [150854 152035])
            ("org-protecting-blocks" variable (:default-value (quote ("src" "example" "latex" "ascii" "html" "docbook" "ditaa" "dot" "r" "R"))) nil [152037 152258])
            ("org-completion" customgroup (:user-visible-flag t) nil [152287 152382])
            ("org-completion-use-ido" variable nil nil [152384 152740])
            ("org-completion-use-iswitchb" variable nil nil [152742 153152])
            ("org-completion-fallback-command" variable (:default-value (quote hippie-expand)) nil [153154 153368])
            ("outline-mode-menu-heading" variable nil nil [153479 153513])
            ("outline-mode-menu-show" variable nil nil [153514 153545])
            ("outline-mode-menu-hide" variable nil nil [153546 153577])
            ("zmacs-regions" variable nil nil [153578 153600])
            ("mark-active" variable nil nil [153633 153653])
            ("declare-function" code nil nil [153675 153743])
            ("declare-function" code nil nil [153744 153811])
            ("declare-function" code nil nil [153812 153880])
            ("declare-function" code nil nil [153881 153945])
            ("declare-function" code nil nil [153946 154014])
            ("calc-embedded-close-formula" variable nil nil [154015 154051])
            ("calc-embedded-open-formula" variable nil nil [154052 154087])
            ("declare-function" code nil nil [154088 154135])
            ("declare-function" code nil nil [154136 154194])
            ("declare-function" code nil nil [154195 154281])
            ("font-lock-unfontify-region-function" variable nil nil [154282 154326])
            ("declare-function" code nil nil [154327 154454])
            ("iswitchb-temp-buflist" variable nil nil [154455 154485])
            ("declare-function" code nil nil [154486 154562])
            ("org-agenda-tags-todo-honor-ignore-options" variable nil nil [154563 154613])
            ("declare-function" code nil nil [154614 154664])
            ("declare-function" code nil nil [154665 154790])
            ("declare-function" code nil nil [154791 154860])
            ("declare-function" code nil nil [154861 154971])
            ("declare-function" code nil nil [154972 155052])
            ("declare-function" code nil nil [155053 155109])
            ("declare-function" code nil nil [155110 155197])
            ("declare-function" code nil nil [155198 155266])
            ("declare-function" code nil nil [155267 155379])
            ("declare-function" code nil nil [155380 155450])
            ("declare-function" code nil nil [155451 155514])
            ("declare-function" code nil nil [155515 155583])
            ("declare-function" code nil nil [155584 155646])
            ("declare-function" code nil nil [155647 155710])
            ("declare-function" code nil nil [155711 155769])
            ("declare-function" code nil nil [155770 155841])
            ("declare-function" code nil nil [155842 155905])
            ("declare-function" code nil nil [155906 155972])
            ("remember-data-file" variable nil nil [155973 156000])
            ("texmathp-why" variable nil nil [156001 156022])
            ("declare-function" code nil nil [156023 156094])
            ("declare-function" code nil nil [156095 156176])
            ("w3m-current-url" variable nil nil [156178 156202])
            ("w3m-current-title" variable nil nil [156203 156229])
            ("org-latex-regexps" variable nil nil [156231 156257])
            ("org-table-any-line-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*\\(|\\|\\+-[-+]\\)")
                nil [156444 156552])
            ("org-table-line-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*|")
                nil [156553 156631])
            ("org-table-dataline-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*|[^-]")
                nil [156632 156718])
            ("org-table-hline-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*|-")
                nil [156719 156800])
            ("org-table1-hline-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*\\+-[-+]")
                nil [156801 156890])
            ("org-table-any-border-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*[^|+ 	]")
                nil [156891 157053])
            ("org-autoload" code nil nil [157153 157236])
            ("turn-on-orgtbl" function nil nil [157254 157363])
            ("org-at-table-p" function (:arguments ("table-type")) nil [157365 157700])
            ("org-table-p" function nil nil [157701 157743])
            ("org-at-table.el-p" function nil nil [157745 157959])
            ("org-table-recognize-table.el" function nil nil [157961 158725])
            ("org-at-table-hline-p" function nil nil [158727 158937])
            ("org-table-clean-did-remove-column" variable nil nil [158939 158985])
            ("org-table-map-tables" function (:arguments ("function" "quietly")) nil [158986 159767])
            ("declare-function" code nil nil [159826 159879])
            ("declare-function" code nil nil [159880 159932])
            ("declare-function" code nil nil [159933 159985])
            ("org-autoload" code nil nil [160061 160154])
            ("declare-function" code nil nil [160157 160238])
            ("declare-function" code nil nil [160239 160299])
            ("declare-function" code nil nil [160300 160403])
            ("org-clock-start-time" variable nil nil [160404 160433])
            ("org-clock-marker" variable (:default-value (make-marker)) nil [160434 160513])
            ("org-clock-hd-marker" variable (:default-value (make-marker)) nil [160514 160623])
            ("org-clock-heading" variable nil nil [160624 160697])
            ("org-clock-is-active" function nil nil [160698 160860])
            ("org-autoload" code nil nil [160882 161004])
            ("org-check-running-clock" function nil nil [161007 161420])
            ("org-clocktable-try-shift" function (:arguments ("dir" "n")) nil [161422 161635])
            ("org-clock-persistence-insinuate" function nil nil [161652 161847])
            ("org-indent-mode" variable nil nil [161911 162041])
            ("org-archive" customgroup (:user-visible-flag t) nil [162144 162261])
            ("org-archive-location" variable (:default-value "%s_archive::") nil [162263 164677])
            ("org-archive-tag" variable (:default-value "ARCHIVE") nil [164679 165038])
            ("org-agenda-skip-archived-trees" variable (:default-value t) nil [165040 165436])
            ("org-columns-skip-archived-trees" variable (:default-value t) nil [165438 165614])
            ("org-cycle-open-archived-trees" variable nil nil [165616 165981])
            ("org-sparse-tree-open-archived-trees" variable nil nil [165983 166269])
            ("org-sparse-tree-default-date-type" variable (:default-value (quote scheduled-or-deadline)) nil [166271 167056])
            ("org-cycle-hide-archived-subtrees" function (:arguments ("state")) nil [167058 167724])
            ("org-force-cycle-archived" function (:user-visible-flag t) nil [167726 167932])
            ("org-hide-archived-subtrees" function (:arguments ("beg" "end")) nil [167934 168257])
            ("declare-function" code nil nil [168259 168313])
            ("declare-function" code nil nil [168314 168377])
            ("org-flag-subtree" function (:arguments ("flag")) nil [168378 168571])
            ("defalias" code nil nil [168573 168636])
            ("org-autoload" code nil nil [168658 168713])
            ("declare-function" code nil nil [168746 168832])
            ("declare-function" code nil nil [168833 168905])
            ("declare-function" code nil nil [168906 168969])
            ("org-autoload" code nil nil [168971 169174])
            ("declare-function" code nil nil [169197 169242])
            ("declare-function" code nil nil [169243 169292])
            ("declare-function" code nil nil [169293 169342])
            ("org-id-track-globally" variable nil nil [169343 169373])
            ("org-autoload" code nil nil [169374 169509])
            ("org-drawer-regexp" variable (:default-value "^[ 	]*:PROPERTIES:[ 	]*$") nil [169581 169678])
            ("make-variable-buffer-local" code nil nil [169679 169726])
            ("org-todo-regexp" variable nil nil [169727 169799])
            ("make-variable-buffer-local" code nil nil [169800 169845])
            ("org-not-done-regexp" variable nil nil [169846 169942])
            ("make-variable-buffer-local" code nil nil [169943 169992])
            ("org-not-done-heading-regexp" variable nil nil [169993 170079])
            ("make-variable-buffer-local" code nil nil [170080 170129])
            ("org-todo-line-regexp" variable nil nil [170130 170231])
            ("make-variable-buffer-local" code nil nil [170232 170282])
            ("org-complex-heading-regexp" variable nil nil [170283 170492])
            ("make-variable-buffer-local" code nil nil [170493 170549])
            ("org-complex-heading-regexp-format" variable nil nil [170550 170816])
            ("make-variable-buffer-local" code nil nil [170817 170880])
            ("org-todo-line-tags-regexp" variable nil nil [170881 171035])
            ("make-variable-buffer-local" code nil nil [171036 171091])
            ("org-ds-keyword-length" variable (:default-value 12) nil [171092 171184])
            ("make-variable-buffer-local" code nil nil [171185 171236])
            ("org-deadline-regexp" variable nil nil [171237 171303])
            ("make-variable-buffer-local" code nil nil [171304 171353])
            ("org-deadline-time-regexp" variable nil nil [171354 171452])
            ("make-variable-buffer-local" code nil nil [171453 171507])
            ("org-deadline-line-regexp" variable nil nil [171508 171604])
            ("make-variable-buffer-local" code nil nil [171605 171659])
            ("org-scheduled-regexp" variable nil nil [171660 171728])
            ("make-variable-buffer-local" code nil nil [171729 171779])
            ("org-scheduled-time-regexp" variable nil nil [171780 171880])
            ("make-variable-buffer-local" code nil nil [171881 171936])
            ("org-closed-time-regexp" variable nil nil [171937 172031])
            ("make-variable-buffer-local" code nil nil [172032 172084])
            ("org-keyword-time-regexp" variable nil nil [172086 172187])
            ("make-variable-buffer-local" code nil nil [172188 172241])
            ("org-keyword-time-not-clock-regexp" variable nil nil [172242 172353])
            ("make-variable-buffer-local" code nil nil [172354 172417])
            ("org-maybe-keyword-time-regexp" variable nil nil [172418 172517])
            ("make-variable-buffer-local" code nil nil [172518 172577])
            ("org-all-time-keywords" variable nil nil [172578 172639])
            ("make-variable-buffer-local" code nil nil [172640 172691])
            ("org-plain-time-of-day-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\<[012]?[0-9]" "\\(\\(:\\([0-5][0-9]\\([AaPp][Mm]\\)?\\)\\)\\|\\([AaPp][Mm]\\)\\)\\>\\)" "\\(--?" "\\(\\<[012]?[0-9]" "\\(\\(:\\([0-5][0-9]\\([AaPp][Mm]\\)?\\)\\)\\|\\([AaPp][Mm]\\)\\)\\>\\)" "\\)?"))
                nil [172693 173225])
            ("org-plain-time-extension-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\<[012]?[0-9]" "\\(\\(:\\([0-5][0-9]\\([AaPp][Mm]\\)?\\)\\)\\|\\([AaPp][Mm]\\)\\)\\>\\)" "\\+\\([0-9]+\\)\\(:\\([0-5][0-9]\\)\\)?"))
                nil [173227 173675])
            ("org-stamp-time-of-day-regexp" variable
               (:constant-flag t
                :default-value (concat "<\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} +\\sw+ +\\)" "\\([012][0-9]:[0-5][0-9]\\(-\\([012][0-9]:[0-5][0-9]\\)\\)?[^
>]*?\\)>" "\\(--?" "<\\1\\([012][0-9]:[0-5][0-9]\\)>\\)?"))
                nil [173677 174224])
            ("org-startup-options" variable
               (:constant-flag t
                :default-value (quote (("fold" org-startup-folded t) ("overview" org-startup-folded t) ("nofold" org-startup-folded nil) ("showall" org-startup-folded nil) ("showeverything" org-startup-folded showeverything) ("content" org-startup-folded content) ("indent" org-startup-indented t) ("noindent" org-startup-indented nil) ("hidestars" org-hide-leading-stars t) ("showstars" org-hide-leading-stars nil) ("odd" org-odd-levels-only t) ("oddeven" org-odd-levels-only nil) ("align" org-startup-align-all-tables t) ("noalign" org-startup-align-all-tables nil) ("inlineimages" org-startup-with-inline-images t) ("noinlineimages" org-startup-with-inline-images nil) ("customtime" org-display-custom-times t) ("logdone" org-log-done time) ("lognotedone" org-log-done note) ("nologdone" org-log-done nil) ("lognoteclock-out" org-log-note-clock-out t) ("nolognoteclock-out" org-log-note-clock-out nil) ("logrepeat" org-log-repeat state) ("lognoterepeat" org-log-repeat note) ("nologrepeat" org-log-repeat nil) ("logreschedule" org-log-reschedule time) ("lognotereschedule" org-log-reschedule note) ("nologreschedule" org-log-reschedule nil) ("logredeadline" org-log-redeadline time) ("lognoteredeadline" org-log-redeadline note) ("nologredeadline" org-log-redeadline nil) ("logrefile" org-log-refile time) ("lognoterefile" org-log-refile note) ("nologrefile" org-log-refile nil) ("fninline" org-footnote-define-inline t) ("nofninline" org-footnote-define-inline nil) ("fnlocal" org-footnote-section nil) ("fnauto" org-footnote-auto-label t) ("fnprompt" org-footnote-auto-label nil) ("fnconfirm" org-footnote-auto-label confirm) ("fnplain" org-footnote-auto-label plain) ("fnadjust" org-footnote-auto-adjust t) ("nofnadjust" org-footnote-auto-adjust nil) ("constcgs" constants-unit-system cgs) ("constSI" constants-unit-system SI) ("noptag" org-tag-persistent-alist nil) ("hideblocks" org-hide-block-startup t) ("nohideblocks" org-hide-block-startup nil) ("beamer" org-startup-with-beamer-mode t) ("entitiespretty" org-pretty-entities t) ("entitiesplain" org-pretty-entities nil))))
                nil [174226 176836])
            ("org-update-property-plist" function (:arguments ("key" "val" "props")) nil [176838 177296])
            ("org-block-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*#\\+begin_?\\([^ 
]+\\)\\(\\([^
]+\\)\\)?
\\([^ ]+?\\)#\\+end_?\\1[ 	]*$")
                nil [177298 177458])
            ("org-heading-keyword-regexp-format" variable
               (:constant-flag t
                :default-value "^\\(\\*+\\)\\(?: +%s\\)\\(?: +\\(.*?\\)\\)?[ 	]*$")
                nil [177459 177810])
            ("org-heading-keyword-maybe-regexp-format" variable
               (:constant-flag t
                :default-value "^\\(\\*+\\)\\(?: +%s\\)?\\(?: +\\(.*?\\)\\)?[ 	]*$")
                nil [177811 178159])
            ("org-set-regexps-and-options" function nil nil [178161 189894])
            ("org-file-contents" function (:arguments ("file" "noerror")) nil [189896 190274])
            ("org-extract-log-state-settings" function (:arguments ("x")) nil [190276 190880])
            ("org-remove-keyword-keys" function (:arguments ("list")) nil [190882 191102])
            ("org-assign-fast-keys" function (:arguments ("alist")) nil [191104 191735])
            ("org-window-configuration" variable nil nil [191780 191877])
            ("org-selected-window" variable nil nil [191878 191970])
            ("org-finish-function" variable nil nil [191971 192110])
            ("org-no-warnings" code nil nil [192246 192278])
            ("org-last-state" variable nil nil [192311 192334])
            ("org-no-warnings" code nil nil [192335 192366])
            ("org-entities" variable nil nil [192463 192484])
            ("org-struct-menu" variable nil nil [192519 192543])
            ("org-org-menu" variable nil nil [192544 192565])
            ("org-tbl-menu" variable nil nil [192566 192587])
            ("org-table-may-need-update" variable (:default-value t) nil [192695 192873])
            ("org-before-change-function" function (:arguments ("beg" "end")) nil [192874 193017])
            ("org-mode-map" variable nil nil [193018 193039])
            ("org-inhibit-startup" variable nil nil [193040 193072])
            ("org-inhibit-startup-visibility-stuff" variable nil nil [193108 193157])
            ("org-agenda-keep-modes" variable nil nil [193186 193220])
            ("org-inhibit-logging" variable nil nil [193254 193286])
            ("org-inhibit-blocking" variable nil nil [193322 193355])
            ("org-table-buffer-is-an" variable nil nil [193390 193425])
            ("bidi-paragraph-direction" variable nil nil [193427 193460])
            ("buffer-face-mode-face" variable nil nil [193461 193491])
            ("outline" include nil nil [193493 193511])
            ("if" code nil nil [193512 193729])
            ("noutline" include (:directory "noutline") nil [193730 193769])
            ("time-date" include nil nil [193828 193848])
            ("unless" code nil nil [193849 193923])
            ("easymenu" include nil nil [193924 193943])
            ("overlay" include nil nil [193944 193962])
            ("org-macs" include nil nil [193964 193983])
            ("org-entities" include nil nil [193984 194007])
            ("org-faces" include nil nil [194085 194105])
            ("org-list" include nil nil [194106 194125])
            ("org-pcomplete" include nil nil [194126 194150])
            ("org-src" include nil nil [194151 194169])
            ("org-footnote" include nil nil [194170 194193])
            ("ob" include nil nil [194204 194217])
            ("ob-table" include nil nil [194218 194237])
            ("ob-lob" include nil nil [194238 194255])
            ("ob-ref" include nil nil [194256 194273])
            ("ob-tangle" include nil nil [194274 194294])
            ("ob-comint" include nil nil [194295 194315])
            ("ob-keys" include nil nil [194316 194334])
            ("define-derived-mode" code nil nil [194351 200895])
            ("when" code nil nil [200897 201019])
            ("put" code nil nil [201021 201087])
            ("org-fix-ellipsis-at-bol" function nil nil [201089 201185])
            ("org-find-invisible-foreground" function nil nil [201187 201669])
            ("org-current-time" function nil nil [201671 202044])
            ("org-today" function nil nil [202046 202225])
            ("org-mouse-map" variable (:default-value (make-sparse-keymap)) nil [202275 202318])
            ("org-defkey" code nil nil [202319 202374])
            ("org-defkey" code nil nil [202375 202435])
            ("when" code nil nil [202436 202522])
            ("when" code nil nil [202523 202661])
            ("font-lock" include nil nil [202663 202683])
            ("org-non-link-chars" variable
               (:constant-flag t
                :default-value "]	
<>")
                nil [202685 202726])
            ("org-link-types" variable (:default-value (quote ("http" "https" "ftp" "mailto" "file" "news" "shell" "elisp" "doi" "message"))) nil [202727 202833])
            ("org-link-types-re" variable nil nil [202834 202925])
            ("org-link-re-with-space" variable nil nil [202926 203030])
            ("org-link-re-with-space2" variable nil nil [203031 203136])
            ("org-link-re-with-space3" variable nil nil [203137 203246])
            ("org-angle-link-re" variable nil nil [203247 203337])
            ("org-plain-link-re" variable nil nil [203338 203408])
            ("org-bracket-link-regexp" variable nil nil [203409 203484])
            ("org-bracket-link-analytic-regexp" variable nil nil [203485 203672])
            ("org-bracket-link-analytic-regexp++" variable nil nil [203673 203800])
            ("org-any-link-re" variable nil nil [203801 203871])
            ("org-match-sexp-depth" variable (:default-value 3) nil [203873 204104])
            ("org-create-multibrace-regexp" function (:arguments ("left" "right" "n")) nil [204106 204907])
            ("org-match-substring-regexp" variable (:default-value (concat "\\([^\\]\\|^\\)\\([_^]\\)\\(" "\\(" (org-create-multibrace-regexp "{" "}" org-match-sexp-depth) "\\)" "\\|" "\\(" (org-create-multibrace-regexp "(" ")" org-match-sexp-depth) "\\)" "\\|" "\\(\\(?:\\*\\|[-+]?[^-+*!@#$%^_ 	
,:\"?<>~;./{}=()]+\\)\\)\\)")) nil [204909 205287])
            ("org-match-substring-with-braces-regexp" variable (:default-value (concat "\\([^\\]\\|^\\)\\([_^]\\)\\(" "\\(" (org-create-multibrace-regexp "{" "}" org-match-sexp-depth) "\\)" "\\)")) nil [205289 205540])
            ("org-make-link-regexps" function nil nil [205542 207325])
            ("org-make-link-regexps" code nil nil [207327 207350])
            ("org-ts-regexp" variable
               (:constant-flag t
                :default-value "<\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^
>]*?\\)>")
                nil [207352 207490])
            ("org-ts-regexp-both" variable
               (:constant-flag t
                :default-value "[[<]\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^]
>]*?\\)[]>]")
                nil [207491 207641])
            ("org-ts-regexp0" variable
               (:constant-flag t
                :default-value "\\(\\([0-9]\\{4\\}\\)-\\([0-9]\\{2\\}\\)-\\([0-9]\\{2\\}\\)\\( +[^]+0-9>
 -]+\\)?\\( +\\([0-9]\\{1,2\\}\\):\\([0-9]\\{2\\}\\)\\)?\\)")
                nil [207642 207992])
            ("org-ts-regexp1" variable
               (:constant-flag t
                :default-value "\\(\\([0-9]\\{4\\}\\)-\\([0-9]\\{2\\}\\)-\\([0-9]\\{2\\}\\) *\\([^]+0-9>
 -]*\\)\\( \\([0-9]\\{1,2\\}\\):\\([0-9]\\{2\\}\\)\\)?\\)")
                nil [207993 208213])
            ("org-ts-regexp2" variable
               (:constant-flag t
                :default-value (concat "<" org-ts-regexp1 "[^>
]\\{0,16\\}>"))
                nil [208214 208345])
            ("org-ts-regexp3" variable
               (:constant-flag t
                :default-value (concat "[[<]" org-ts-regexp1 "[^]>
]\\{0,16\\}[]>]"))
                nil [208346 208496])
            ("org-tr-regexp" variable
               (:constant-flag t
                :default-value (concat org-ts-regexp "--?-?" org-ts-regexp))
                nil [208497 208618])
            ("org-tr-regexp-both" variable
               (:constant-flag t
                :default-value (concat org-ts-regexp-both "--?-?" org-ts-regexp-both))
                nil [208619 208757])
            ("org-tsr-regexp" variable
               (:constant-flag t
                :default-value (concat org-ts-regexp "\\(--?-?" org-ts-regexp "\\)?"))
                nil [208758 208909])
            ("org-tsr-regexp-both" variable
               (:constant-flag t
                :default-value (concat org-ts-regexp-both "\\(--?-?" org-ts-regexp-both "\\)?"))
                nil [208910 209126])
            ("org-emph-face" variable nil nil [209128 209154])
            ("org-do-emphasis-faces" function (:arguments ("limit")) nil [209156 210087])
            ("org-emphasize" function
               (:user-visible-flag t
                :arguments ("char"))
                nil [210089 212184])
            ("org-nonsticky-props" variable
               (:constant-flag t
                :default-value (quote (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)))
                nil [212186 212309])
            ("org-rear-nonsticky-at" function (:arguments ("pos")) nil [212311 212429])
            ("org-activate-plain-links" function (:arguments ("limit")) nil [212431 213072])
            ("org-activate-code" function (:arguments ("limit")) nil [213074 213365])
            ("org-src-fontify-natively" variable nil nil [213367 213534])
            ("org-allow-promoting-top-level-subtree" variable nil nil [213536 213772])
            ("org-fontify-meta-lines-and-blocks" function (:arguments ("limit")) nil [213774 213949])
            ("org-fontify-meta-lines-and-blocks-1" function (:arguments ("limit")) nil [213951 218328])
            ("org-activate-angle-links" function (:arguments ("limit")) nil [218330 218763])
            ("org-activate-footnote-links" function (:arguments ("limit")) nil [218765 219337])
            ("org-activate-bracket-links" function (:arguments ("limit")) nil [219339 220998])
            ("org-activate-dates" function (:arguments ("limit")) nil [221000 221638])
            ("org-target-link-regexp" variable nil nil [221640 221736])
            ("make-variable-buffer-local" code nil nil [221737 221789])
            ("org-target-regexp" variable (:default-value "<<\\([^<>
]+\\)>>") nil [221790 221886])
            ("org-radio-target-regexp" variable (:default-value "<<<\\([^<>
]+\\)>>>") nil [221887 221992])
            ("org-any-target-regexp" variable (:default-value "<<<?\\([^<>
]+\\)>>>?") nil [221993 222155])
            ("org-activate-target-links" function (:arguments ("limit")) nil [222157 222723])
            ("org-update-radio-target-regexp" function (:user-visible-flag t) nil [222725 223019])
            ("org-hide-wide-columns" function (:arguments ("limit")) nil [223021 223339])
            ("org-latex-and-specials-regexp" variable nil nil [223341 223445])
            ("org-match-substring-regexp" variable nil nil [223446 223481])
            ("org-match-substring-with-braces-regexp" variable nil nil [223482 223529])
            ("org-export-html-special-string-regexps" variable
               (:constant-flag t
                :default-value (quote (("\\\\-" . "&shy;") ("---\\([^-]\\)" . "&mdash;\\1") ("--\\([^-]\\)" . "&ndash;\\1") ("\\.\\.\\." . "&hellip;"))))
                nil [223609 223842])
            ("org-compute-latex-and-specials-regexp" function nil nil [223845 225848])
            ("org-do-latex-and-special-faces" function (:arguments ("limit")) nil [225850 226617])
            ("org-restart-font-lock" function nil nil [226619 226809])
            ("org-all-targets" function (:arguments ("radio")) nil [226811 227197])
            ("org-make-target-link-regexp" function (:arguments ("targets")) nil [227199 227604])
            ("org-activate-tags" function (:arguments ("limit")) nil [227606 227979])
            ("org-outline-level" function nil nil [227981 228434])
            ("org-font-lock-keywords" variable nil nil [228436 228471])
            ("org-property-re" variable
               (:constant-flag t
                :default-value (org-re "^[ 	]*\\(:\\([-[:alnum:]_]+\\+?\\):\\)[ 	]*\\([^ 	
].*\\)"))
                nil [228473 228623])
            ("org-font-lock-hook" variable nil nil [228625 228712])
            ("org-font-lock-set-keywords-hook" variable nil nil [228714 229044])
            ("org-font-lock-hook" function (:arguments ("limit")) nil [229046 229172])
            ("org-set-font-lock-defaults" function nil nil [229174 233168])
            ("org-toggle-pretty-entities" function (:user-visible-flag t) nil [233170 233605])
            ("org-custom-properties-overlays" variable nil nil [233607 233699])
            ("make-variable-buffer-local" code nil nil [233700 233760])
            ("org-toggle-custom-properties-visibility" function (:user-visible-flag t) nil [233762 234514])
            ("org-fontify-entities" function (:arguments ("limit")) nil [234516 235197])
            ("org-fontify-like-in-org-mode" function (:arguments ("s" "odd-levels")) nil [235199 235452])
            ("org-m" variable nil nil [235454 235472])
            ("org-l" variable nil nil [235473 235491])
            ("org-f" variable nil nil [235492 235510])
            ("org-get-level-face" function (:arguments ("n")) nil [235511 236037])
            ("org-get-todo-face" function (:arguments ("kwd")) nil [236040 236394])
            ("org-face-from-face-or-color" function (:arguments ("context" "inherit" "face-or-color")) nil [236396 236743])
            ("org-font-lock-add-tag-faces" function (:arguments ("limit")) nil [236745 237094])
            ("org-font-lock-add-priority-faces" function (:arguments ("limit")) nil [237096 237584])
            ("org-get-tag-face" function (:arguments ("kwd")) nil [237586 237874])
            ("org-unfontify-region" function (:arguments ("beg" "end" "maybe_loudly")) nil [237876 238467])
            ("org-script-display" variable
               (:constant-flag t
                :default-value (quote (((raise -0.3) (height 0.7)) ((raise 0.3) (height 0.7)) ((raise -0.5)) ((raise 0.5)))))
                nil [238469 238663])
            ("org-remove-font-lock-display-properties" function (:arguments ("beg" "end")) nil [238665 239151])
            ("org-raise-scripts" function (:arguments ("limit")) nil [239153 240770])
            ("org-cycle-global-status" variable nil nil [240850 240886])
            ("make-variable-buffer-local" code nil nil [240887 240940])
            ("org-cycle-subtree-status" variable nil nil [240941 240978])
            ("make-variable-buffer-local" code nil nil [240979 241033])
            ("org-inlinetask-min-level" variable nil nil [241035 241068])
            ("org-cycle" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [241085 247249])
            ("org-cycle-internal-global" function nil nil [247251 248570])
            ("org-cycle-internal-local" function nil nil [248572 252908])
            ("org-global-cycle" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [252925 253569])
            ("org-set-startup-visibility" function nil nil [253571 254154])
            ("org-set-visibility-according-to-property" function
               (:user-visible-flag t
                :arguments ("no-cleanup"))
                nil [254156 255066])
            ("org-overview" function (:user-visible-flag t) nil [255249 255899])
            ("org-content" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [255901 256506])
            ("org-optimize-window-after-visibility-change" function (:arguments ("state")) nil [256509 256994])
            ("org-remove-empty-overlays-at" function (:arguments ("pos")) nil [256996 257319])
            ("org-clean-visibility-after-subtree-move" function nil nil [257321 258307])
            ("org-cycle-show-empty-lines" function (:arguments ("state")) nil [258309 260087])
            ("org-show-empty-lines-in-parent" function nil nil [260089 260334])
            ("org-files-list" function nil nil [260336 260834])
            ("org-entry-beginning-position" function nil nil [260836 260989])
            ("org-entry-end-position" function nil nil [260991 261127])
            ("org-cycle-hide-drawers" function (:arguments ("state")) nil [261129 261697])
            ("org-flag-drawer" function (:arguments ("flag")) nil [261699 262147])
            ("org-subtree-end-visible-p" function nil nil [262149 262311])
            ("org-first-headline-recenter" function (:arguments ("N")) nil [262313 262669])
            ("org-outline-overlay-data" function (:arguments ("use-markers")) nil [262708 263467])
            ("org-set-outline-overlay-data" function (:arguments ("data")) nil [263469 263782])
            ("org-hide-block-overlays" variable nil nil [263807 263871])
            ("make-variable-buffer-local" code nil nil [263872 263925])
            ("org-block-map" function (:arguments ("function" "start" "end")) nil [263927 264432])
            ("org-hide-block-toggle-all" function nil nil [264434 264575])
            ("org-hide-block-all" function (:user-visible-flag t) nil [264577 264736])
            ("org-show-block-all" function (:user-visible-flag t) nil [264738 264914])
            ("org-hide-block-toggle-maybe" function (:user-visible-flag t) nil [264916 265240])
            ("org-hide-block-toggle" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [265271 266950])
            ("add-hook" code nil nil [266992 267051])
            ("add-hook" code nil nil [267096 267217])
            ("org-goto-window-configuration" variable nil nil [267233 267275])
            ("org-goto-marker" variable nil nil [267276 267304])
            ("org-goto-map" variable nil nil [267305 267326])
            ("org-goto-map" function nil nil [267327 268917])
            ("org-goto-help" variable
               (:constant-flag t
                :default-value "Browse buffer copy, to find location or copy text.%s
RET=jump to location             C-g=quit and return to previous location
[Up]/[Down]=next/prev headline   TAB=cycle visibility   [/] org-occur")
                nil [268919 269145])
            ("org-goto-start-pos" variable nil nil [269147 269174])
            ("org-goto" function
               (:user-visible-flag t
                :arguments ("alternative-interface"))
                nil [269260 271054])
            ("org-goto-selected-point" variable nil nil [271056 271092])
            ("org-goto-exit-command" variable nil nil [271124 271158])
            ("org-goto-local-auto-isearch-map" variable nil nil [271190 271230])
            ("org-get-location" function (:arguments ("buf" "help")) nil [271248 272989])
            ("org-goto-local-auto-isearch-map" variable (:default-value (make-sparse-keymap)) nil [272991 273052])
            ("set-keymap-parent" code nil nil [273053 273121])
            ("define-key" code nil nil [273122 273201])
            ("define-key" code nil nil [273202 273281])
            ("org-goto-local-search-headings" function (:arguments ("string" "bound" "noerror")) nil [273283 273736])
            ("org-goto-local-auto-isearch" function (:user-visible-flag t) nil [273738 274029])
            ("org-goto-ret" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [274031 274231])
            ("org-goto-left" function (:user-visible-flag t) nil [274233 274513])
            ("org-goto-right" function (:user-visible-flag t) nil [274515 274774])
            ("org-goto-quit" function (:user-visible-flag t) nil [274776 274955])
            ("org-indirect-dedicated-frame" variable nil nil [274998 275099])
            ("org-last-indirect-buffer" variable nil nil [275100 275137])
            ("org-tree-to-indirect-buffer" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [275139 277864])
            ("org-get-indirect-buffer" function (:arguments ("buffer")) nil [277866 278257])
            ("org-set-frame-title" function (:arguments ("title")) nil [278259 278509])
            ("org-previous-line-empty-p" function nil nil [278560 278716])
            ("org-insert-heading" function
               (:user-visible-flag t
                :arguments ("force-heading" "invisible-ok"))
                nil [278718 282985])
            ("org-get-heading" function (:arguments ("no-tags" "no-todo")) nil [282987 283645])
            ("org-heading-components" function nil nil [283647 284438])
            ("org-get-entry" function nil nil [284440 284629])
            ("org-insert-heading-after-current" function (:user-visible-flag t) nil [284631 284857])
            ("org-insert-heading-respect-content" function
               (:user-visible-flag t
                :arguments ("invisible-ok"))
                nil [284859 285096])
            ("org-insert-todo-heading-respect-content" function
               (:user-visible-flag t
                :arguments ("force-state"))
                nil [285098 285358])
            ("org-insert-todo-heading" function
               (:user-visible-flag t
                :arguments ("arg" "force-heading"))
                nil [285360 286481])
            ("org-insert-subheading" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [286483 286750])
            ("org-insert-todo-subheading" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [286752 287059])
            ("org-after-demote-entry-hook" variable nil nil [287089 287297])
            ("org-after-promote-entry-hook" variable nil nil [287299 287510])
            ("org-promote-subtree" function (:user-visible-flag t) nil [287512 287726])
            ("org-demote-subtree" function (:user-visible-flag t) nil [287728 287958])
            ("org-do-promote" function (:user-visible-flag t) nil [287961 288308])
            ("org-do-demote" function (:user-visible-flag t) nil [288310 288653])
            ("org-fix-position-after-promote" function nil nil [288655 289051])
            ("org-current-level" function nil nil [289053 289353])
            ("org-get-previous-line-level" function nil nil [289355 289849])
            ("org-reduced-level" function (:arguments ("l")) nil [289851 290069])
            ("org-level-increment" function nil nil [290071 290285])
            ("org-get-valid-level" function (:arguments ("level" "change")) nil [290287 290871])
            ("if" code nil nil [290873 291146])
            ("org-called-with-limited-levels" variable nil nil [291148 291191])
            ("org-promote" function nil nil [291245 292184])
            ("org-demote" function nil nil [292186 292870])
            ("org-cycle-level" function (:user-visible-flag t) nil [292872 294420])
            ("org-map-tree" function (:arguments ("fun")) nil [294422 294743])
            ("org-map-region" function (:arguments ("fun" "beg" "end")) nil [294745 295161])
            ("org-property-end-re" variable nil nil [295163 295191])
            ("org-fixup-indentation" function (:arguments ("diff")) nil [295216 295997])
            ("org-convert-to-odd-levels" function (:user-visible-flag t) nil [295999 296581])
            ("org-convert-to-oddeven-levels" function (:user-visible-flag t) nil [296583 297561])
            ("org-tr-level" function (:arguments ("n")) nil [297563 297657])
            ("org-move-subtree-up" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [297718 297908])
            ("org-move-subtree-down" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [297910 300586])
            ("org-subtree-clip" variable nil nil [300588 300808])
            ("org-subtree-clip-folded" variable nil nil [300810 300936])
            ("org-cut-subtree" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [300938 301191])
            ("org-copy-subtree" function
               (:user-visible-flag t
                :arguments ("n" "cut" "force-store-markers"))
                nil [301193 302603])
            ("org-paste-subtree" function
               (:user-visible-flag t
                :arguments ("level" "tree" "for-yank"))
                nil [302605 306689])
            ("org-kill-is-subtree-p" function (:arguments ("txt")) nil [306691 307699])
            ("org-markers-to-move" variable nil nil [307701 307890])
            ("org-save-markers-in-region" function (:arguments ("beg" "end")) nil [307892 308535])
            ("org-check-and-save-marker" function (:arguments ("marker" "beg" "end")) nil [308537 308879])
            ("org-reinstall-markers-in-region" function (:arguments ("beg")) nil [308881 309110])
            ("org-narrow-to-subtree" function (:user-visible-flag t) nil [309112 309461])
            ("org-narrow-to-block" function (:user-visible-flag t) nil [309463 309756])
            ("org-property-drawer-re" variable nil nil [309779 309810])
            ("org-property-start-re" variable nil nil [309813 309843])
            ("org-clone-subtree-with-time-shift" function
               (:user-visible-flag t
                :arguments ("n" "shift"))
                nil [309862 313397])
            ("org-sort" function
               (:user-visible-flag t
                :arguments ("with-case"))
                nil [313420 313805])
            ("org-sort-remove-invisible" function (:arguments ("s")) nil [313807 314064])
            ("org-priority-regexp" variable nil nil [314066 314094])
            ("org-after-sorting-entries-or-items-hook" variable nil nil [314124 314443])
            ("org-sort-entries" function
               (:user-visible-flag t
                :arguments ("with-case" "sorting-type" "getkey-func" "compare-func" "property"))
                nil [314445 321971])
            ("org-do-sort" function (:arguments ("table" "what" "with-case" "sorting-type")) nil [321973 323546])
            ("orgstruct-mode-map" variable (:default-value (make-sparse-keymap)) nil [324732 324823])
            ("org-local-vars" variable nil nil [324825 324910])
            ("define-minor-mode" code nil nil [324927 325803])
            ("turn-on-orgstruct" function nil nil [325820 325915])
            ("org-fb-vars" variable nil nil [325917 325941])
            ("make-variable-buffer-local" code nil nil [325942 325983])
            ("orgstruct++-mode" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [325984 327019])
            ("orgstruct-is-++" variable nil nil [327021 327110])
            ("make-variable-buffer-local" code nil nil [327111 327156])
            ("turn-on-orgstruct++" function nil nil [327173 327274])
            ("orgstruct-error" function (:user-visible-flag t) nil [327276 327446])
            ("orgstruct-setup" function nil nil [327448 330055])
            ("orgstruct-make-binding" function (:arguments ("fun" "n" "keys")) nil [330057 331069])
            ("org-contextualize-keys" function (:arguments ("alist" "contexts")) nil [331071 332505])
            ("org-contextualize-validate-key" function (:arguments ("key" "contexts")) nil [332507 333277])
            ("org-context-p" function (:arguments ("contexts")) nil [333279 333824])
            ("org-get-local-variables" function nil nil [333826 334451])
            ("org-clone-local-variables" function (:arguments ("from-buffer" "regexp")) nil [334453 334851])
            ("org-run-like-in-org-mode" function (:arguments ("cmd")) nil [334868 335319])
            ("org-get-category" function (:arguments ("pos" "force-refresh")) nil [335337 335685])
            ("org-refresh-category-properties" function nil nil [335687 336759])
            ("org-refresh-properties" function (:arguments ("dprop" "tprop")) nil [336761 337337])
            ("org-link-expand-abbrev" function (:arguments ("link")) nil [337381 338152])
            ("org-insert-link-history" variable nil nil [338187 338289])
            ("org-stored-links" variable nil nil [338291 338373])
            ("org-store-link-plist" variable nil nil [338375 338488])
            ("org-link-protocols" variable nil nil [338490 338585])
            ("org-store-link-functions" variable nil nil [338587 339542])
            ("org-add-link-type" function (:arguments ("type" "follow" "export")) nil [339544 341041])
            ("org-agenda-buffer-name" variable nil nil [341043 341074])
            ("org-id-link-to-org-use-id" variable nil nil [341102 341136])
            ("org-store-link" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [341176 348064])
            ("org-store-link-props" function (:arguments ("plist")) nil [348066 348914])
            ("org-add-link-props" function (:arguments ("plist")) nil [348916 349175])
            ("org-email-link-description" function (:arguments ("fmt")) nil [349177 350293])
            ("org-make-org-heading-search-string" function
               (:user-visible-flag t
                :arguments ("string" "heading"))
                nil [350295 351418])
            ("org-make-link-string" function (:arguments ("link" "description")) nil [351420 352681])
            ("org-link-escape-chars" variable
               (:constant-flag t
                :default-value (quote (32 91 93 59 61 43)))
                nil [352683 352851])
            ("org-link-escape-chars-browser" variable
               (:constant-flag t
                :default-value (quote (32)))
                nil [352853 353034])
            ("org-link-escape" function (:arguments ("text" "table" "merge")) nil [353036 353988])
            ("org-link-unescape" function (:arguments ("str")) nil [353990 354478])
            ("org-link-unescape-compound" function (:arguments ("hex")) nil [354480 355580])
            ("org-link-unescape-single-byte-sequence" function (:arguments ("hex")) nil [355582 355812])
            ("org-xor" function (:arguments ("a" "b")) nil [355814 355872])
            ("org-fixup-message-id-for-http" function (:arguments ("s")) nil [355874 356359])
            ("org-link-prettify" function (:arguments ("link")) nil [356361 356687])
            ("org-insert-link-global" function (:user-visible-flag t) nil [356704 356940])
            ("org-insert-all-links" function
               (:user-visible-flag t
                :arguments ("keep"))
                nil [356942 357255])
            ("org-link-fontify-links-to-this-file" function nil nil [357257 358017])
            ("org-link-links-in-this-file" variable nil nil [358019 358059])
            ("org-insert-link" function
               (:user-visible-flag t
                :arguments ("complete-file" "link-location" "default-description"))
                nil [358060 365862])
            ("org-link-try-special-completion" function (:arguments ("type")) nil [365864 366149])
            ("org-file-complete-link" function (:arguments ("arg")) nil [366151 366940])
            ("org-completing-read" function (:arguments ("args")) nil [366942 367440])
            ("org-completing-read-no-i" function (:arguments ("args")) nil [367442 367586])
            ("org-iswitchb-completing-read" function (:arguments ("prompt" "choices" "args")) nil [367588 367974])
            ("org-icompleting-read" function (:arguments ("args")) nil [367976 368771])
            ("org-extract-attributes" function (:arguments ("s")) nil [368773 369295])
            ("org-extract-attributes-from-string" function (:arguments ("tag")) nil [369297 369608])
            ("org-attributes-to-string" function (:arguments ("plist")) nil [369610 369885])
            ("org-link-search-failed" variable nil nil [369917 369952])
            ("org-open-link-functions" variable nil nil [369954 370772])
            ("org-next-link" function (:user-visible-flag t) nil [370774 371432])
            ("org-previous-link" function (:user-visible-flag t) nil [371434 372096])
            ("org-translate-link" function (:arguments ("s")) nil [372098 372480])
            ("org-translate-link-from-planner" function (:arguments ("type" "path")) nil [372482 373424])
            ("org-find-file-at-mouse" function
               (:user-visible-flag t
                :arguments ("ev"))
                nil [373426 373572])
            ("org-open-at-mouse" function
               (:user-visible-flag t
                :arguments ("ev"))
                nil [373574 373863])
            ("org-window-config-before-follow-link" variable nil nil [373865 374021])
            ("org-open-link-marker" variable (:default-value (make-marker)) nil [374023 374140])
            ("org-open-at-point-global" function (:user-visible-flag t) nil [374157 374376])
            ("org-open-link-from-string" function
               (:user-visible-flag t
                :arguments ("s" "arg" "reference-buffer"))
                nil [374393 374926])
            ("org-open-at-point-functions" variable nil nil [374928 375177])
            ("clean-buffer-list-kill-buffer-names" variable nil nil [375179 375223])
            ("org-open-at-point" function
               (:user-visible-flag t
                :arguments ("arg" "reference-buffer"))
                nil [375249 383523])
            ("org-offer-links-in-entry" function (:arguments ("buffer" "marker" "nth" "zero")) nil [383525 385884])
            ("org-add-link-type" code nil nil [385945 386002])
            ("org-add-link-type" code nil nil [386003 386061])
            ("org-open-file-with-system" function (:arguments ("path")) nil [386062 386191])
            ("org-open-file-with-emacs" function (:arguments ("path")) nil [386192 386293])
            ("org-remove-file-link-modifiers" function nil nil [386294 386561])
            ("eval-after-load" code nil nil [386562 386694])
            ("org-create-file-search-functions" variable nil nil [386713 387805])
            ("org-execute-file-search-functions" variable nil nil [387807 388864])
            ("org-link-search-inhibit-query" variable nil nil [388866 388908])
            ("org-link-search" function (:arguments ("s" "type" "avoid-pos" "stealth")) nil [388931 394609])
            ("org-search-not-self" function (:arguments ("group" "args")) nil [394611 395394])
            ("org-get-buffer-for-internal-link" function (:arguments ("buffer")) nil [395396 396044])
            ("org-do-occur" function (:arguments ("regexp" "cleanup")) nil [396046 396769])
            ("org-mark-ring" variable nil nil [396806 396886])
            ("org-mark-ring-last-goto" variable nil nil [396887 396975])
            ("setq" code nil nil [397003 397055])
            ("loop" code nil nil [397084 397171])
            ("setcdr" code nil nil [397172 397244])
            ("org-mark-ring-push" function
               (:user-visible-flag t
                :arguments ("pos" "buffer"))
                nil [397246 397701])
            ("org-mark-ring-goto" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [397703 398457])
            ("org-remove-angle-brackets" function (:arguments ("s")) nil [398459 398626])
            ("org-add-angle-brackets" function (:arguments ("s")) nil [398627 398794])
            ("org-remove-double-quotes" function (:arguments ("s")) nil [398795 398963])
            ("org-follow-timestamp-link" function nil nil [398995 399827])
            ("declare-function" code nil nil [399855 399929])
            ("declare-function" code nil nil [399930 399991])
            ("declare-function" code nil nil [399992 400079])
            ("org-wait" variable nil nil [400080 400101])
            ("org-open-file" function (:arguments ("path" "in-emacs" "line" "search")) nil [400102 405411])
            ("org-file-apps-entry-match-against-dlink-p" function (:arguments ("entry")) nil [405413 406077])
            ("org-default-apps" function nil nil [406079 406347])
            ("org-apps-regexp-alist" function (:arguments ("list" "add-auto-mode")) nil [406349 407013])
            ("ange-ftp-name-format" variable nil nil [407015 407044])
            ("org-file-remote-p" function (:arguments ("file")) nil [407079 407598])
            ("org-get-org-file" function nil nil [407616 407887])
            ("org-notes-order-reversed-p" function nil nil [407889 408323])
            ("org-refile-target-table" variable nil nil [408325 408418])
            ("org-agenda-new-buffers" variable nil nil [408420 408498])
            ("org-refile-cache" variable nil nil [408500 408559])
            ("org-refile-markers" variable nil nil [408561 408647])
            ("org-refile-marker" function (:arguments ("pos")) nil [408649 408882])
            ("org-refile-cache-clear" function nil nil [408884 409140])
            ("org-refile-cache-check-set" function (:arguments ("set")) nil [409142 409520])
            ("org-refile-cache-put" function (:arguments ("set" "identifiers")) nil [409522 409814])
            ("org-refile-cache-get" function (:arguments ("identifiers")) nil [409816 410189])
            ("org-refile-get-targets" function (:arguments ("default-buffer" "excluded-entries")) nil [410191 413961])
            ("org-protect-slash" function (:arguments ("s")) nil [413963 414067])
            ("org-olpa" variable (:default-value (make-vector 20 nil)) nil [414069 414107])
            ("org-get-outline-path" function (:arguments ("fastp" "level" "heading")) nil [414109 414909])
            ("org-format-outline-path" function (:arguments ("path" "width" "prefix")) nil [414911 416226])
            ("org-display-outline-path" function
               (:user-visible-flag t
                :arguments ("file" "current"))
                nil [416228 416844])
            ("org-refile-history" variable nil nil [416846 416914])
            ("org-after-refile-insert-hook" variable nil nil [416916 417117])
            ("org-capture-last-stored-marker" variable nil nil [417119 417158])
            ("org-refile" function
               (:user-visible-flag t
                :arguments ("goto" "default-buffer" "rfloc"))
                nil [417159 422706])
            ("org-refile-goto-last-stored" function (:user-visible-flag t) nil [422708 422916])
            ("org-refile-get-location" function (:arguments ("prompt" "default-buffer" "new-nodes" "no-exclude")) nil [422918 425934])
            ("declare-function" code nil nil [425936 425985])
            ("org-refile-check-position" function (:arguments ("refile-pointer")) nil [425986 426766])
            ("org-refile-new-child" function (:arguments ("parent-target" "child")) nil [426768 427603])
            ("org-olpath-completing-read" function (:arguments ("prompt" "collection" "args")) nil [427605 428505])
            ("org-find-dblock" function (:arguments ("name")) nil [428528 428945])
            ("org-dblock-start-re" variable
               (:constant-flag t
                :default-value "^[ 	]*#\\+\\(?:BEGIN\\|begin\\):[ 	]+\\(\\S-+\\)\\([ 	]+\\(.*\\)\\)?")
                nil [428947 429117])
            ("org-dblock-end-re" variable
               (:constant-flag t
                :default-value "^[ 	]*#\\+\\(?:END\\|end\\)\\([: 	
]\\|$\\)")
                nil [429119 429238])
            ("org-create-dblock" function (:arguments ("plist")) nil [429240 429826])
            ("org-prepare-dblock" function nil nil [429828 430761])
            ("org-map-dblocks" function (:arguments ("command")) nil [430763 431360])
            ("org-dblock-update" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [431362 431698])
            ("org-update-dblock" function (:user-visible-flag t) nil [431700 432689])
            ("org-beginning-of-dblock" function nil nil [432691 433125])
            ("org-update-all-dblocks" function (:user-visible-flag t) nil [433127 433335])
            ("org-additional-option-like-keywords" variable
               (:constant-flag t
                :default-value (quote ("BEGIN_HTML" "END_HTML" "HTML:" "ATTR_HTML:" "BEGIN_DocBook" "END_DocBook" "DocBook:" "ATTR_DocBook:" "BEGIN_LaTeX" "END_LaTeX" "LaTeX:" "LATEX_HEADER:" "LATEX_CLASS:" "LATEX_CLASS_OPTIONS:" "ATTR_LaTeX:" "BEGIN:" "END:" "ORGTBL" "TBLFM:" "TBLNAME:" "BEGIN_EXAMPLE" "END_EXAMPLE" "BEGIN_VERBATIM" "END_VERBATIM" "BEGIN_QUOTE" "END_QUOTE" "BEGIN_VERSE" "END_VERSE" "BEGIN_CENTER" "END_CENTER" "BEGIN_SRC" "END_SRC" "BEGIN_RESULT" "END_RESULT" "BEGIN_lstlisting" "END_lstlisting" "NAME:" "RESULTS:" "HEADER:" "HEADERS:" "COLUMNS:" "PROPERTY:" "CAPTION:" "LABEL:" "SETUPFILE:" "INCLUDE:" "INDEX:" "BIND:" "MACRO:")))
                nil [433355 434105])
            ("org-options-keywords" variable
               (:constant-flag t
                :default-value (quote ("TITLE:" "AUTHOR:" "EMAIL:" "DATE:" "DESCRIPTION:" "KEYWORDS:" "LANGUAGE:" "OPTIONS:" "EXPORT_SELECT_TAGS:" "EXPORT_EXCLUDE_TAGS:" "LINK_UP:" "LINK_HOME:" "LINK:" "TODO:" "XSLT:" "MATHJAX:" "CATEGORY:" "SEQ_TODO:" "TYP_TODO:" "PRIORITIES:" "DRAWERS:" "STARTUP:" "TAGS:" "STYLE:" "FILETAGS:" "ARCHIVE:" "INFOJS_OPT:")))
                nil [434107 434483])
            ("org-additional-option-like-keywords-for-flyspell" variable
               (:constant-flag t
                :default-value (delete-dups (split-string (mapconcat (lambda (k) (replace-regexp-in-string "_\\|:" " " (concat k " " (downcase k) " " (upcase k)))) (append org-options-keywords org-additional-option-like-keywords) " ") " +" t)))
                nil [434485 434796])
            ("org-structure-template-alist" variable (:default-value (quote (("s" "#+BEGIN_SRC ?

#+END_SRC" "<src lang=\"?\">

</src>") ("e" "#+BEGIN_EXAMPLE
?
#+END_EXAMPLE" "<example>
?
</example>") ("q" "#+BEGIN_QUOTE
?
#+END_QUOTE" "<quote>
?
</quote>") ("v" "#+BEGIN_VERSE
?
#+END_VERSE" "<verse>
?
</verse>") ("V" "#+BEGIN_VERBATIM
?
#+END_VERBATIM" "<verbatim>
?
</verbatim>") ("c" "#+BEGIN_CENTER
?
#+END_CENTER" "<center>
?
</center>") ("l" "#+BEGIN_LaTeX
?
#+END_LaTeX" "<literal style=\"latex\">
?
</literal>") ("L" "#+LaTeX: " "<literal style=\"latex\">?</literal>") ("h" "#+BEGIN_HTML
?
#+END_HTML" "<literal style=\"html\">
?
</literal>") ("H" "#+HTML: " "<literal style=\"html\">?</literal>") ("a" "#+BEGIN_ASCII
?
#+END_ASCII") ("A" "#+ASCII: ") ("i" "#+INDEX: ?" "#+INDEX: ?") ("I" "#+INCLUDE: %file ?" "<include file=%file markup=\"?\">")))) nil [434798 436520])
            ("org-try-structure-completion" function nil nil [436522 437026])
            ("org-complete-expand-structure-template" function (:arguments ("start" "cell")) nil [437028 437883])
            ("org-toggle-comment" function (:user-visible-flag t) nil [437916 438408])
            ("org-last-todo-state-is-todo" variable nil nil [438410 438602])
            ("org-setting-tags" variable nil nil [438604 438633])
            ("org-todo-setup-filter-hook" variable nil nil [438657 438848])
            ("org-todo-get-default-hook" variable nil nil [438850 439061])
            ("org-agenda-headline-snapshot-before-repeat" variable nil nil [439063 439114])
            ("org-current-effective-time" function nil nil [439116 439460])
            ("org-todo-yesterday" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [439462 439805])
            ("org-todo" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [439807 449280])
            ("org-block-todo-from-children-or-siblings-or-parent" function (:arguments ("change-plist")) nil [449282 452042])
            ("org-track-ordered-property-with-tag" variable nil nil [452077 452918])
            ("org-toggle-ordered-property" function (:user-visible-flag t) nil [452920 453620])
            ("org-blocked-by-checkboxes" variable nil nil [453622 453656])
            ("org-block-todo-from-checkboxes" function (:arguments ("change-plist")) nil [453678 454956])
            ("org-entry-blocked-p" function nil nil [454973 455329])
            ("org-update-statistics-cookies" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [455331 456657])
            ("org-entry-property-inherited-from" variable nil nil [456659 456701])
            ("org-update-parent-todo-statistics" function nil nil [456719 459922])
            ("org-after-todo-statistics-hook" variable nil nil [459924 460655])
            ("org-todo-statistics-hook" variable nil nil [460657 460894])
            ("org-todo-trigger-tag-changes" function (:arguments ("state")) nil [460896 461563])
            ("org-local-logging" function (:arguments ("value")) nil [461565 462160])
            ("org-get-todo-sequence-head" function (:arguments ("kwd")) nil [462162 462730])
            ("org-fast-todo-selection" function nil nil [462732 464778])
            ("org-entry-is-todo-p" function nil nil [464780 464864])
            ("org-entry-is-done-p" function nil nil [464866 464946])
            ("org-get-todo-state" function nil nil [464948 465103])
            ("org-at-date-range-p" function
               (:user-visible-flag t
                :arguments ("inactive-ok"))
                nil [465105 465650])
            ("org-get-repeat" function (:arguments ("tagline")) nil [465652 466015])
            ("org-last-changed-timestamp" variable nil nil [466017 466052])
            ("org-last-inserted-timestamp" variable nil nil [466053 466089])
            ("org-log-post-message" variable nil nil [466090 466119])
            ("org-log-note-purpose" variable nil nil [466120 466149])
            ("org-log-note-how" variable nil nil [466150 466175])
            ("org-log-note-extra" variable nil nil [466176 466203])
            ("org-auto-repeat-maybe" function (:arguments ("done-word")) nil [466204 470013])
            ("org-show-todo-tree" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [470015 471020])
            ("org-deadline" function
               (:user-visible-flag t
                :arguments ("remove" "time"))
                nil [471022 473029])
            ("org-schedule" function
               (:user-visible-flag t
                :arguments ("remove" "time"))
                nil [473031 475043])
            ("org-get-scheduled-time" function (:arguments ("pom" "inherit")) nil [475045 475367])
            ("org-get-deadline-time" function (:arguments ("pom" "inherit")) nil [475369 475683])
            ("org-remove-timestamp-with-keyword" function (:arguments ("keyword")) nil [475685 476352])
            ("org-add-planning-info" function
               (:user-visible-flag t
                :arguments ("what" "time" "remove"))
                nil [476354 480407])
            ("org-log-note-marker" variable (:default-value (make-marker)) nil [480409 480451])
            ("org-log-note-purpose" variable nil nil [480452 480485])
            ("org-log-note-state" variable nil nil [480486 480517])
            ("org-log-note-previous-state" variable nil nil [480518 480558])
            ("org-log-note-how" variable nil nil [480559 480588])
            ("org-log-note-extra" variable nil nil [480589 480620])
            ("org-log-note-window-configuration" variable nil nil [480621 480667])
            ("org-log-note-return-to" variable (:default-value (make-marker)) nil [480668 480713])
            ("org-log-note-effective-time" variable nil nil [480714 480877])
            ("org-log-post-message" variable nil nil [480879 481003])
            ("org-add-note" function (:user-visible-flag t) nil [481005 481190])
            ("org-property-end-re" variable nil nil [481192 481220])
            ("org-add-log-setup" function (:arguments ("purpose" "state" "prev-state" "findpos" "how" "extra")) nil [481221 483502])
            ("org-skip-over-state-notes" function nil nil [483504 483936])
            ("org-add-log-note" function (:arguments ("purpose")) nil [483938 485609])
            ("org-note-abort" variable nil nil [485611 485638])
            ("org-store-log-note" function nil nil [485660 488559])
            ("org-remove-empty-drawer-at" function (:arguments ("drawer" "pos")) nil [488561 488950])
            ("org-ts-type" variable nil nil [488952 488976])
            ("org-sparse-tree" function
               (:user-visible-flag t
                :arguments ("arg" "type"))
                nil [488977 491598])
            ("org-occur-highlights" variable nil nil [491600 491678])
            ("make-variable-buffer-local" code nil nil [491679 491729])
            ("org-occur-parameters" variable nil nil [491730 492283])
            ("make-variable-buffer-local" code nil nil [492284 492334])
            ("org-occur" function
               (:user-visible-flag t
                :arguments ("regexp" "keep-previous" "callback"))
                nil [492336 494026])
            ("org-occur-next-match" function (:arguments ("n" "reset")) nil [494028 494883])
            ("org-show-context" function (:arguments ("key")) nil [494885 496217])
            ("org-reveal-start-hook" variable nil nil [496219 496295])
            ("org-reveal" function
               (:user-visible-flag t
                :arguments ("siblings"))
                nil [496297 497268])
            ("org-highlight-new-match" function (:arguments ("beg" "end")) nil [497270 497549])
            ("org-remove-occur-highlights" function
               (:user-visible-flag t
                :arguments ("beg" "end" "noremove"))
                nil [497551 498074])
            ("org-priority-regexp" variable (:default-value ".*?\\(\\[#\\([A-Z0-9]\\)\\] ?\\)") nil [498093 498212])
            ("org-remove-priority-next-time" variable nil nil [498214 498256])
            ("org-priority-up" function (:user-visible-flag t) nil [498258 498368])
            ("org-priority-down" function (:user-visible-flag t) nil [498370 498484])
            ("org-priority" function
               (:user-visible-flag t
                :arguments ("action" "show"))
                nil [498486 501538])
            ("org-show-priority" function (:user-visible-flag t) nil [501540 502061])
            ("org-get-priority" function (:arguments ("s")) nil [502063 502427])
            ("org-agenda-archives-mode" variable nil nil [502440 502473])
            ("org-map-continue-from" variable nil nil [502474 502633])
            ("org-scanner-tags" variable nil nil [502635 502724])
            ("org-trust-scanner-tags" variable nil nil [502725 503303])
            ("org-scan-tags" function (:arguments ("action" "matcher" "todo-only" "start-level")) nil [503305 508957])
            ("org-remove-uninherited-tags" function (:arguments ("tags")) nil [508959 509624])
            ("org-match-sparse-tree" function
               (:user-visible-flag t
                :arguments ("todo-only" "match"))
                nil [509626 510070])
            ("defalias" code nil nil [510072 510127])
            ("org-cached-props" variable nil nil [510129 510158])
            ("org-cached-entry-get" function (:arguments ("pom" "property")) nil [510159 510742])
            ("org-global-tags-completion-table" function (:arguments ("files")) nil [510744 511335])
            ("org-make-tags-matcher" function (:arguments ("match")) nil [511337 516897])
            ("org-op-to-function" function (:arguments ("op" "stringp")) nil [516899 517443])
            ("org<>" function (:arguments ("a" "b")) nil [517445 517478])
            ("org-string<=" function (:arguments ("a" "b")) nil [517479 517538])
            ("org-string>=" function (:arguments ("a" "b")) nil [517539 517585])
            ("org-string>" function (:arguments ("a" "b")) nil [517586 517658])
            ("org-string<>" function (:arguments ("a" "b")) nil [517659 517705])
            ("org-time=" function (:arguments ("a" "b")) nil [517706 517799])
            ("org-time<" function (:arguments ("a" "b")) nil [517800 517893])
            ("org-time<=" function (:arguments ("a" "b")) nil [517894 517987])
            ("org-time>" function (:arguments ("a" "b")) nil [517988 518081])
            ("org-time>=" function (:arguments ("a" "b")) nil [518082 518175])
            ("org-time<>" function (:arguments ("a" "b")) nil [518176 518269])
            ("org-2ft" function (:arguments ("s")) nil [518270 518634])
            ("org-time-today" function nil nil [518636 518886])
            ("org-matcher-time" function (:arguments ("s")) nil [518888 519471])
            ("org-match-any-p" function (:arguments ("re" "list")) nil [519473 519624])
            ("org-add-colon-after-tag-completion" variable nil nil [519626 519673])
            ("org-tags-overlay" variable (:default-value (make-overlay 1 1)) nil [519703 519747])
            ("org-detach-overlay" code nil nil [519748 519785])
            ("org-get-local-tags-at" function (:arguments ("pos")) nil [519787 519919])
            ("org-get-local-tags" function nil nil [519921 520037])
            ("org-get-tags-at" function
               (:user-visible-flag t
                :arguments ("pos" "local"))
                nil [520039 521515])
            ("org-add-prop-inherited" function (:arguments ("s")) nil [521517 521609])
            ("org-toggle-tag" function (:arguments ("tag" "onoff")) nil [521611 522635])
            ("org-align-tags-here" function (:arguments ("to-col")) nil [522637 523431])
            ("org-set-tags-command" function
               (:user-visible-flag t
                :arguments ("arg" "just-align"))
                nil [523433 523838])
            ("org-set-tags-to" function
               (:user-visible-flag t
                :arguments ("data"))
                nil [523840 524821])
            ("org-align-all-tags" function (:user-visible-flag t) nil [524823 525071])
            ("org-indent-indentation-per-level" variable nil nil [525073 525114])
            ("org-set-tags" function
               (:user-visible-flag t
                :arguments ("arg" "just-align"))
                nil [525115 528943])
            ("org-change-tag-in-region" function
               (:user-visible-flag t
                :arguments ("beg" "end" "tag" "off"))
                nil [528945 530376])
            ("org-tags-completion-function" function (:arguments ("string" "predicate" "flag")) nil [530378 531191])
            ("org-fast-tag-insert" function (:arguments ("kwd" "tags" "face" "end")) nil [531193 531450])
            ("org-fast-tag-show-exit" function (:arguments ("flag")) nil [531452 531786])
            ("org-set-current-tags-overlay" function (:arguments ("current" "prefix")) nil [531788 532162])
            ("org-last-tag-selection-key" variable nil nil [532164 532203])
            ("org-fast-tag-selection" function (:arguments ("current" "inherited" "table" "todo-table")) nil [532204 538861])
            ("org-get-tags-string" function nil nil [538863 539168])
            ("org-get-tags" function nil nil [539170 539300])
            ("org-get-buffer-tags" function nil nil [539302 539798])
            ("org-map-entries" function (:arguments ("func" "match" "scope" "skip")) nil [539822 545280])
            ("org-special-properties" variable
               (:constant-flag t
                :default-value (quote ("TODO" "TAGS" "ALLTAGS" "DEADLINE" "SCHEDULED" "CLOCK" "CLOSED" "PRIORITY" "TIMESTAMP" "TIMESTAMP_IA" "BLOCKED" "FILE" "CLOCKSUM" "CLOCKSUM_T")))
                nil [545338 545659])
            ("org-default-properties" variable
               (:constant-flag t
                :default-value (quote ("ARCHIVE" "CATEGORY" "SUMMARY" "DESCRIPTION" "CUSTOM_ID" "LOCATION" "LOGGING" "COLUMNS" "VISIBILITY" "TABLE_EXPORT_FORMAT" "TABLE_EXPORT_FILE" "EXPORT_OPTIONS" "EXPORT_TEXT" "EXPORT_FILE_NAME" "EXPORT_TITLE" "EXPORT_AUTHOR" "EXPORT_DATE" "ORDERED" "NOBLOCKING" "COOKIE_DATA" "LOG_INTO_DRAWER" "REPEAT_TO_STATE" "CLOCK_MODELINE_TOTAL" "STYLE" "HTML_CONTAINER_CLASS")))
                nil [545661 546224])
            ("org-property-start-re" variable
               (:constant-flag t
                :default-value "^[ 	]*:PROPERTIES:[ 	]*$")
                nil [546226 546356])
            ("org-property-end-re" variable
               (:constant-flag t
                :default-value "^[ 	]*:END:[ 	]*$")
                nil [546358 546478])
            ("org-clock-drawer-start-re" variable
               (:constant-flag t
                :default-value "^[ 	]*:CLOCK:[ 	]*$")
                nil [546480 546609])
            ("org-clock-drawer-end-re" variable
               (:constant-flag t
                :default-value "^[ 	]*:END:[ 	]*$")
                nil [546611 546736])
            ("org-property-drawer-re" variable
               (:constant-flag t
                :default-value (concat "\\(" org-property-start-re "\\)[^ ]*\\(" org-property-end-re "\\)
?"))
                nil [546738 546898])
            ("org-clock-drawer-re" variable
               (:constant-flag t
                :default-value (concat "\\(" org-clock-drawer-start-re "\\)[^ ]*\\(" org-property-end-re "\\)
?"))
                nil [546900 547058])
            ("org-re-property" function (:arguments ("property")) nil [547060 547251])
            ("org-re-property-keyword" function (:arguments ("property")) nil [547253 547454])
            ("org-property-action" function (:user-visible-flag t) nil [547456 548032])
            ("org-inc-effort" function (:user-visible-flag t) nil [548034 548169])
            ("org-set-effort" function
               (:user-visible-flag t
                :arguments ("value" "increment"))
                nil [548171 549878])
            ("org-at-property-p" function nil nil [549880 550303])
            ("org-get-property-block" function (:arguments ("beg" "end" "force")) nil [550305 551473])
            ("org-entry-properties" function (:arguments ("pom" "which" "specific")) nil [551475 556320])
            ("org-entry-get" function (:arguments ("pom" "property" "inherit" "literal-nil")) nil [556322 558250])
            ("org-property-or-variable-value" function (:arguments ("var" "inherit")) nil [558252 558613])
            ("org-entry-delete" function (:arguments ("pom" "property")) nil [558615 559093])
            ("org-entry-add-to-multivalued-property" function (:arguments ("pom" "property" "value")) nil [559239 559678])
            ("org-entry-remove-from-multivalued-property" function (:arguments ("pom" "property" "value")) nil [559680 560125])
            ("org-entry-member-in-multivalued-property" function (:arguments ("pom" "property" "value")) nil [560127 560448])
            ("org-entry-get-multivalued-property" function (:arguments ("pom" "property")) nil [560450 560711])
            ("org-entry-put-multivalued-property" function (:arguments ("pom" "property" "values")) nil [560713 561140])
            ("org-entry-protect-space" function (:arguments ("s")) nil [561142 561370])
            ("org-entry-restore-space" function (:arguments ("s")) nil [561372 561600])
            ("org-entry-property-inherited-from" variable (:default-value (make-marker)) nil [561602 561997])
            ("org-entry-get-with-inheritance" function (:arguments ("property" "literal-nil")) nil [561999 563102])
            ("org-property-changed-functions" variable nil nil [563104 563297])
            ("org-entry-put" function (:arguments ("pom" "property" "value")) nil [563299 565420])
            ("org-buffer-property-keys" function (:arguments ("include-specials" "include-defaults" "include-columns")) nil [565422 567130])
            ("org-property-values" function (:arguments ("key")) nil [567132 567486])
            ("org-insert-property-drawer" function nil nil [567488 568758])
            ("org-insert-drawer" function
               (:user-visible-flag t
                :arguments ("arg" "drawer"))
                nil [568760 571074])
            ("org-property-set-functions-alist" variable nil nil [571076 571311])
            ("org-set-property-function" function (:arguments ("property")) nil [571313 571571])
            ("org-read-property-value" function (:arguments ("property")) nil [571573 572320])
            ("org-last-set-property" variable nil nil [572322 572356])
            ("org-read-property-name" function nil nil [572357 573119])
            ("org-set-property" function
               (:user-visible-flag t
                :arguments ("property" "value"))
                nil [573121 573974])
            ("org-delete-property" function
               (:user-visible-flag t
                :arguments ("property"))
                nil [573976 574356])
            ("org-delete-property-globally" function
               (:user-visible-flag t
                :arguments ("property"))
                nil [574358 574957])
            ("org-columns-current-fmt-compiled" variable nil nil [574959 575000])
            ("org-compute-property-at-point" function (:user-visible-flag t) nil [575030 575565])
            ("org-property-allowed-value-functions" variable nil nil [575567 576027])
            ("org-property-get-allowed-values" function (:arguments ("pom" "property" "table")) nil [576029 577216])
            ("org-property-previous-allowed-value" function
               (:user-visible-flag t
                :arguments ("previous"))
                nil [577218 577392])
            ("org-property-next-allowed-value" function
               (:user-visible-flag t
                :arguments ("previous"))
                nil [577394 578589])
            ("org-find-olp" function (:arguments ("path" "this-buffer")) nil [578591 580230])
            ("org-find-exact-headline-in-buffer" function (:arguments ("heading" "buffer" "pos-only")) nil [580232 580964])
            ("org-find-exact-heading-in-directory" function (:arguments ("heading" "dir")) nil [580966 581695])
            ("org-find-entry-with-id" function
               (:user-visible-flag t
                :arguments ("ident"))
                nil [581697 582489])
            ("org-last-changed-timestamp" variable nil nil [582508 582547])
            ("org-last-inserted-timestamp" variable nil nil [582548 582651])
            ("org-time-was-given" variable nil nil [582652 582679])
            ("org-end-time-was-given" variable nil nil [582711 582742])
            ("org-ts-what" variable nil nil [582774 582794])
            ("org-time-stamp" function
               (:user-visible-flag t
                :arguments ("arg" "inactive"))
                nil [582827 585754])
            ("org-get-compact-tod" function (:arguments ("s")) nil [585835 586481])
            ("org-time-stamp-inactive" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [586483 586898])
            ("org-date-ovl" variable (:default-value (make-overlay 1 1)) nil [586900 586940])
            ("overlay-put" code nil nil [586941 586992])
            ("org-detach-overlay" code nil nil [586993 587026])
            ("org-ans1" variable nil nil [587028 587045])
            ("org-ans2" variable nil nil [587077 587094])
            ("org-plain-time-of-day-regexp" variable nil nil [587127 587164])
            ("org-overriding-default-time" variable nil nil [587182 587222])
            ("org-read-date-overlay" variable nil nil [587244 587278])
            ("org-dcst" variable nil nil [587279 587300])
            ("org-read-date-history" variable nil nil [587322 587356])
            ("org-read-date-final-answer" variable nil nil [587357 587396])
            ("org-read-date-analyze-futurep" variable nil nil [587397 587439])
            ("org-read-date-analyze-forced-year" variable nil nil [587440 587486])
            ("org-read-date-inactive" variable nil nil [587487 587518])
            ("org-read-date" function (:arguments ("org-with-time" "to-time" "from-string" "prompt" "default-time" "default-input" "inactive")) nil [587520 596009])
            ("org-def" variable nil nil [596011 596027])
            ("org-defdecode" variable nil nil [596028 596050])
            ("org-with-time" variable nil nil [596051 596073])
            ("org-read-date-display" function nil nil [596074 597540])
            ("org-read-date-analyze" function (:arguments ("ans" "org-def" "org-defdecode")) nil [597542 605679])
            ("parse-time-weekdays" variable nil nil [605681 605709])
            ("org-read-date-get-relative" function (:arguments ("s" "today" "default")) nil [605710 607158])
            ("org-order-calendar-date-args" function (:arguments ("arg1" "arg2" "arg3")) nil [607160 607922])
            ("org-eval-in-calendar" function (:arguments ("form" "keepdate")) nil [607924 608662])
            ("org-calendar-select" function (:user-visible-flag t) nil [608664 609117])
            ("org-insert-time-stamp" function (:arguments ("time" "with-hm" "inactive" "pre" "post" "extra")) nil [609119 610303])
            ("org-toggle-time-stamp-overlays" function (:user-visible-flag t) nil [610305 611157])
            ("org-display-custom-time" function (:arguments ("beg" "end")) nil [611159 612233])
            ("org-translate-time" function (:arguments ("string")) nil [612235 613179])
            ("org-fix-decoded-time" function (:arguments ("time")) nil [613181 613382])
            ("org-days-to-time" function (:arguments ("timestamp-string")) nil [613384 613583])
            ("org-deadline-close" function (:arguments ("timestamp-string" "ndays")) nil [613585 613857])
            ("org-get-wdays" function (:arguments ("ts")) nil [613859 614429])
            ("org-calendar-select-mouse" function
               (:user-visible-flag t
                :arguments ("ev"))
                nil [614431 614919])
            ("org-check-deadlines" function
               (:user-visible-flag t
                :arguments ("ndays"))
                nil [614921 615775])
            ("org-re-timestamp" function (:arguments ("type")) nil [615777 616719])
            ("org-check-before-date" function
               (:user-visible-flag t
                :arguments ("date"))
                nil [616721 617145])
            ("org-check-after-date" function
               (:user-visible-flag t
                :arguments ("date"))
                nil [617147 617583])
            ("org-check-dates-range" function
               (:user-visible-flag t
                :arguments ("start-date" "end-date"))
                nil [617585 618288])
            ("org-evaluate-time-range" function
               (:user-visible-flag t
                :arguments ("to-buffer"))
                nil [618290 620582])
            ("org-make-tdiff-string" function (:arguments ("y" "d" "h" "m")) nil [620584 621074])
            ("org-time-string-to-time" function (:arguments ("s" "buffer" "pos")) nil [621076 621431])
            ("org-time-string-to-seconds" function (:arguments ("s")) nil [621433 621573])
            ("org-time-string-to-absolute" function (:arguments ("s" "daynr" "prefer" "show-all" "buffer" "pos")) nil [621575 622550])
            ("org-days-to-iso-week" function (:arguments ("days")) nil [622552 622682])
            ("org-small-year-to-year" function (:arguments ("year")) nil [622684 623025])
            ("org-time-from-absolute" function (:arguments ("d")) nil [623027 623296])
            ("org-calendar-holiday" function nil nil [623298 623575])
            ("org-diary-sexp-entry" function (:arguments ("sexp" "entry" "date")) nil [623577 624382])
            ("org-diary-to-ical-string" function (:arguments ("frombuf")) nil [624384 625227])
            ("org-closest-date" function (:arguments ("start" "current" "change" "prefer" "show-all")) nil [625229 628348])
            ("org-date-to-gregorian" function (:arguments ("date")) nil [628350 628748])
            ("org-parse-time-string" function (:arguments ("s" "nodefault")) nil [628750 629493])
            ("org-timestamp-up" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [629495 629817])
            ("org-timestamp-down" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [629819 630147])
            ("org-timestamp-up-day" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [630149 630458])
            ("org-timestamp-down-day" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [630460 630777])
            ("org-at-timestamp-p" function
               (:user-visible-flag t
                :arguments ("inactive-ok"))
                nil [630779 631915])
            ("org-toggle-timestamp-type" function (:user-visible-flag t) nil [631917 632434])
            ("org-at-clock-log-p" function nil nil [632436 632590])
            ("org-clock-history" variable nil nil [632592 632618])
            ("org-clock-adjust-closest" variable nil nil [632665 632702])
            ("org-timestamp-change" function (:arguments ("n" "what" "updown")) nil [632738 638523])
            ("org-modify-ts-extra" function (:arguments ("s" "pos" "n" "dm")) nil [638525 640054])
            ("org-recenter-calendar" function (:arguments ("date")) nil [640056 640372])
            ("org-goto-calendar" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [640374 641115])
            ("org-get-date-from-calendar" function nil nil [641117 641310])
            ("org-date-from-calendar" function (:user-visible-flag t) nil [641312 641731])
            ("org-minutes-to-hh:mm-string" function (:arguments ("m")) nil [641733 641908])
            ("org-hh:mm-string-to-minutes" function (:arguments ("s")) nil [641910 642471])
            ("org-effort-durations" variable (:default-value (\` (("h" . 60) ("d" \, (* 60 8)) ("w" \, (* 60 8 5)) ("m" \, (* 60 8 5 4)) ("y" \, (* 60 8 5 40))))) nil [642473 643116])
            ("org-agenda-inhibit-startup" variable (:default-value t) nil [643118 643439])
            ("org-duration-string-to-minutes" function (:arguments ("s" "output-to-string")) nil [643441 644217])
            ("org-save-all-org-buffers" function (:user-visible-flag t) nil [644231 644549])
            ("org-revert-all-org-buffers" function (:user-visible-flag t) nil [644551 645566])
            ("org-switchb" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [645602 646488])
            ("defalias" code nil nil [646572 646612])
            ("defalias" code nil nil [646628 646665])
            ("org-buffer-list" function (:arguments ("predicate" "exclude-tmp")) nil [646667 647899])
            ("org-agenda-files" function (:arguments ("unrestricted" "archives")) nil [647901 649029])
            ("org-agenda-file-p" function (:arguments ("file")) nil [649031 649260])
            ("org-edit-agenda-file-list" function (:user-visible-flag t) nil [649262 650185])
            ("org-store-new-agenda-file-list" function (:arguments ("list")) nil [650187 650848])
            ("org-read-agenda-file-list" function (:arguments ("pair-with-expansion")) nil [650850 651568])
            ("org-cycle-agenda-files" function (:user-visible-flag t) nil [651585 652294])
            ("org-agenda-file-to-front" function
               (:user-visible-flag t
                :arguments ("to-end"))
                nil [652296 653317])
            ("org-remove-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [653319 654189])
            ("org-file-menu-entry" function (:arguments ("file")) nil [654191 654266])
            ("org-check-agenda-file" function (:arguments ("file")) nil [654268 654664])
            ("org-get-agenda-file-buffer" function (:arguments ("file")) nil [654666 655069])
            ("org-release-buffers" function (:arguments ("blist")) nil [655071 655556])
            ("org-agenda-prepare-buffers" function
               (:user-visible-flag t
                :arguments ("files"))
                nil [655558 657683])
            ("org-cdlatex-mode-map" variable (:default-value (make-sparse-keymap)) nil [657706 657801])
            ("org-defkey" code nil nil [657803 657870])
            ("org-defkey" code nil nil [657871 657938])
            ("org-defkey" code nil nil [657939 657997])
            ("org-defkey" code nil nil [657998 658060])
            ("org-defkey" code nil nil [658061 658123])
            ("org-cdlatex-texmathp-advice-is-done" variable nil nil [658125 658245])
            ("define-minor-mode" code nil nil [658247 659451])
            ("turn-on-org-cdlatex" function nil nil [659453 659554])
            ("org-inside-LaTeX-fragment-p" function nil nil [659556 661515])
            ("org-inside-latex-macro-p" function nil nil [661517 661717])
            ("org-try-cdlatex-tab" function nil nil [661719 662511])
            ("org-cdlatex-underscore-caret" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [662513 662888])
            ("org-cdlatex-math-modify" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [662890 663252])
            ("org-latex-fragment-image-overlays" variable nil nil [663254 663361])
            ("make-variable-buffer-local" code nil nil [663362 663425])
            ("org-remove-latex-fragment-image-overlays" function nil nil [663427 663654])
            ("org-preview-latex-fragment" function
               (:user-visible-flag t
                :arguments ("subtree"))
                nil [663656 665486])
            ("org-latex-regexps" variable (:default-value (quote (("begin" "^[ 	]*\\(\\\\begin{\\([a-zA-Z0-9\\*]+\\)[^ ]+?\\\\end{\\2}\\)" 1 t) ("$1" "\\([^$]\\|^\\)\\(\\$[^ 	
,;.$]\\$\\)\\([- 	.,?;:'\") ]\\|$\\)" 2 nil) ("$" "\\([^$]\\|^\\)\\(\\(\\$\\([^ 	
,;.$][^$
]*?\\(
[^$
]*?\\)\\{0,2\\}[^ 	
,.$]\\)\\$\\)\\)\\([- 	.,?;:'\") ]\\|$\\)" 2 nil) ("\\(" "\\\\([^ ]*?\\\\)" 0 nil) ("\\[" "\\\\\\[[^ ]*?\\\\\\]" 0 nil) ("$$" "\\$\\$[^ ]*?\\$\\$" 0 nil)))) nil [665488 666227])
            ("org-export-have-math" variable nil nil [666229 666262])
            ("org-format-latex" function (:arguments ("prefix" "dir" "overlays" "msg" "at" "forbuffer" "processing-type")) nil [666282 671381])
            ("org-create-math-formula" function
               (:user-visible-flag t
                :arguments ("latex-frag" "mathml-file"))
                nil [671383 673764])
            ("org-format-latex-as-mathml" function (:arguments ("latex-frag" "latex-frag-type" "prefix" "dir")) nil [673766 674993])
            ("org-create-formula-image-with-dvipng" function (:arguments ("string" "tofile" "options" "buffer")) nil [675053 677496])
            ("org-latex-to-pdf-process" variable nil nil [677498 677531])
            ("org-create-formula-image-with-imagemagick" function (:arguments ("string" "tofile" "options" "buffer")) nil [677559 681278])
            ("org-splice-latex-header" function (:arguments ("tpl" "def-pkg" "pkg" "snippets-p" "extra")) nil [681280 683092])
            ("org-latex-packages-to-string" function (:arguments ("pkg" "snippets-p" "newline")) nil [683094 683618])
            ("org-dvipng-color" function (:arguments ("attr")) nil [683620 684006])
            ("org-latex-color" function (:arguments ("attr")) nil [684008 684392])
            ("org-latex-color-format" function (:arguments ("color-name")) nil [684394 684572])
            ("org-normalize-color" function (:arguments ("value")) nil [684574 684709])
            ("org-inline-image-overlays" variable nil nil [684730 684768])
            ("make-variable-buffer-local" code nil nil [684769 684824])
            ("org-toggle-inline-images" function
               (:user-visible-flag t
                :arguments ("include-linked"))
                nil [684826 685329])
            ("org-redisplay-inline-images" function (:user-visible-flag t) nil [685331 685561])
            ("org-display-inline-images" function
               (:user-visible-flag t
                :arguments ("include-linked" "refresh" "beg" "end"))
                nil [685563 687304])
            ("define-obsolete-function-alias" code nil nil [687306 687420])
            ("org-display-inline-remove-overlay" function (:arguments ("ov" "after" "beg" "end" "len")) nil [687422 687706])
            ("org-remove-inline-images" function (:user-visible-flag t) nil [687708 687886])
            ("define-key" code nil nil [687991 688063])
            ("define-key" code nil nil [688064 688128])
            ("define-key" code nil nil [688129 688223])
            ("define-key" code nil nil [688224 688320])
            ("define-key" code nil nil [688321 688402])
            ("define-key" code nil nil [688403 688473])
            ("define-key" code nil nil [688474 688542])
            ("define-key" code nil nil [688543 688615])
            ("org-defkey" code nil nil [690490 690547])
            ("org-defkey" code nil nil [690575 690624])
            ("org-defkey" code nil nil [690625 690674])
            ("org-defkey" code nil nil [690675 690742])
            ("org-defkey" code nil nil [690743 690787])
            ("unless" code nil nil [690844 690930])
            ("org-defkey" code nil nil [690931 690987])
            ("define-key" code nil nil [690988 691037])
            ("org-defkey" code nil nil [691039 691104])
            ("org-defkey" code nil nil [691105 691177])
            ("org-defkey" code nil nil [691178 691242])
            ("org-defkey" code nil nil [691274 691328])
            ("org-defkey" code nil nil [691329 691384])
            ("org-defkey" code nil nil [691385 691437])
            ("org-defkey" code nil nil [691438 691492])
            ("org-defkey" code nil nil [691494 691560])
            ("org-defkey" code nil nil [691561 691628])
            ("org-defkey" code nil nil [691629 691693])
            ("org-defkey" code nil nil [691694 691760])
            ("org-defkey" code nil nil [691762 691822])
            ("org-defkey" code nil nil [691823 691885])
            ("org-defkey" code nil nil [691886 691948])
            ("org-defkey" code nil nil [691949 692012])
            ("org-defkey" code nil nil [692014 692086])
            ("org-defkey" code nil nil [692087 692158])
            ("org-defkey" code nil nil [692159 692225])
            ("org-defkey" code nil nil [692226 692297])
            ("define-key" code nil nil [692313 692373])
            ("mapc" code nil nil [692374 692482])
            ("when" code nil nil [692615 694466])
            ("org-defkey" code nil nil [694491 694537])
            ("org-defkey" code nil nil [694567 694615])
            ("if" code nil nil [694616 694756])
            ("if" code nil nil [694757 694893])
            ("if" code nil nil [694894 695034])
            ("org-defkey" code nil nil [695035 695094])
            ("org-defkey" code nil nil [695095 695152])
            ("org-defkey" code nil nil [695153 695211])
            ("org-defkey" code nil nil [695212 695264])
            ("org-defkey" code nil nil [695265 695319])
            ("org-defkey" code nil nil [695320 695388])
            ("org-defkey" code nil nil [695389 695458])
            ("org-defkey" code nil nil [695459 695516])
            ("org-defkey" code nil nil [695517 695589])
            ("org-defkey" code nil nil [695590 695659])
            ("org-defkey" code nil nil [695660 695716])
            ("org-defkey" code nil nil [695717 695778])
            ("org-defkey" code nil nil [695779 695848])
            ("org-defkey" code nil nil [695849 695915])
            ("org-defkey" code nil nil [695916 695962])
            ("org-defkey" code nil nil [695963 696009])
            ("org-defkey" code nil nil [696010 696068])
            ("org-defkey" code nil nil [696069 696119])
            ("org-defkey" code nil nil [696120 696170])
            ("org-defkey" code nil nil [696171 696227])
            ("org-defkey" code nil nil [696228 696276])
            ("org-defkey" code nil nil [696277 696330])
            ("org-defkey" code nil nil [696355 696414])
            ("org-defkey" code nil nil [696433 696485])
            ("org-defkey" code nil nil [696486 696542])
            ("org-defkey" code nil nil [696543 696615])
            ("org-defkey" code nil nil [696616 696671])
            ("org-defkey" code nil nil [696672 696752])
            ("org-defkey" code nil nil [696753 696844])
            ("org-defkey" code nil nil [696845 696900])
            ("org-defkey" code nil nil [696901 696960])
            ("org-defkey" code nil nil [696961 697014])
            ("org-defkey" code nil nil [697015 697076])
            ("org-defkey" code nil nil [697077 697132])
            ("org-defkey" code nil nil [697133 697189])
            ("org-defkey" code nil nil [697190 697246])
            ("org-defkey" code nil nil [697247 697297])
            ("org-defkey" code nil nil [697321 697373])
            ("org-defkey" code nil nil [697397 697458])
            ("org-defkey" code nil nil [697475 697525])
            ("org-defkey" code nil nil [697551 697612])
            ("org-defkey" code nil nil [697613 697668])
            ("org-defkey" code nil nil [697669 697729])
            ("org-defkey" code nil nil [697730 697798])
            ("org-defkey" code nil nil [697799 697868])
            ("org-defkey" code nil nil [697869 697931])
            ("org-defkey" code nil nil [697932 697985])
            ("org-defkey" code nil nil [697986 698056])
            ("org-defkey" code nil nil [698057 698130])
            ("org-defkey" code nil nil [698131 698185])
            ("org-defkey" code nil nil [698186 698239])
            ("org-defkey" code nil nil [698240 698286])
            ("org-defkey" code nil nil [698287 698342])
            ("org-defkey" code nil nil [698343 698411])
            ("org-defkey" code nil nil [698412 698479])
            ("org-defkey" code nil nil [698480 698528])
            ("org-defkey" code nil nil [698529 698584])
            ("org-defkey" code nil nil [698585 698643])
            ("org-defkey" code nil nil [698644 698703])
            ("org-defkey" code nil nil [698704 698755])
            ("org-defkey" code nil nil [698756 698816])
            ("org-defkey" code nil nil [698817 698871])
            ("org-defkey" code nil nil [698872 698930])
            ("org-defkey" code nil nil [698931 699008])
            ("org-defkey" code nil nil [699009 699080])
            ("org-defkey" code nil nil [699081 699149])
            ("org-defkey" code nil nil [699150 699198])
            ("org-defkey" code nil nil [699199 699273])
            ("org-defkey" code nil nil [699274 699345])
            ("org-defkey" code nil nil [699346 699394])
            ("org-defkey" code nil nil [699395 699463])
            ("org-defkey" code nil nil [699464 699519])
            ("org-defkey" code nil nil [699520 699581])
            ("org-defkey" code nil nil [699582 699643])
            ("org-defkey" code nil nil [699644 699705])
            ("org-defkey" code nil nil [699706 699757])
            ("org-defkey" code nil nil [699758 699808])
            ("org-defkey" code nil nil [699809 699878])
            ("org-defkey" code nil nil [699962 700019])
            ("org-defkey" code nil nil [700020 700078])
            ("org-defkey" code nil nil [700079 700138])
            ("org-defkey" code nil nil [700140 700212])
            ("org-defkey" code nil nil [700213 700267])
            ("org-defkey" code nil nil [700268 700327])
            ("org-defkey" code nil nil [700328 700388])
            ("org-defkey" code nil nil [700389 700444])
            ("org-defkey" code nil nil [700445 700501])
            ("org-defkey" code nil nil [700502 700560])
            ("org-defkey" code nil nil [700561 700620])
            ("org-defkey" code nil nil [700621 700679])
            ("org-defkey" code nil nil [700680 700739])
            ("org-defkey" code nil nil [700740 700808])
            ("org-defkey" code nil nil [700809 700875])
            ("org-defkey" code nil nil [700876 700948])
            ("org-defkey" code nil nil [700949 701017])
            ("org-defkey" code nil nil [701018 701079])
            ("org-defkey" code nil nil [701080 701138])
            ("org-defkey" code nil nil [701139 701195])
            ("org-defkey" code nil nil [701196 701252])
            ("org-defkey" code nil nil [701253 701322])
            ("org-defkey" code nil nil [701323 701390])
            ("org-defkey" code nil nil [701391 701469])
            ("org-defkey" code nil nil [701470 701551])
            ("org-defkey" code nil nil [701553 701604])
            ("org-defkey" code nil nil [701605 701661])
            ("org-defkey" code nil nil [701662 701719])
            ("org-defkey" code nil nil [701720 701776])
            ("org-defkey" code nil nil [701777 701846])
            ("define-key" code nil nil [701848 701901])
            ("define-key" code nil nil [701903 701952])
            ("define-key" code nil nil [701954 702012])
            ("define-key" code nil nil [702013 702071])
            ("define-key" code nil nil [702073 702131])
            ("when" code nil nil [702134 702215])
            ("org-speed-commands-default" variable
               (:constant-flag t
                :default-value (quote (("Outline Navigation") ("n" org-speed-move-safe (quote outline-next-visible-heading)) ("p" org-speed-move-safe (quote outline-previous-visible-heading)) ("f" org-speed-move-safe (quote org-forward-heading-same-level)) ("b" org-speed-move-safe (quote org-backward-heading-same-level)) ("u" org-speed-move-safe (quote outline-up-heading)) ("j" . org-goto) ("g" org-refile t) ("Outline Visibility") ("c" . org-cycle) ("C" . org-shifttab) (" " . org-display-outline-path) ("=" . org-columns) ("Outline Structure Editing") ("U" . org-shiftmetaup) ("D" . org-shiftmetadown) ("r" . org-metaright) ("l" . org-metaleft) ("R" . org-shiftmetaright) ("L" . org-shiftmetaleft) ("i" progn (forward-char 1) (call-interactively (quote org-insert-heading-respect-content))) ("^" . org-sort) ("w" . org-refile) ("a" . org-archive-subtree-default-with-confirmation) ("." . org-mark-subtree) ("#" . org-toggle-comment) ("Clock Commands") ("I" . org-clock-in) ("O" . org-clock-out) ("Meta Data Editing") ("t" . org-todo) ("," org-priority) ("0" org-priority 32) ("1" org-priority 65) ("2" org-priority 66) ("3" org-priority 67) (":" . org-set-tags-command) ("e" . org-set-effort) ("E" . org-inc-effort) ("W" lambda (m) (interactive "sMinutes before warning: ") (org-entry-put (point) "APPT_WARNTIME" m)) ("Agenda Views etc") ("v" . org-agenda) ("/" . org-sparse-tree) ("Misc") ("o" . org-open-at-point) ("?" . org-speed-command-help) ("<" org-agenda-set-restriction-lock (quote subtree)) (">" org-agenda-remove-restriction-lock))))
                nil [702218 704023])
            ("org-print-speed-command" function (:arguments ("e")) nil [704025 704341])
            ("org-speed-command-help" function (:user-visible-flag t) nil [704343 704947])
            ("org-speed-move-safe" function
               (:user-visible-flag t
                :arguments ("cmd"))
                nil [704949 705311])
            ("org-self-insert-command-undo-counter" variable nil nil [705313 705360])
            ("org-table-auto-blank-field" variable nil nil [705362 705397])
            ("org-speed-command" variable nil nil [705424 705454])
            ("define-obsolete-function-alias" code nil nil [705456 705557])
            ("org-speed-command-activate" function (:arguments ("keys")) nil [705559 706005])
            ("define-obsolete-function-alias" code nil nil [706007 706112])
            ("org-babel-speed-command-activate" function (:arguments ("keys")) nil [706114 706328])
            ("org-speed-command-hook" variable (:default-value (quote (org-speed-command-default-hook org-babel-speed-command-hook))) nil [706330 707050])
            ("org-self-insert-command" function
               (:user-visible-flag t
                :arguments ("N"))
                nil [707052 709348])
            ("org-check-before-invisible-edit" function (:arguments ("kind")) nil [709350 711734])
            ("org-fix-tags-on-the-fly" function nil nil [711736 711891])
            ("org-delete-backward-char" function
               (:user-visible-flag t
                :arguments ("N"))
                nil [711893 712993])
            ("org-delete-char" function
               (:user-visible-flag t
                :arguments ("N"))
                nil [712995 714051])
            ("put" code nil nil [714120 714170])
            ("put" code nil nil [714171 714224])
            ("put" code nil nil [714225 714276])
            ("put" code nil nil [714277 714337])
            ("put" code nil nil [714338 714377])
            ("put" code nil nil [714429 714479])
            ("put" code nil nil [714480 714533])
            ("put" code nil nil [714534 714576])
            ("put" code nil nil [714577 714628])
            ("put" code nil nil [714682 714744])
            ("put" code nil nil [714745 714810])
            ("org-remap" function (:arguments ("map" "commands")) nil [714923 715301])
            ("when" code nil nil [715303 715674])
            ("org-ctrl-c-ctrl-c-hook" variable nil nil [715676 716229])
            ("org-ctrl-c-ctrl-c-final-hook" variable nil nil [716231 716785])
            ("org-tab-first-hook" variable nil nil [716787 717256])
            ("org-tab-after-check-for-table-hook" variable nil nil [717258 717672])
            ("org-tab-after-check-for-cycling-hook" variable nil nil [717674 718034])
            ("org-tab-before-tab-emulation-hook" variable nil nil [718036 718308])
            ("org-metaleft-hook" variable nil nil [718310 718448])
            ("org-metaright-hook" variable nil nil [718449 718589])
            ("org-metaup-hook" variable nil nil [718590 718724])
            ("org-metadown-hook" variable nil nil [718725 718863])
            ("org-shiftmetaleft-hook" variable nil nil [718864 719009])
            ("org-shiftmetaright-hook" variable nil nil [719010 719157])
            ("org-shiftmetaup-hook" variable nil nil [719158 719299])
            ("org-shiftmetadown-hook" variable nil nil [719300 719445])
            ("org-metareturn-hook" variable nil nil [719446 719585])
            ("org-shiftup-hook" variable nil nil [719586 719721])
            ("org-shiftup-final-hook" variable nil nil [719722 719941])
            ("org-shiftdown-hook" variable nil nil [719942 720081])
            ("org-shiftdown-final-hook" variable nil nil [720082 720305])
            ("org-shiftleft-hook" variable nil nil [720306 720445])
            ("org-shiftleft-final-hook" variable nil nil [720446 720669])
            ("org-shiftright-hook" variable nil nil [720670 720811])
            ("org-shiftright-final-hook" variable nil nil [720812 721037])
            ("org-modifier-cursor-error" function nil nil [721039 721237])
            ("org-shiftselect-error" function nil nil [721239 721585])
            ("org-call-for-shift-select" function (:arguments ("cmd")) nil [721587 721704])
            ("org-shifttab" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [721706 722313])
            ("org-shiftmetaleft" function (:user-visible-flag t) nil [722315 722982])
            ("org-shiftmetaright" function (:user-visible-flag t) nil [722984 723648])
            ("org-shiftmetaup" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [723650 724320])
            ("org-shiftmetadown" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [724322 725014])
            ("org-hidden-tree-error" function nil nil [725016 725138])
            ("org-metaleft" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [725140 726243])
            ("org-metaright" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [726245 727468])
            ("org-check-for-hidden" function (:arguments ("what")) nil [727470 728417])
            ("org-autoload" code nil nil [728419 728488])
            ("declare-function" code nil nil [728490 728566])
            ("declare-function" code nil nil [728567 728626])
            ("declare-function" code nil nil [728627 728690])
            ("declare-function" code nil nil [728691 728763])
            ("declare-function" code nil nil [728764 728869])
            ("declare-function" code nil nil [728870 728939])
            ("declare-function" code nil nil [728940 729009])
            ("declare-function" code nil nil [729010 729095])
            ("declare-function" code nil nil [729096 729190])
            ("org-metaup" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [729192 730068])
            ("org-metadown" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [730070 730958])
            ("org-shiftup" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [730960 732006])
            ("org-shiftdown" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [732008 733051])
            ("org-shiftright" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [733053 734645])
            ("org-shiftleft" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [734647 736256])
            ("org-shiftcontrolright" function (:user-visible-flag t) nil [736258 736674])
            ("org-shiftcontrolleft" function (:user-visible-flag t) nil [736676 737101])
            ("org-shiftcontrolup" function (:user-visible-flag t) nil [737103 737370])
            ("org-shiftcontroldown" function (:user-visible-flag t) nil [737372 737645])
            ("org-ctrl-c-ret" function (:user-visible-flag t) nil [737647 737891])
            ("org-find-visible" function nil nil [737893 738056])
            ("org-find-invisible" function nil nil [738057 738228])
            ("org-copy-visible" function
               (:user-visible-flag t
                :arguments ("beg" "end"))
                nil [738230 738672])
            ("org-copy-special" function (:user-visible-flag t) nil [738674 738974])
            ("org-cut-special" function (:user-visible-flag t) nil [738976 739270])
            ("org-paste-special" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [739272 739615])
            ("org-in-fixed-width-region-p" function nil nil [739617 739780])
            ("org-edit-special" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [739782 741391])
            ("org-table-coordinate-overlays" variable nil nil [741393 741431])
            ("org-ctrl-c-ctrl-c" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [741458 748556])
            ("org-mode-restart" function (:user-visible-flag t) nil [748558 748748])
            ("org-kill-note-or-show-branches" function (:user-visible-flag t) nil [748750 749056])
            ("org-return" function
               (:user-visible-flag t
                :arguments ("indent"))
                nil [749058 750521])
            ("org-return-indent" function (:user-visible-flag t) nil [750523 750765])
            ("org-ctrl-c-star" function (:user-visible-flag t) nil [750767 751120])
            ("org-ctrl-c-minus" function (:user-visible-flag t) nil [751122 751663])
            ("org-toggle-item" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [751665 756541])
            ("org-toggle-heading" function
               (:user-visible-flag t
                :arguments ("nstars"))
                nil [756543 760687])
            ("org-meta-return" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [760689 761190])
            ("org-in-subtree-not-table-p" function nil nil [761210 761367])
            ("easy-menu-define" code nil nil [761398 764234])
            ("easy-menu-define" code nil nil [764236 772890])
            ("org-info" function
               (:user-visible-flag t
                :arguments ("node"))
                nil [772892 773084])
            ("org-submit-bug-report" function (:user-visible-flag t) nil [773101 775517])
            ("org-install-agenda-files-menu" function nil nil [775520 776180])
            ("org-require-autoloaded-modules" function nil nil [776202 776489])
            ("org-reload" function
               (:user-visible-flag t
                :arguments ("uncompiled"))
                nil [776506 778001])
            ("org-customize" function (:user-visible-flag t) nil [778018 778200])
            ("org-create-customize-menu" function (:user-visible-flag t) nil [778202 778907])
            ("org-get-at-bol" function (:arguments ("property")) nil [778967 779099])
            ("org-find-text-property-in-string" function (:arguments ("prop" "s")) nil [779101 779334])
            ("org-display-warning" function (:arguments ("message")) nil [779336 779830])
            ("org-eval" function (:arguments ("form")) nil [779832 779975])
            ("org-in-clocktable-p" function nil nil [779977 780323])
            ("org-in-commented-line" function nil nil [780325 780440])
            ("org-in-indented-comment-line" function nil nil [780442 780649])
            ("org-in-verbatim-emphasis" function nil nil [780651 780783])
            ("org-goto-marker-or-bmk" function (:arguments ("marker" "bookmark")) nil [780785 781278])
            ("org-quote-csv-field" function (:arguments ("s")) nil [781280 781472])
            ("org-force-self-insert" function
               (:user-visible-flag t
                :arguments ("N"))
                nil [781474 781604])
            ("org-string-width" function (:arguments ("s")) nil [781606 782568])
            ("org-shorten-string" function (:arguments ("s" "maxlength")) nil [782570 783387])
            ("org-get-indentation" function (:arguments ("line")) nil [783389 783763])
            ("org-get-string-indentation" function (:arguments ("s")) nil [783765 784123])
            ("org-remove-tabs" function (:arguments ("s" "width")) nil [784125 784485])
            ("org-fix-indentation" function (:arguments ("line" "ind")) nil [784487 784946])
            ("org-remove-indentation" function (:arguments ("code" "n")) nil [784948 785208])
            ("org-do-remove-indentation" function (:arguments ("n")) nil [785210 785754])
            ("org-fill-template" function (:arguments ("template" "alist")) nil [785756 786200])
            ("org-base-buffer" function (:arguments ("buffer")) nil [786202 786390])
            ("org-trim" function (:arguments ("s")) nil [786392 786618])
            ("org-wrap" function (:arguments ("string" "width" "lines")) nil [786620 787571])
            ("org-do-wrap" function (:arguments ("words" "width")) nil [787573 787929])
            ("org-split-string" function (:arguments ("string" "separators")) nil [787931 788804])
            ("org-quote-vert" function (:arguments ("s")) nil [788806 788946])
            ("org-uuidgen-p" function (:arguments ("s")) nil [788948 789127])
            ("org-in-src-block-p" function (:arguments ("inside")) nil [789129 789616])
            ("org-context" function nil nil [789618 794114])
            ("org-in-regexp" function (:arguments ("re" "nlines" "visually")) nil [794168 794884])
            ("org-at-regexp-p" function (:arguments ("regexp")) nil [794886 795227])
            ("org-between-regexps-p" function (:arguments ("start-re" "end-re" "lim-up" "lim-down")) nil [795229 796464])
            ("org-in-block-p" function (:arguments ("names")) nil [796466 797183])
            ("org-occur-in-agenda-files" function
               (:user-visible-flag t
                :arguments ("regexp" "nlines"))
                nil [797185 797944])
            ("if" code nil nil [797946 798684])
            ("org-occur-link-in-agenda-files" function (:user-visible-flag t) nil [798686 799043])
            ("org-uniquify" function (:arguments ("list")) nil [799045 799193])
            ("org-delete-all" function (:arguments ("elts" "list")) nil [799195 799335])
            ("org-count" function (:arguments ("cl-item" "cl-seq")) nil [799337 799840])
            ("org-remove-if" function (:arguments ("predicate" "seq")) nil [799842 800063])
            ("org-remove-if-not" function (:arguments ("predicate" "seq")) nil [800065 800292])
            ("org-reduce" function (:arguments ("cl-func" "cl-seq" "cl-keys")) nil [800294 800788])
            ("org-back-over-empty-lines" function nil nil [800790 801193])
            ("org-skip-whitespace" function nil nil [801195 801258])
            ("org-point-in-group" function (:arguments ("point" "group" "context")) nil [801260 801714])
            ("org-switch-to-buffer-other-window" function (:arguments ("args")) nil [801716 801974])
            ("org-combine-plists" function (:arguments ("plists")) nil [801976 802461])
            ("org-replace-escapes" function (:arguments ("string" "table")) nil [802463 803753])
            ("org-sublist" function (:arguments ("list" "start" "end")) nil [803755 804030])
            ("org-find-base-buffer-visiting" function (:arguments ("file")) nil [804032 804303])
            ("org-image-file-name-regexp" function (:arguments ("extensions")) nil [804305 804846])
            ("org-file-image-p" function (:arguments ("file" "extensions")) nil [804848 805024])
            ("org-get-cursor-date" function nil nil [805026 805640])
            ("org-mark-subtree" function
               (:user-visible-flag t
                :arguments ("up"))
                nil [805642 806278])
            ("org-indent-line" function (:user-visible-flag t) nil [806297 810609])
            ("org-indent-drawer" function (:user-visible-flag t) nil [810611 811183])
            ("org-indent-block" function (:user-visible-flag t) nil [811185 811795])
            ("org-indent-region" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [811797 812151])
            ("org-setup-filling" function nil nil [812737 813444])
            ("org-element-paragraph-separate" variable nil nil [813446 813485])
            ("org-fill-paragraph-separate-nobreak-p" function nil nil [813503 813675])
            ("org-fill-line-break-nobreak-p" function nil nil [813677 813919])
            ("org-fill-paragraph-with-timestamp-nobreak-p" function nil nil [813921 814115])
            ("declare-function" code nil nil [814117 814166])
            ("org-element--affiliated-re" variable nil nil [814167 814202])
            ("orgtbl-line-start-regexp" variable nil nil [814225 814258])
            ("org-adaptive-fill-function" function nil nil [814279 816437])
            ("declare-function" code nil nil [816439 816488])
            ("message-cite-prefix-regexp" variable nil nil [816489 816524])
            ("org-element-all-objects" variable nil nil [816543 816575])
            ("org-fill-paragraph" function
               (:user-visible-flag t
                :arguments ("justify"))
                nil [816598 821109])
            ("org-auto-fill-function" function nil nil [821111 821537])
            ("org-comment-line-break-function" function (:arguments ("soft")) nil [821539 822000])
            ("org-setup-comments-handling" function nil nil [822761 823181])
            ("org-insert-comment" function nil nil [823183 823435])
            ("comment-empty-lines" variable nil nil [823437 823465])
            ("org-comment-or-uncomment-region" function (:arguments ("beg" "end" "ignore")) nil [823489 825305])
            ("org-toggle-fixed-width-section" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [825326 826950])
            ("org-reftex-citation" function (:user-visible-flag t) nil [826952 827978])
            ("org-beginning-of-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [828028 830514])
            ("org-end-of-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [830516 832099])
            ("define-key" code nil nil [832101 832156])
            ("define-key" code nil nil [832157 832206])
            ("org-backward-sentence" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [832208 832556])
            ("org-forward-sentence" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [832558 832879])
            ("define-key" code nil nil [832881 832936])
            ("define-key" code nil nil [832937 832991])
            ("org-kill-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [832993 833747])
            ("define-key" code nil nil [833749 833796])
            ("org-yank" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [833798 835027])
            ("org-yank-generic" function (:arguments ("command" "arg")) nil [835029 836775])
            ("org-yank-folding-would-swallow-text" function (:arguments ("beg" "end")) nil [836777 837340])
            ("define-key" code nil nil [837371 837413])
            ("org-truely-invisible-p" function nil nil [837415 837735])
            ("org-invisible-p2" function nil nil [837737 837990])
            ("org-back-to-heading" function (:arguments ("invisible-ok")) nil [837992 838285])
            ("org-before-first-heading-p" function nil nil [838287 838448])
            ("org-at-heading-p" function (:arguments ("ignored")) nil [838450 838521])
            ("defalias" code nil nil [838572 838618])
            ("org-at-comment-p" function nil nil [838620 838766])
            ("org-at-drawer-p" function nil nil [838768 838915])
            ("org-at-block-p" function nil nil [838917 839061])
            ("org-point-at-end-of-empty-headline" function nil nil [839063 839480])
            ("org-at-heading-or-item-p" function nil nil [839482 839559])
            ("org-at-target-p" function nil nil [839561 839674])
            ("defalias" code nil nil [839725 839769])
            ("org-up-heading-all" function (:arguments ("arg")) nil [839771 840118])
            ("org-up-heading-safe" function nil nil [840157 840874])
            ("org-first-sibling-p" function (:user-visible-flag t) nil [840876 841249])
            ("org-goto-sibling" function (:arguments ("previous")) nil [841251 841998])
            ("org-show-siblings" function nil nil [842000 842237])
            ("org-goto-first-child" function nil nil [842239 842720])
            ("org-show-hidden-entry" function nil nil [842722 842846])
            ("org-flag-heading" function (:arguments ("flag" "entry")) nil [842848 843352])
            ("org-get-next-sibling" function nil nil [843354 843791])
            ("org-get-last-sibling" function nil nil [843793 844251])
            ("org-end-of-subtree" function (:arguments ("invisible-ok" "to-heading")) nil [844253 845754])
            ("outline-end-of-subtree" function (:arguments ("around" "prefer-org-version" "activate" "compile")) nil [845756 846015])
            ("org-end-of-meta-data-and-drawers" function nil nil [846017 846719])
            ("org-forward-heading-same-level" function
               (:user-visible-flag t
                :arguments ("arg" "invisible-ok"))
                nil [846721 847539])
            ("org-backward-heading-same-level" function
               (:user-visible-flag t
                :arguments ("arg" "invisible-ok"))
                nil [847541 848160])
            ("org-forward-element" function (:user-visible-flag t) nil [848162 848876])
            ("org-backward-element" function (:user-visible-flag t) nil [848878 849829])
            ("org-up-element" function (:user-visible-flag t) nil [849831 850330])
            ("org-element-greater-elements" variable nil nil [850332 850369])
            ("org-down-element" function (:user-visible-flag t) nil [850370 850981])
            ("org-drag-element-backward" function (:user-visible-flag t) nil [850983 851638])
            ("org-drag-element-forward" function (:user-visible-flag t) nil [851640 853021])
            ("org-mark-element" function (:user-visible-flag t) nil [853023 853735])
            ("org-narrow-to-element" function (:user-visible-flag t) nil [853737 854309])
            ("org-transpose-element" function (:user-visible-flag t) nil [854311 854612])
            ("org-unindent-buffer" function (:user-visible-flag t) nil [854614 855486])
            ("org-show-subtree" function (:user-visible-flag t) nil [855488 855680])
            ("org-show-entry" function (:user-visible-flag t) nil [855682 856181])
            ("org-make-options-regexp" function (:arguments ("kwds" "extra")) nil [856183 856410])
            ("org-isearch-end" function nil nil [856457 857175])
            ("org-isearch-post-command" function nil nil [857177 857355])
            ("org-imenu-markers" variable nil nil [857429 857500])
            ("make-variable-buffer-local" code nil nil [857501 857548])
            ("org-imenu-new-marker" function (:arguments ("pos")) nil [857550 857763])
            ("org-imenu-get-tree" function nil nil [857765 858774])
            ("eval-after-load" code nil nil [858776 858942])
            ("org-link-display-format" function (:arguments ("link")) nil [858944 859317])
            ("org-toggle-link-display" function (:user-visible-flag t) nil [859319 859699])
            ("org-speedbar-restriction-lock-overlay" variable (:default-value (make-overlay 1 1)) nil [859722 859848])
            ("overlay-put" code nil nil [859849 859941])
            ("overlay-put" code nil nil [859942 860056])
            ("org-detach-overlay" code nil nil [860057 860115])
            ("org-speedbar-set-agenda-restriction" function (:user-visible-flag t) nil [860117 861473])
            ("eval-after-load" code nil nil [861475 862025])
            ("org-mode-flyspell-verify" function nil nil [862150 862729])
            ("org-remove-flyspell-overlays-in" function (:arguments ("beg" "end")) nil [862731 863017])
            ("eval-after-load" code nil nil [863085 863430])
            ("eval-after-load" code nil nil [863491 863661])
            ("eval-after-load" code nil nil [863716 863948])
            ("org-bookmark-jump-unhide" function nil nil [863950 864251])
            ("eval-after-load" code nil nil [864301 864385])
            ("org-closed-in-range" function (:user-visible-flag t) nil [864411 865334])
            ("org" package nil nil [865352 865366])
            ("run-hooks" code nil nil [865368 865394]))          
    :file "org.el.gz"
    :pointmax 865417
    :fsize 230952
    :lastmodtime '(21546 36354 0 0)
    :unmatched-syntax '((close-paren 309810 . 309811) (symbol 309759 . 309776) (open-paren 309758 . 309759) (close-paren 168713 . 168714) (symbol 168639 . 168655) (open-paren 168638 . 168639) (close-paren 161004 . 161005) (symbol 160863 . 160879) (open-paren 160862 . 160863) (close-paren 160154 . 160155) (symbol 160042 . 160058) (open-paren 160041 . 160042) (close-paren 157236 . 157237) (symbol 157134 . 157150) (open-paren 157133 . 157134) (close-paren 3188 . 3189) (symbol 3133 . 3150) (open-paren 3132 . 3133))
    )
   )
  :file "!usr!share!emacs!24.3!lisp!org!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
