;; Object Cello/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Cello/"
  :tables (list 
   (semanticdb-table "Prelude.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloPrelude_h" variable (:constant-flag t) nil [32 46])
            ("stdio.h" include (:system-flag t) nil [48 66])
            ("stdlib.h" include (:system-flag t) nil [67 86])
            ("stdarg.h" include (:system-flag t) nil [87 106])
            ("stdbool.h" include (:system-flag t) nil [107 127])
            ("stdint.h" include (:system-flag t) nil [128 147])
            ("stddef.h" include (:system-flag t) nil [148 167])
            ("setjmp.h" include (:system-flag t) nil [168 187])
            ("var" type
               (:typedef ("void")
                :pointer 1
                :superclasses "void"
                :type "typedef")
                nil [360 378])
            ("is" variable (:constant-flag t) nil [387 389])
            ("isnt" variable (:constant-flag t) nil [401 405])
            ("not" variable (:constant-flag t) nil [417 420])
            ("and" variable (:constant-flag t) nil [431 434])
            ("or" variable (:constant-flag t) nil [446 448])
            ("elif" variable (:constant-flag t) nil [460 464])
            ("in" variable (:constant-flag t) nil [481 483])
            ("local" variable (:constant-flag t) nil [495 500])
            ("global" variable (:constant-flag t) nil [516 522])
            ("class" variable (:constant-flag t) nil [538 543])
            ("data" variable (:constant-flag t) nil [568 572])
            ("instance" variable (:constant-flag t) nil [597 605])
            ("type_data" variable (:constant-flag t) nil [735 744])
            ("type_begin" variable (:constant-flag t) nil [777 787])
            ("type_entry" variable (:constant-flag t) nil [852 862])
            ("type_end" variable (:constant-flag t) nil [888 896])
            ("Singleton" variable (:constant-flag t) nil [983 992])
            ("ObjectData" type
               (:typedef ("" type
                     (:members 
                        ( ("type" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1199 1208]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [1190 1222])
            ("type_of" function
               (:prototype-flag t
                :arguments 
                  ( ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1236 1244]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1224 1245])
            ("Undefined" variable
               (:typemodifiers ("extern")
                :type ("var" type (:type "class") nil nil))
                nil [1314 1335])
            ("$" variable (:constant-flag t) nil [1739 1740])
            ("lit" variable (:constant-flag t) nil [1753 1756])
            ("var_list" type
               (:typedef ("var" type (:type "class") nil nil)
                :pointer 1
                :superclasses "var"
                :type "typedef")
                nil [2293 2315])
            ("var_list_parse" variable (:constant-flag t) nil [2325 2339])
            ("var_list_new" variable (:constant-flag t) nil [2380 2392])
            ("var_list_end" variable (:constant-flag t) nil [2450 2462])
            ("var_list_get" variable (:constant-flag t) nil [2494 2506])
            ("New" type
               (:typedef ("" type
                     (:members 
                        ( ("construct_vl" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [2705 2740])
                          ("destruct" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [2743 2764])
                          ("size" variable
                             (:functionpointer-flag t
                              :type ("size_t" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [2767 2788]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [2695 2795])
            ("new" variable (:constant-flag t) nil [2805 2808])
            ("new_vl" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2871 2880])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2881 2893]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2860 2894])
            ("allocate" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2932 2941]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2919 2942])
            ("deallocate" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2959 2968]))                  
                :type "void")
                nil [2943 2969])
            ("size" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2982 2991]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [2970 2992])
            ("construct" variable (:constant-flag t) nil [3002 3011])
            ("construct_vl" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3086 3095])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3096 3108]))                  
                :type ("var" type (:type "class") nil nil))
                nil [3069 3109])
            ("destruct" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3123 3132]))                  
                :type ("var" type (:type "class") nil nil))
                nil [3110 3133])
            ("Assign" type
               (:typedef ("" type
                     (:members 
                        ( ("assign" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [3192 3217]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [3182 3227])
            ("assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3241 3250])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3251 3259]))                  
                :type "void")
                nil [3229 3260])
            ("Copy" type
               (:typedef ("" type
                     (:members 
                        ( ("copy" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [3296 3313]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [3286 3321])
            ("copy" function
               (:prototype-flag t
                :arguments 
                  ( ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3332 3340]))                  
                :type ("var" type (:type "class") nil nil))
                nil [3323 3341])
            ("Eq" type
               (:typedef ("" type
                     (:members 
                        ( ("eq" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [3375 3394]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [3365 3400])
            ("eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3409 3418])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3419 3427]))                  
                :type ("var" type (:type "class") nil nil))
                nil [3402 3428])
            ("neq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3437 3446])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3447 3455]))                  
                :type ("var" type (:type "class") nil nil))
                nil [3429 3456])
            ("if_eq" variable (:constant-flag t) nil [3466 3471])
            ("if_neq" variable (:constant-flag t) nil [3497 3503])
            ("Ord" type
               (:typedef ("" type
                     (:members 
                        ( ("gt" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [3556 3575])
                          ("lt" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [3578 3597]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [3546 3604])
            ("gt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3613 3622])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3623 3631]))                  
                :type ("var" type (:type "class") nil nil))
                nil [3606 3632])
            ("lt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3640 3649])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3650 3658]))                  
                :type ("var" type (:type "class") nil nil))
                nil [3633 3659])
            ("ge" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3667 3676])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3677 3685]))                  
                :type ("var" type (:type "class") nil nil))
                nil [3660 3686])
            ("le" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3694 3703])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3704 3712]))                  
                :type ("var" type (:type "class") nil nil))
                nil [3687 3713])
            ("if_lt" variable (:constant-flag t) nil [3723 3728])
            ("if_gt" variable (:constant-flag t) nil [3754 3759])
            ("if_le" variable (:constant-flag t) nil [3785 3790])
            ("if_ge" variable (:constant-flag t) nil [3816 3821])
            ("Hash" type
               (:typedef ("" type
                     (:members 
                        ( ("hash" variable
                             (:functionpointer-flag t
                              :type "long")
                              (reparse-symbol classsubparts) [3874 3892]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [3864 3900])
            ("hash" function
               (:prototype-flag t
                :arguments 
                  ( ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3912 3920]))                  
                :type "long")
                nil [3902 3921])
            ("Hash_Table_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("size" variable (:type "long") (reparse-symbol arg-sub-list) [3944 3954]))                  
                :type "long")
                nil [3923 3955])
            ("Collection" type
               (:typedef ("" type
                     (:members 
                        ( ("len" variable
                             (:functionpointer-flag t
                              :type "int")
                              (reparse-symbol classsubparts) [4005 4021])
                          ("clear" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [4024 4043])
                          ("contains" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [4046 4072])
                          ("discard" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [4075 4101]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [3995 4115])
            ("len" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4125 4134]))                  
                :type "int")
                nil [4117 4135])
            ("clear" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4147 4156]))                  
                :type "void")
                nil [4136 4157])
            ("contains" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4171 4180])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4181 4189]))                  
                :type ("var" type (:type "class") nil nil))
                nil [4158 4190])
            ("discard" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4204 4213])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4214 4222]))                  
                :type "void")
                nil [4191 4223])
            ("is_empty" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4238 4247]))                  
                :type ("var" type (:type "class") nil nil))
                nil [4225 4248])
            ("maximum" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4262 4271]))                  
                :type ("var" type (:type "class") nil nil))
                nil [4250 4272])
            ("minimum" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4285 4294]))                  
                :type ("var" type (:type "class") nil nil))
                nil [4273 4295])
            ("Sort" type
               (:typedef ("" type
                     (:members 
                        ( ("sort" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [4336 4354]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [4326 4362])
            ("sort" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4374 4383]))                  
                :type "void")
                nil [4364 4384])
            ("Reverse" type
               (:typedef ("" type
                     (:members 
                        ( ("reverse" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [4429 4450]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [4419 4461])
            ("reverse" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4476 4485]))                  
                :type "void")
                nil [4463 4486])
            ("Append" type
               (:typedef ("" type
                     (:members 
                        ( ("append" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [4534 4559]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [4524 4569])
            ("append" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4583 4592])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4593 4601]))                  
                :type "void")
                nil [4571 4602])
            ("Iter" type
               (:typedef ("" type
                     (:members 
                        ( ("iter_start" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [4638 4661])
                          ("iter_end" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [4664 4685])
                          ("iter_next" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [4688 4715]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [4628 4723])
            ("iter_start" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4740 4749]))                  
                :type ("var" type (:type "class") nil nil))
                nil [4725 4750])
            ("iter_end" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4764 4773]))                  
                :type ("var" type (:type "class") nil nil))
                nil [4751 4774])
            ("iter_next" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4789 4798])
                    ("curr" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4799 4808]))                  
                :type ("var" type (:type "class") nil nil))
                nil [4775 4809])
            ("foreach" variable (:constant-flag t) nil [4819 4826])
            ("foreach_scanned" variable (:constant-flag t) nil [4857 4872])
            ("Iter_End" variable
               (:typemodifiers ("extern")
                :type ("var" type (:type "class") nil nil))
                nil [4950 4970])
            ("Push" type
               (:typedef ("" type
                     (:members 
                        ( ("push" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [5029 5052])
                          ("push_at" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [5055 5086])
                          ("push_back" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [5089 5117])
                          ("push_front" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [5120 5149])
                          ("pop" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [5152 5168])
                          ("pop_at" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [5171 5195])
                          ("pop_back" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [5198 5219])
                          ("pop_front" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [5222 5244]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5019 5252])
            ("push" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5264 5273])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5274 5282]))                  
                :type "void")
                nil [5254 5283])
            ("push_at" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5297 5306])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5307 5315])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [5316 5322]))                  
                :type "void")
                nil [5284 5323])
            ("push_back" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5339 5348])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5349 5357]))                  
                :type "void")
                nil [5324 5358])
            ("push_front" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5375 5384])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5385 5393]))                  
                :type "void")
                nil [5359 5394])
            ("pop" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5404 5413]))                  
                :type ("var" type (:type "class") nil nil))
                nil [5396 5414])
            ("pop_at" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5426 5435])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [5436 5442]))                  
                :type ("var" type (:type "class") nil nil))
                nil [5415 5443])
            ("pop_back" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5457 5466]))                  
                :type ("var" type (:type "class") nil nil))
                nil [5444 5467])
            ("pop_front" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5482 5491]))                  
                :type ("var" type (:type "class") nil nil))
                nil [5468 5492])
            ("At" type
               (:typedef ("" type
                     (:members 
                        ( ("at" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [5535 5555])
                          ("set" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [5558 5585]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5525 5591])
            ("at" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5600 5609])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [5610 5616]))                  
                :type ("var" type (:type "class") nil nil))
                nil [5593 5617])
            ("set" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5627 5636])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [5637 5643])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5644 5652]))                  
                :type "void")
                nil [5618 5653])
            ("Dict" type
               (:typedef ("" type
                     (:members 
                        ( ("get" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [5698 5719])
                          ("put" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [5722 5749]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5688 5757])
            ("get" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5767 5776])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5777 5785]))                  
                :type ("var" type (:type "class") nil nil))
                nil [5759 5786])
            ("put" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5796 5805])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5806 5814])
                    ("val" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5815 5823]))                  
                :type "void")
                nil [5787 5824])
            ("AsChar" type
               (:typedef ("" type
                     (:members 
                        ( ("as_char" variable
                             (:functionpointer-flag t
                              :type "char")
                              (reparse-symbol classsubparts) [5863 5884]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5853 5894])
            ("as_char" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5909 5918]))                  
                :type "char")
                nil [5896 5919])
            ("AsStr" type
               (:typedef ("" type
                     (:members 
                        ( ("as_str" variable
                             (:functionpointer-flag t
                              :type "char")
                              (reparse-symbol classsubparts) [5959 5986]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5949 5995])
            ("as_str" function
               (:prototype-flag t
                :pointer 1
                :constant-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6016 6025]))                  
                :type "char")
                nil [5997 6026])
            ("AsLong" type
               (:typedef ("" type
                     (:members 
                        ( ("as_long" variable
                             (:functionpointer-flag t
                              :type "long")
                              (reparse-symbol classsubparts) [6065 6086]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [6055 6096])
            ("as_long" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6111 6120]))                  
                :type "long")
                nil [6098 6121])
            ("AsDouble" type
               (:typedef ("" type
                     (:members 
                        ( ("as_double" variable
                             (:functionpointer-flag t
                              :type "double")
                              (reparse-symbol classsubparts) [6164 6189]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [6154 6201])
            ("as_double" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6220 6229]))                  
                :type "double")
                nil [6203 6230])
            ("With" type
               (:typedef ("" type
                     (:members 
                        ( ("enter" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [6297 6316])
                          ("exit" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [6319 6337]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [6287 6345])
            ("enter_with" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6363 6372]))                  
                :type "void")
                nil [6347 6373])
            ("exit_with" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6389 6398]))                  
                :type "void")
                nil [6374 6399])
            ("enter_for" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6415 6424]))                  
                :type ("var" type (:type "class") nil nil))
                nil [6401 6425])
            ("exit_for" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6439 6448]))                  
                :type ("var" type (:type "class") nil nil))
                nil [6426 6449])
            ("with" variable (:constant-flag t) nil [6459 6463])
            ("with_scanned" variable (:constant-flag t) nil [6491 6503])
            ("Stream" type
               (:typedef ("" type
                     (:members 
                        ( ("stream_open" variable
                             (:functionpointer-flag t
                              :type ("var" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [6632 6680])
                          ("stream_close" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [6683 6709])
                          ("stream_seek" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [6712 6745])
                          ("stream_tell" variable
                             (:functionpointer-flag t
                              :type "int")
                              (reparse-symbol classsubparts) [6748 6772])
                          ("stream_flush" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [6775 6801])
                          ("stream_eof" variable
                             (:functionpointer-flag t
                              :type "bool")
                              (reparse-symbol classsubparts) [6804 6828])
                          ("stream_read" variable
                             (:functionpointer-flag t
                              :type "int")
                              (reparse-symbol classsubparts) [6831 6865])
                          ("stream_write" variable
                             (:functionpointer-flag t
                              :type "int")
                              (reparse-symbol classsubparts) [6868 6903]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [6622 6913])
            ("stream_open" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6931 6940])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [6941 6958])
                    ("access" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [6959 6978]))                  
                :type ("var" type (:type "class") nil nil))
                nil [6915 6979])
            ("stream_close" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6998 7007]))                  
                :type "void")
                nil [6980 7008])
            ("stream_seek" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7026 7035])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [7036 7044])
                    ("origin" variable (:type "int") (reparse-symbol arg-sub-list) [7045 7056]))                  
                :type "void")
                nil [7009 7057])
            ("stream_tell" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7074 7083]))                  
                :type "int")
                nil [7058 7084])
            ("stream_flush" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7103 7112]))                  
                :type "void")
                nil [7085 7113])
            ("stream_eof" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7130 7139]))                  
                :type "bool")
                nil [7114 7140])
            ("stream_read" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7157 7166])
                    ("output" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [7167 7180])
                    ("size" variable (:type "int") (reparse-symbol arg-sub-list) [7181 7190]))                  
                :type "int")
                nil [7141 7191])
            ("stream_write" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7209 7218])
                    ("input" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [7219 7231])
                    ("size" variable (:type "int") (reparse-symbol arg-sub-list) [7232 7241]))                  
                :type "int")
                nil [7192 7242])
            ("Serialize" type
               (:typedef ("" type
                     (:members 
                        ( ("serial_read" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [7297 7326])
                          ("serial_write" variable
                             (:functionpointer-flag t
                              :type "void")
                              (reparse-symbol classsubparts) [7329 7359]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [7287 7372])
            ("serial_read" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7391 7400])
                    ("input" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7401 7411]))                  
                :type "void")
                nil [7374 7412])
            ("serial_write" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7431 7440])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7441 7452]))                  
                :type "void")
                nil [7413 7453]))          
    :file "Prelude.h"
    :pointmax 7463
    :fsize 7462
    :lastmodtime '(21376 45128 659965 786000)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("isnt" . ((punctuation "!" 406 . 407) (punctuation "=" 407 . 408)))
          ("instance" (spp-arg-list ("T" "C") 605 . 610) . 
              ((symbol "local" 611 . 616) (symbol "C" 617 . 618) (spp-symbol-merge ((symbol "T" 619 . 620) (symbol "C" 622 . 623)) 619 . 623)))
          ("is" . ((punctuation "=" 390 . 391) (punctuation "=" 391 . 392)))
          ("data" . ((TYPEDEF "typedef" 573 . 580) (STRUCT "struct" 581 . 587)))
          ("var_list_parse" (spp-arg-list ("_" "...") 2339 . 2347) . ((semantic-list "(var[])" 2348 . 2355) (semantic-list "{ __VA_ARGS__ }" 2355 . 2370)))
          ("Singleton" (spp-arg-list ("T") 992 . 995) . ((symbol "type_data" 996 . 1005) (semantic-list "{ type_begin(T), type_end(T) }" 1006 . 1036)))
          ("and" . ((punctuation "&" 435 . 436) (punctuation "&" 436 . 437)))
          ("var_list_end" (spp-arg-list ("vl") 2462 . 2466) . ((semantic-list "(*vl is Undefined)" 2467 . 2485)))
          ("with_scanned" (spp-arg-list ("x" "...") 6503 . 6511) . ((FOR "for" 6512 . 6515) (semantic-list "(var x = enter_for(__VA_ARGS__); not (x is Undefined); x = exit_for(x))" 6515 . 6586)))
          ("global" . ((EXTERN "extern" 523 . 529)))
          ("construct" (spp-arg-list ("self" "...") 3011 . 3022) . ((symbol "construct_vl" 3023 . 3035) (semantic-list "(self, var_list_new(__VA_ARGS__))" 3035 . 3068)))
          ("or" . ((punctuation "|" 449 . 450) (punctuation "|" 450 . 451)))
          ("if_ge" (spp-arg-list ("X" "Y") 3821 . 3826) . ((IF "if" 3827 . 3829) (semantic-list "(ge(X,Y))" 3829 . 3838)))
          ("foreach_scanned" (spp-arg-list ("x" "xs") 4872 . 4879) . ((FOR "for" 4880 . 4883) (semantic-list "(var x = iter_start(xs); x != iter_end(xs); x = iter_next(xs, x))" 4883 . 4948)))
          ("type_data" . ((semantic-list "(TypeData*)" 745 . 756) (semantic-list "(TypeData[])" 756 . 768)))
          ("type_begin" (spp-arg-list ("T") 787 . 790) . 
              ((semantic-list "{NULL, \"__Type\"}" 791 . 807) (punctuation "," 807 . 808) (semantic-list "{#T, \"__Name\"}" 809 . 823) (punctuation "," 823 . 824) (semantic-list "{NULL, \"__Parent\"}" 825 . 843)))
          ("if_gt" (spp-arg-list ("X" "Y") 3759 . 3764) . ((IF "if" 3765 . 3767) (semantic-list "(gt(X,Y))" 3767 . 3776)))
          ("if_le" (spp-arg-list ("X" "Y") 3790 . 3795) . ((IF "if" 3796 . 3798) (semantic-list "(le(X,Y))" 3798 . 3807)))
          ("CelloPrelude_h")
          ("elif" . ((ELSE "else" 465 . 469) (IF "if" 470 . 472)))
          ("new" (spp-arg-list ("type" "...") 2808 . 2819) . ((symbol "new_vl" 2820 . 2826) (semantic-list "(type, var_list_new(__VA_ARGS__))" 2826 . 2859)))
          ("with" (spp-arg-list ("x") 6463 . 6466) . ((symbol "with_scanned" 6467 . 6479) (semantic-list "(x)" 6479 . 6482)))
          ("not" . ((punctuation "!" 421 . 422)))
          ("in" . ((punctuation "," 484 . 485)))
          ("local" . ((STATIC "static" 501 . 507)))
          ("class" . ((TYPEDEF "typedef" 544 . 551) (STRUCT "struct" 552 . 558)))
          ("if_neq" (spp-arg-list ("X" "Y") 3503 . 3508) . ((IF "if" 3509 . 3511) (semantic-list "(neq(X,Y))" 3511 . 3521)))
          ("if_lt" (spp-arg-list ("X" "Y") 3728 . 3733) . ((IF "if" 3734 . 3736) (semantic-list "(lt(X,Y))" 3736 . 3745)))
          ("$" . ((symbol "lit" 1741 . 1744)))
          ("var_list_get" (spp-arg-list ("vl") 2506 . 2510) . ((semantic-list "(*vl++)" 2511 . 2518)))
          ("foreach" (spp-arg-list ("x") 4826 . 4829) . ((symbol "foreach_scanned" 4830 . 4845) (semantic-list "(x)" 4845 . 4848)))
          ("type_entry" (spp-arg-list ("T" "C") 862 . 867) . ((semantic-list "{&T##C, #C}" 868 . 879)))
          ("var_list_new" (spp-arg-list ("...") 2392 . 2397) . ((symbol "var_list_parse" 2398 . 2412) (semantic-list "(_, ##__VA_ARGS__, Undefined)" 2412 . 2441)))
          ("if_eq" (spp-arg-list ("X" "Y") 3471 . 3476) . ((IF "if" 3477 . 3479) (semantic-list "(eq(X,Y))" 3479 . 3488)))
          ("type_end" (spp-arg-list ("T") 896 . 899) . ((semantic-list "{NULL, NULL}" 900 . 912)))
          ("lit" (spp-arg-list ("T" "...") 1756 . 1764) . ((semantic-list "(T##Data[])" 1765 . 1776) (semantic-list "{{T, __VA_ARGS__}}" 1776 . 1794)))
          )

    )
   (semanticdb-table "Thread.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloThread_h" variable (:constant-flag t) nil [57 70])
            ("pthread.h" include (:system-flag t) nil [116 138])
            ("Prelude.h" include nil nil [314 334])
            ("Function.h" include nil nil [335 356])
            ("Process" variable (:type ("" type
                 (:members 
                    ( ("current" variable
                         (:functionpointer-flag t
                          :type ("var" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [388 410])
                      ("join" variable
                         (:functionpointer-flag t
                          :type "void")
                          (reparse-symbol classsubparts) [413 431])
                      ("terminate" variable
                         (:functionpointer-flag t
                          :type "void")
                          (reparse-symbol classsubparts) [434 457]))                    
                  :type "class")
                  nil nil)) nil [378 468])
            ("current" function
               (:prototype-flag t
                :arguments 
                  ( ("type" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [483 492]))                  
                :type ("var" type (:type "class") nil nil))
                nil [470 493])
            ("join" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [504 513]))                  
                :type "void")
                nil [494 514])
            ("terminate" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [530 539]))                  
                :type "void")
                nil [515 540])
            ("Thread" variable (:type ("var" type (:type "class") nil nil)) nil [568 579])
            ("" type
               (:members 
                  ( ("EXC_MAX_DEPTH" variable
                       (:constant-flag t
                        :default-value (606 610)
                        :type "int")
                        (reparse-symbol enumsubparts) [590 610]))                  
                :type "enum")
                nil [581 614])
            ("ThreadData" variable (:type "int") nil [1121 1132])
            ("Thread_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1149 1158])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1159 1171]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1134 1172])
            ("Thread_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1191 1200]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1173 1201])
            ("Thread_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1221 1226]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [1202 1227])
            ("Thread_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1247 1256])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1257 1265]))                  
                :type "void")
                nil [1228 1266])
            ("Thread_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1283 1292]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1267 1293])
            ("Thread_Eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1309 1318])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1319 1327]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1295 1328])
            ("Thread_Gt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1343 1352])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1353 1361]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1329 1362])
            ("Thread_Lt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1377 1386])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1387 1395]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1363 1396])
            ("Thread_AsLong" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1417 1426]))                  
                :type "long")
                nil [1398 1427])
            ("Thread_Hash" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1445 1454]))                  
                :type "long")
                nil [1428 1455])
            ("Thread_Call" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1473 1482])
                    ("args" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1483 1492]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1457 1493])
            ("Thread_Current" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1515 1520]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1495 1521])
            ("Thread_Join" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1539 1548]))                  
                :type "void")
                nil [1522 1549])
            ("Thread_Terminate" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1572 1581]))                  
                :type "void")
                nil [1550 1582])
            ("Lock" variable (:type ("" type
                 (:members 
                    ( ("lock" variable
                         (:functionpointer-flag t
                          :type "void")
                          (reparse-symbol classsubparts) [1930 1948])
                      ("unlock" variable
                         (:functionpointer-flag t
                          :type "void")
                          (reparse-symbol classsubparts) [1951 1971])
                      ("lock_try" variable
                         (:functionpointer-flag t
                          :type ("var" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [1974 1996]))                    
                  :type "class")
                  nil nil)) nil [1920 2004])
            ("lock" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2016 2025]))                  
                :type "void")
                nil [2006 2026])
            ("unlock" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2039 2048]))                  
                :type "void")
                nil [2027 2049])
            ("lock_try" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2063 2072]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2050 2073])
            ("Mutex" variable (:type ("var" type (:type "class") nil nil)) nil [2100 2110])
            ("Mutex_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2126 2135])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2136 2148]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2112 2149])
            ("Mutex_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2167 2176]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2150 2177])
            ("Mutex_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2196 2201]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [2178 2202])
            ("Mutex_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2221 2230])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2231 2239]))                  
                :type "void")
                nil [2203 2240])
            ("Mutex_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2256 2265]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2241 2266])
            ("Mutex_Lock" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2284 2293]))                  
                :type "void")
                nil [2268 2294])
            ("Mutex_Lock_Try" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2314 2323]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2295 2324])
            ("Mutex_Unlock" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2343 2352]))                  
                :type "void")
                nil [2325 2353]))          
    :file "Thread.h"
    :pointmax 2635
    :fsize 2634
    :lastmodtime '(21376 45128 660965 755000)
    :unmatched-syntax '((punctuation 2625 . 2626) (semantic-list 2597 . 2625) (punctuation 2595 . 2596) (semantic-list 2581 . 2594) (symbol 2573 . 2581) (punctuation 2571 . 2572) (semantic-list 2527 . 2571) (punctuation 2525 . 2526) (semantic-list 2511 . 2524) (symbol 2503 . 2511) (punctuation 2501 . 2502) (semantic-list 2487 . 2501) (punctuation 2485 . 2486) (semantic-list 2471 . 2484) (symbol 2463 . 2471) (punctuation 2461 . 2462) (semantic-list 2445 . 2461) (punctuation 2443 . 2444) (semantic-list 2427 . 2442) (symbol 2419 . 2427) (punctuation 2417 . 2418) (semantic-list 2378 . 2417) (punctuation 2376 . 2377) (semantic-list 2363 . 2375) (symbol 2355 . 2363) (symbol 2093 . 2099) (punctuation 1905 . 1906) (semantic-list 1888 . 1905) (punctuation 1886 . 1887) (semantic-list 1869 . 1885) (symbol 1861 . 1869) (punctuation 1859 . 1860) (semantic-list 1810 . 1859) (punctuation 1808 . 1809) (semantic-list 1790 . 1807) (symbol 1782 . 1790) (punctuation 1780 . 1781) (semantic-list 1765 . 1780) (punctuation 1763 . 1764) (semantic-list 1748 . 1762) (symbol 1740 . 1748) (punctuation 1738 . 1739) (semantic-list 1723 . 1738) (punctuation 1721 . 1722) (semantic-list 1706 . 1720) (symbol 1698 . 1706) (punctuation 1696 . 1697) (semantic-list 1679 . 1696) (punctuation 1677 . 1678) (semantic-list 1660 . 1676) (symbol 1652 . 1660) (punctuation 1650 . 1651) (semantic-list 1608 . 1650) (punctuation 1606 . 1607) (semantic-list 1592 . 1605) (symbol 1584 . 1592) (semantic-list 621 . 1120) (symbol 616 . 620) (symbol 561 . 567) (string 270 . 305) (symbol 264 . 269) (punctuation 263 . 264))
    :lexical-table 
        '(("CelloThread_h")
          )

    )
   (semanticdb-table "Function.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloFunction_h" variable (:constant-flag t) nil [33 48])
            ("Prelude.h" include nil nil [50 70])
            ("Type.h" include nil nil [71 88])
            ("Call" variable (:type ("" type
                 (:members 
                    ( ("call_with" variable
                         (:functionpointer-flag t
                          :type ("var" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [145 171]))                    
                  :type "class")
                  nil nil)) nil [135 179])
            ("call" variable (:constant-flag t) nil [189 193])
            ("call_vl" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [252 261])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [262 274]))                  
                :type ("var" type (:type "class") nil nil))
                nil [240 275])
            ("call_with" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [290 299])
                    ("args" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [300 309]))                  
                :type ("var" type (:type "class") nil nil))
                nil [276 310])
            ("Function" variable (:type ("var" type (:type "class") nil nil)) nil [720 733])
            ("FunctionData" variable (:type "int") nil [991 1004])
            ("lambda" variable (:constant-flag t) nil [1016 1022])
            ("Function_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1198 1207])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1208 1220]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1181 1221])
            ("Function_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1242 1251]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1222 1252])
            ("Function_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1274 1279]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [1253 1280])
            ("Function_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1300 1309]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1282 1310])
            ("Function_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1332 1341])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1342 1350]))                  
                :type "void")
                nil [1311 1351])
            ("Function_Call" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1371 1380])
                    ("args" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1381 1390]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1353 1391]))          
    :file "Function.h"
    :pointmax 1619
    :fsize 1618
    :lastmodtime '(21376 45128 658965 816000)
    :unmatched-syntax '((punctuation 1609 . 1610) (semantic-list 1592 . 1609) (punctuation 1590 . 1591) (semantic-list 1573 . 1589) (symbol 1565 . 1573) (punctuation 1563 . 1564) (semantic-list 1544 . 1563) (punctuation 1542 . 1543) (semantic-list 1523 . 1541) (symbol 1515 . 1523) (punctuation 1513 . 1514) (semantic-list 1496 . 1513) (punctuation 1494 . 1495) (semantic-list 1477 . 1493) (symbol 1469 . 1477) (punctuation 1467 . 1468) (semantic-list 1419 . 1467) (punctuation 1417 . 1418) (semantic-list 1401 . 1416) (symbol 1393 . 1401) (semantic-list 949 . 990) (symbol 944 . 948) (symbol 713 . 719))
    :lexical-table 
        '(("call" (spp-arg-list ("x" "...") 193 . 201) . ((symbol "call_vl" 202 . 209) (semantic-list "(x, var_list_new(__VA_ARGS__))" 209 . 239)))
          ("CelloFunction_h")
          ("lambda" (spp-arg-list ("name" "args") 1022 . 1034) . 
              ((symbol "auto" 1041 . 1045) (symbol "var" 1046 . 1049) (spp-symbol-merge ((symbol "__LambdaCello_" 1050 . 1064) (symbol "name" 1066 . 1070)) 1050 . 1070) (semantic-list "(var)" 1070 . 1075) (punctuation ";" 1075 . 1076) (symbol "var" 1083 . 1086) (symbol "name" 1087 . 1091) (punctuation "=" 1092 . 1093) (symbol "$" 1094 . 1095) (semantic-list "(Function, __LambdaCello_##name)" 1095 . 1127) (punctuation ";" 1127 . 1128) (symbol "var" 1135 . 1138) (spp-symbol-merge ((symbol "__LambdaCello_" 1139 . 1153) (symbol "name" 1155 . 1159)) 1139 . 1159) (semantic-list "(var args)" 1159 . 1169)))
          )

    )
   (semanticdb-table "Type.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloType_h" variable (:constant-flag t) nil [306 317])
            ("Prelude.h" include nil nil [319 339])
            ("Format.h" include nil nil [340 359])
            ("Type" variable (:type ("var" type (:type "class") nil nil)) nil [368 377])
            ("TypeData" variable (:type "int") nil [436 445])
            ("Type_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [460 469])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [470 482]))                  
                :type ("var" type (:type "class") nil nil))
                nil [447 483])
            ("Type_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [500 509]))                  
                :type ("var" type (:type "class") nil nil))
                nil [484 510])
            ("Type_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [528 533]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [511 534])
            ("cast" variable (:constant-flag t) nil [544 548])
            ("type_implements" variable (:constant-flag t) nil [610 625])
            ("type_implements_method" variable (:constant-flag t) nil [693 715])
            ("type_class" variable (:constant-flag t) nil [810 820])
            ("type_class_method" variable (:constant-flag t) nil [883 900])
            ("Type_Cast" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1027 1036])
                    ("type" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1037 1046])
                    ("func" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1047 1064])
                    ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1065 1082])
                    ("line" variable (:type "int") (reparse-symbol arg-sub-list) [1083 1092]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1013 1093])
            ("Type_Implements" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1115 1124])
                    ("class_name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1125 1148])
                    ("func" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1149 1166])
                    ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1167 1184])
                    ("line" variable (:type "int") (reparse-symbol arg-sub-list) [1185 1194]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1095 1195])
            ("Type_Implements_Method" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1223 1232])
                    ("offset" variable (:type "int") (reparse-symbol arg-sub-list) [1233 1244])
                    ("class_name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1245 1268])
                    ("func" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1269 1286])
                    ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1287 1304])
                    ("line" variable (:type "int") (reparse-symbol arg-sub-list) [1305 1314]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1196 1315])
            ("Type_Class" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1332 1341])
                    ("class_name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1342 1365])
                    ("func" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1366 1383])
                    ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1384 1401])
                    ("line" variable (:type "int") (reparse-symbol arg-sub-list) [1402 1411]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1317 1412])
            ("Type_Class_Method" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1435 1444])
                    ("offset" variable (:type "int") (reparse-symbol arg-sub-list) [1445 1456])
                    ("class_name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1457 1480])
                    ("method_name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1481 1505])
                    ("func" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1506 1523])
                    ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1524 1541])
                    ("line" variable (:type "int") (reparse-symbol arg-sub-list) [1542 1551]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1413 1552])
            ("Type_Name" function
               (:prototype-flag t
                :pointer 1
                :constant-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1576 1585]))                  
                :type "char")
                nil [1554 1586])
            ("Type_Parent" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1603 1612]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1587 1613])
            ("Type_Inherit" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1632 1641])
                    ("parent" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1642 1653]))                  
                :type "void")
                nil [1614 1654])
            ("Type_AsStr" function
               (:prototype-flag t
                :pointer 1
                :constant-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1680 1689]))                  
                :type "char")
                nil [1657 1690])
            ("Type_Show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1705 1714])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1715 1726])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1727 1735]))                  
                :type "int")
                nil [1691 1736]))          
    :file "Type.h"
    :pointmax 1892
    :fsize 1891
    :lastmodtime '(21376 45128 660965 755000)
    :unmatched-syntax '((punctuation 1880 . 1881) (semantic-list 1861 . 1880) (punctuation 1859 . 1860) (semantic-list 1846 . 1858) (symbol 1838 . 1846) (punctuation 1836 . 1837) (semantic-list 1822 . 1836) (punctuation 1820 . 1821) (semantic-list 1806 . 1819) (symbol 1798 . 1806) (punctuation 1796 . 1797) (semantic-list 1760 . 1796) (punctuation 1758 . 1759) (semantic-list 1746 . 1757) (symbol 1738 . 1746) (semantic-list 384 . 435) (symbol 379 . 383) (symbol 361 . 367))
    :lexical-table 
        '(("type_implements" (spp-arg-list ("T" "C") 625 . 631) . ((symbol "Type_Implements" 632 . 647) (semantic-list "(T, #C, __func__, __FILE__, __LINE__)" 647 . 684)))
          ("cast" (spp-arg-list ("X" "T") 548 . 554) . ((symbol "Type_Cast" 555 . 564) (semantic-list "(X, T, __func__, __FILE__, __LINE__)" 564 . 600)))
          ("type_implements_method" (spp-arg-list ("T" "C" "M") 715 . 724) . ((symbol "Type_Implements_Method" 725 . 747) (semantic-list "(T, offsetof(C, M), #C, __func__, __FILE__, __LINE__)" 747 . 800)))
          ("type_class_method" (spp-arg-list ("T" "C" "M" "...") 900 . 914) . 
              ((semantic-list "((C*)Type_Class_Method(T, offsetof(C, M), #C, #M, __func__, __FILE__, __LINE__))" 915 . 995) (punctuation "-" 995 . 996) (punctuation ">" 996 . 997) (symbol "M" 997 . 998) (semantic-list "(__VA_ARGS__)" 998 . 1011)))
          ("CelloType_h")
          ("type_class" (spp-arg-list ("T" "C") 820 . 826) . ((symbol "Type_Class" 827 . 837) (semantic-list "(T, #C, __func__, __FILE__, __LINE__)" 837 . 874)))
          )

    )
   (semanticdb-table "Array.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloArray_h" variable (:constant-flag t) nil [198 210])
            ("Prelude.h" include nil nil [212 232])
            ("Type.h" include nil nil [233 250])
            ("Format.h" include nil nil [251 270])
            ("Array" variable (:type ("var" type (:type "class") nil nil)) nil [279 289])
            ("Array_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [305 314])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [315 327]))                  
                :type ("var" type (:type "class") nil nil))
                nil [291 328])
            ("Array_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [346 355]))                  
                :type ("var" type (:type "class") nil nil))
                nil [329 356])
            ("Array_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [375 380]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [357 381])
            ("Array_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [400 409])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [410 418]))                  
                :type "void")
                nil [382 419])
            ("Array_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [435 444]))                  
                :type ("var" type (:type "class") nil nil))
                nil [420 445])
            ("Array_Eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [460 469])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [470 478]))                  
                :type ("var" type (:type "class") nil nil))
                nil [447 479])
            ("Array_Len" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [495 504]))                  
                :type "int")
                nil [481 505])
            ("Array_Clear" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [523 532]))                  
                :type "void")
                nil [506 533])
            ("Array_Contains" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [553 562])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [563 571]))                  
                :type ("var" type (:type "class") nil nil))
                nil [534 572])
            ("Array_Discard" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [592 601])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [602 610]))                  
                :type "void")
                nil [573 611])
            ("Array_Push_Back" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [634 643])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [644 652]))                  
                :type "void")
                nil [613 653])
            ("Array_Push_Front" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [676 685])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [686 694]))                  
                :type "void")
                nil [654 695])
            ("Array_Push_At" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [715 724])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [725 733])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [734 740]))                  
                :type "void")
                nil [696 741])
            ("Array_Pop_Back" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [762 771]))                  
                :type ("var" type (:type "class") nil nil))
                nil [743 772])
            ("Array_Pop_Front" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [793 802]))                  
                :type ("var" type (:type "class") nil nil))
                nil [773 803])
            ("Array_Pop_At" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [821 830])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [831 837]))                  
                :type ("var" type (:type "class") nil nil))
                nil [804 838])
            ("Array_At" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [853 862])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [863 869]))                  
                :type ("var" type (:type "class") nil nil))
                nil [840 870])
            ("Array_Set" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [886 895])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [896 902])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [903 911]))                  
                :type "void")
                nil [871 912])
            ("Array_Iter_Start" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [935 944]))                  
                :type ("var" type (:type "class") nil nil))
                nil [914 945])
            ("Array_Iter_End" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [965 974]))                  
                :type ("var" type (:type "class") nil nil))
                nil [946 975])
            ("Array_Iter_Next" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [996 1005])
                    ("curr" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1006 1015]))                  
                :type ("var" type (:type "class") nil nil))
                nil [976 1016])
            ("Array_Reverse" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1037 1046]))                  
                :type "void")
                nil [1018 1047])
            ("Array_Sort" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1064 1073]))                  
                :type "void")
                nil [1048 1074])
            ("Array_Show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1091 1100])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1101 1112])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1113 1121]))                  
                :type "int")
                nil [1076 1122]))          
    :file "Array.h"
    :pointmax 1868
    :fsize 1867
    :lastmodtime '(21376 45128 657965 847000)
    :unmatched-syntax '((punctuation 1858 . 1859) (semantic-list 1838 . 1858) (punctuation 1836 . 1837) (semantic-list 1822 . 1835) (symbol 1814 . 1822) (punctuation 1812 . 1813) (semantic-list 1793 . 1812) (punctuation 1791 . 1792) (semantic-list 1775 . 1790) (symbol 1767 . 1775) (punctuation 1765 . 1766) (semantic-list 1751 . 1765) (punctuation 1749 . 1750) (semantic-list 1735 . 1748) (symbol 1727 . 1735) (punctuation 1725 . 1726) (semantic-list 1708 . 1725) (punctuation 1706 . 1707) (semantic-list 1689 . 1705) (symbol 1681 . 1689) (punctuation 1679 . 1680) (semantic-list 1626 . 1679) (punctuation 1624 . 1625) (semantic-list 1610 . 1623) (symbol 1602 . 1610) (punctuation 1600 . 1601) (semantic-list 1577 . 1600) (punctuation 1575 . 1576) (semantic-list 1563 . 1574) (symbol 1555 . 1563) (punctuation 1553 . 1554) (semantic-list 1421 . 1553) (punctuation 1419 . 1420) (semantic-list 1405 . 1418) (symbol 1397 . 1405) (punctuation 1395 . 1396) (semantic-list 1338 . 1395) (punctuation 1336 . 1337) (semantic-list 1316 . 1335) (symbol 1308 . 1316) (punctuation 1306 . 1307) (semantic-list 1294 . 1306) (punctuation 1292 . 1293) (semantic-list 1280 . 1291) (symbol 1272 . 1280) (punctuation 1270 . 1271) (semantic-list 1256 . 1270) (punctuation 1254 . 1255) (semantic-list 1240 . 1253) (symbol 1232 . 1240) (punctuation 1230 . 1231) (semantic-list 1214 . 1230) (punctuation 1212 . 1213) (semantic-list 1196 . 1211) (symbol 1188 . 1196) (punctuation 1186 . 1187) (semantic-list 1147 . 1186) (punctuation 1145 . 1146) (semantic-list 1132 . 1144) (symbol 1124 . 1132) (symbol 272 . 278))
    :lexical-table 
        '(("CelloArray_h")
          )

    )
   (semanticdb-table "Format.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloFormat_h" variable (:constant-flag t) nil [1014 1027])
            ("Prelude.h" include nil nil [1029 1049])
            ("Format" variable (:type ("" type
                 (:members 
                    ( ("format_to" variable
                         (:functionpointer-flag t
                          :type "int")
                          (reparse-symbol classsubparts) [1108 1154])
                      ("format_from" variable
                         (:functionpointer-flag t
                          :type "int")
                          (reparse-symbol classsubparts) [1157 1205]))                    
                  :type "class")
                  nil nil)) nil [1098 1215])
            ("format_to_va" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1234 1243])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1244 1252])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1253 1269])
                    ("va" variable (:type ("va_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1270 1281]))                  
                :type "int")
                nil [1217 1282])
            ("format_from_va" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1302 1311])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1312 1320])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1321 1337])
                    ("va" variable (:type ("va_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1338 1349]))                  
                :type "int")
                nil [1283 1350])
            ("format_to" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1366 1375])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1376 1384])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1385 1401])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [1402 1406]))                  
                :type "int")
                nil [1352 1407])
            ("format_from" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1424 1433])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1434 1442])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1443 1459])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [1460 1464]))                  
                :type "int")
                nil [1408 1465])
            ("Show" variable (:type ("" type
                 (:members 
                    ( ("show" variable
                         (:functionpointer-flag t
                          :type "int")
                          (reparse-symbol classsubparts) [1518 1543])
                      ("look" variable
                         (:functionpointer-flag t
                          :type "int")
                          (reparse-symbol classsubparts) [1546 1571]))                    
                  :type "class")
                  nil nil)) nil [1508 1579])
            ("show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1590 1599]))                  
                :type "int")
                nil [1581 1600])
            ("show_to" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1613 1622])
                    ("out" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1623 1631])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1632 1640]))                  
                :type "int")
                nil [1601 1641])
            ("print" variable (:constant-flag t) nil [1651 1656])
            ("println" variable (:constant-flag t) nil [1716 1723])
            ("print_to" variable (:constant-flag t) nil [1785 1793])
            ("print_vl" function
               (:prototype-flag t
                :arguments 
                  ( ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1882 1898])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1899 1911]))                  
                :type "int")
                nil [1869 1912])
            ("println_vl" function
               (:prototype-flag t
                :arguments 
                  ( ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1928 1944])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1945 1957]))                  
                :type "int")
                nil [1913 1958])
            ("print_to_vl" function
               (:prototype-flag t
                :arguments 
                  ( ("out" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1975 1983])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1984 1992])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1993 2009])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2010 2022]))                  
                :type "int")
                nil [1959 2023])
            ("look" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2034 2043]))                  
                :type "int")
                nil [2025 2044])
            ("look_from" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2059 2068])
                    ("input" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2069 2079])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [2080 2088]))                  
                :type "int")
                nil [2045 2089])
            ("scan" variable (:constant-flag t) nil [2099 2103])
            ("scanln" variable (:constant-flag t) nil [2162 2168])
            ("scan_from" variable (:constant-flag t) nil [2229 2238])
            ("scan_vl" function
               (:prototype-flag t
                :arguments 
                  ( ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2331 2347])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2348 2360]))                  
                :type "int")
                nil [2319 2361])
            ("scanln_vl" function
               (:prototype-flag t
                :arguments 
                  ( ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2376 2392])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2393 2405]))                  
                :type "int")
                nil [2362 2406])
            ("scan_from_vl" function
               (:prototype-flag t
                :arguments 
                  ( ("input" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2424 2434])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [2435 2443])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2444 2460])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2461 2473]))                  
                :type "int")
                nil [2407 2474]))          
    :file "Format.h"
    :pointmax 2483
    :fsize 2482
    :lastmodtime '(21376 45128 658965 816000)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("scan" (spp-arg-list ("fmt" "...") 2103 . 2113) . ((symbol "scan_vl" 2114 . 2121) (semantic-list "(fmt, var_list_new(__VA_ARGS__))" 2121 . 2153)))
          ("scan_from" (spp-arg-list ("input" "pos" "fmt" "...") 2238 . 2260) . ((symbol "scan_from_vl" 2261 . 2273) (semantic-list "(input, pos, fmt, var_list_new(__VA_ARGS__))" 2273 . 2317)))
          ("print_to" (spp-arg-list ("out" "pos" "fmt" "...") 1793 . 1813) . ((symbol "print_to_vl" 1814 . 1825) (semantic-list "(out, pos, fmt, var_list_new(__VA_ARGS__))" 1825 . 1867)))
          ("CelloFormat_h")
          ("scanln" (spp-arg-list ("fmt" "...") 2168 . 2178) . ((symbol "scanln_vl" 2179 . 2188) (semantic-list "(fmt, var_list_new(__VA_ARGS__))" 2188 . 2220)))
          ("print" (spp-arg-list ("fmt" "...") 1656 . 1666) . ((symbol "print_vl" 1667 . 1675) (semantic-list "(fmt, var_list_new(__VA_ARGS__))" 1675 . 1707)))
          ("println" (spp-arg-list ("fmt" "...") 1723 . 1733) . ((symbol "println_vl" 1734 . 1744) (semantic-list "(fmt, var_list_new(__VA_ARGS__))" 1744 . 1776)))
          )

    )
   (semanticdb-table "Bool.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloBool_h" variable (:constant-flag t) nil [356 367])
            ("Prelude.h" include nil nil [369 389])
            ("Format.h" include nil nil [390 409])
            ("Bool" variable (:type ("var" type (:type "class") nil nil)) nil [418 427])
            ("True" variable (:type ("var" type (:type "class") nil nil)) nil [435 453])
            ("False" variable (:type ("var" type (:type "class") nil nil)) nil [460 479])
            ("bool_var" function
               (:prototype-flag t
                :arguments 
                  ( ("x" variable (:type "bool") (reparse-symbol arg-sub-list) [494 501]))                  
                :type ("var" type (:type "class") nil nil))
                nil [481 502])
            ("Bool_Eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [516 525])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [526 534]))                  
                :type ("var" type (:type "class") nil nil))
                nil [504 535])
            ("Bool_Gt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [548 557])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [558 566]))                  
                :type ("var" type (:type "class") nil nil))
                nil [536 567])
            ("Bool_Lt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [580 589])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [590 598]))                  
                :type ("var" type (:type "class") nil nil))
                nil [568 599])
            ("Bool_Hash" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [616 625]))                  
                :type "long")
                nil [601 626])
            ("Bool_AsChar" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [644 653]))                  
                :type "char")
                nil [627 654])
            ("Bool_AsStr" function
               (:prototype-flag t
                :pointer 1
                :constant-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [678 687]))                  
                :type "char")
                nil [655 688])
            ("Bool_AsLong" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [706 715]))                  
                :type "long")
                nil [689 716])
            ("Bool_AsDouble" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [738 747]))                  
                :type "double")
                nil [717 748])
            ("Bool_Show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [764 773])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [774 785])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [786 794]))                  
                :type "int")
                nil [750 795]))          
    :file "Bool.h"
    :pointmax 1135
    :fsize 1134
    :lastmodtime '(21376 45128 657965 847000)
    :unmatched-syntax '((punctuation 1125 . 1126) (semantic-list 1106 . 1125) (punctuation 1104 . 1105) (semantic-list 1091 . 1103) (symbol 1083 . 1091) (punctuation 1081 . 1082) (semantic-list 1067 . 1081) (punctuation 1065 . 1066) (semantic-list 1051 . 1064) (symbol 1043 . 1051) (punctuation 1041 . 1042) (semantic-list 1024 . 1041) (punctuation 1022 . 1023) (semantic-list 1005 . 1021) (symbol 997 . 1005) (punctuation 995 . 996) (semantic-list 980 . 995) (punctuation 978 . 979) (semantic-list 963 . 977) (symbol 955 . 963) (punctuation 953 . 954) (semantic-list 938 . 953) (punctuation 936 . 937) (semantic-list 921 . 935) (symbol 913 . 921) (punctuation 911 . 912) (semantic-list 898 . 911) (punctuation 896 . 897) (semantic-list 883 . 895) (symbol 875 . 883) (punctuation 873 . 874) (semantic-list 853 . 873) (punctuation 851 . 852) (semantic-list 839 . 850) (symbol 831 . 839) (punctuation 829 . 830) (semantic-list 818 . 829) (punctuation 816 . 817) (semantic-list 805 . 815) (symbol 797 . 805) (symbol 454 . 459) (symbol 429 . 434) (symbol 411 . 417))
    :lexical-table 
        '(("CelloBool_h")
          )

    )
   (semanticdb-table "Char.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloChar_h" variable (:constant-flag t) nil [76 87])
            ("Prelude.h" include nil nil [89 109])
            ("Type.h" include nil nil [110 127])
            ("Char" variable (:type ("var" type (:type "class") nil nil)) nil [136 145])
            ("CharData" variable (:type "int") nil [182 191])
            ("Char_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [206 215])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [216 228]))                  
                :type ("var" type (:type "class") nil nil))
                nil [193 229])
            ("Char_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [246 255]))                  
                :type ("var" type (:type "class") nil nil))
                nil [230 256])
            ("Char_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [274 279]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [257 280])
            ("Char_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [298 307])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [308 316]))                  
                :type "void")
                nil [281 317])
            ("Char_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [332 341]))                  
                :type ("var" type (:type "class") nil nil))
                nil [318 342])
            ("Char_Eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [356 365])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [366 374]))                  
                :type ("var" type (:type "class") nil nil))
                nil [344 375])
            ("Char_Gt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [388 397])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [398 406]))                  
                :type ("var" type (:type "class") nil nil))
                nil [376 407])
            ("Char_Lt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [420 429])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [430 438]))                  
                :type ("var" type (:type "class") nil nil))
                nil [408 439])
            ("Char_Hash" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [456 465]))                  
                :type "long")
                nil [441 466])
            ("Char_AsChar" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [485 494]))                  
                :type "char")
                nil [468 495])
            ("Char_Serial_Read" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [519 528])
                    ("input" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [529 539]))                  
                :type "void")
                nil [497 540])
            ("Char_Serial_Write" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [564 573])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [574 585]))                  
                :type "void")
                nil [541 586])
            ("Char_Show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [602 611])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [612 623])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [624 632]))                  
                :type "int")
                nil [588 633])
            ("Char_Look" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [648 657])
                    ("input" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [658 668])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [669 677]))                  
                :type "int")
                nil [634 678]))          
    :file "Char.h"
    :pointmax 1106
    :fsize 1105
    :lastmodtime '(21376 45128 657965 847000)
    :unmatched-syntax '((punctuation 1096 . 1097) (semantic-list 1072 . 1096) (punctuation 1070 . 1071) (semantic-list 1057 . 1069) (symbol 1049 . 1057) (punctuation 1047 . 1048) (semantic-list 1008 . 1047) (punctuation 1006 . 1007) (semantic-list 988 . 1005) (symbol 980 . 988) (punctuation 978 . 979) (semantic-list 962 . 978) (punctuation 960 . 961) (semantic-list 945 . 959) (symbol 937 . 945) (punctuation 935 . 936) (semantic-list 921 . 935) (punctuation 919 . 920) (semantic-list 906 . 918) (symbol 898 . 906) (punctuation 896 . 897) (semantic-list 876 . 896) (punctuation 874 . 875) (semantic-list 862 . 873) (symbol 854 . 862) (punctuation 852 . 853) (semantic-list 841 . 852) (punctuation 839 . 840) (semantic-list 828 . 838) (symbol 820 . 828) (punctuation 818 . 819) (semantic-list 805 . 818) (punctuation 803 . 804) (semantic-list 790 . 802) (symbol 782 . 790) (punctuation 780 . 781) (semantic-list 765 . 780) (punctuation 763 . 764) (semantic-list 748 . 762) (symbol 740 . 748) (punctuation 738 . 739) (semantic-list 702 . 738) (punctuation 700 . 701) (semantic-list 688 . 699) (symbol 680 . 688) (semantic-list 152 . 181) (symbol 147 . 151) (symbol 129 . 135))
    :lexical-table 
        '(("CelloChar_h")
          )

    )
   (semanticdb-table "Dictionary.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloDictionary_h" variable (:constant-flag t) nil [256 273])
            ("Prelude.h" include nil nil [275 295])
            ("Type.h" include nil nil [296 313])
            ("Dictionary" variable (:type ("var" type (:type "class") nil nil)) nil [322 337])
            ("Dictionary_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [358 367])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [368 380]))                  
                :type ("var" type (:type "class") nil nil))
                nil [339 381])
            ("Dictionary_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [404 413]))                  
                :type ("var" type (:type "class") nil nil))
                nil [382 414])
            ("Dictionary_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [438 443]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [415 444])
            ("Dictionary_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [468 477])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [478 486]))                  
                :type "void")
                nil [445 487])
            ("Dictionary_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [508 517]))                  
                :type ("var" type (:type "class") nil nil))
                nil [488 518])
            ("Dictionary_Eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [538 547])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [548 556]))                  
                :type ("var" type (:type "class") nil nil))
                nil [520 557])
            ("Dictionary_Len" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [578 587]))                  
                :type "int")
                nil [559 588])
            ("Dictionary_Clear" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [611 620]))                  
                :type "void")
                nil [589 621])
            ("Dictionary_Contains" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [646 655])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [656 664]))                  
                :type ("var" type (:type "class") nil nil))
                nil [622 665])
            ("Dictionary_Discard" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [690 699])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [700 708]))                  
                :type "void")
                nil [666 709])
            ("Dictionary_Get" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [730 739])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [740 748]))                  
                :type ("var" type (:type "class") nil nil))
                nil [711 749])
            ("Dictionary_Put" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [770 779])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [780 788])
                    ("val" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [789 797]))                  
                :type "void")
                nil [750 798])
            ("Dictionary_Iter_Start" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [826 835]))                  
                :type ("var" type (:type "class") nil nil))
                nil [800 836])
            ("Dictionary_Iter_End" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [861 870]))                  
                :type ("var" type (:type "class") nil nil))
                nil [837 871])
            ("Dictionary_Iter_Next" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [897 906])
                    ("curr" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [907 916]))                  
                :type ("var" type (:type "class") nil nil))
                nil [872 917])
            ("Dictionary_Show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [939 948])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [949 960])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [961 969]))                  
                :type "int")
                nil [919 970]))          
    :file "Dictionary.h"
    :pointmax 1548
    :fsize 1547
    :lastmodtime '(21376 45128 657965 847000)
    :unmatched-syntax '((punctuation 1538 . 1539) (semantic-list 1513 . 1538) (punctuation 1511 . 1512) (semantic-list 1492 . 1510) (symbol 1484 . 1492) (punctuation 1482 . 1483) (semantic-list 1414 . 1482) (punctuation 1412 . 1413) (semantic-list 1393 . 1411) (symbol 1385 . 1393) (punctuation 1383 . 1384) (semantic-list 1349 . 1383) (punctuation 1347 . 1348) (semantic-list 1328 . 1346) (symbol 1320 . 1328) (punctuation 1318 . 1319) (semantic-list 1241 . 1318) (punctuation 1239 . 1240) (semantic-list 1214 . 1238) (symbol 1206 . 1214) (punctuation 1204 . 1205) (semantic-list 1187 . 1204) (punctuation 1185 . 1186) (semantic-list 1168 . 1184) (symbol 1160 . 1168) (punctuation 1158 . 1159) (semantic-list 1139 . 1158) (punctuation 1137 . 1138) (semantic-list 1118 . 1136) (symbol 1110 . 1118) (punctuation 1108 . 1109) (semantic-list 1087 . 1108) (punctuation 1085 . 1086) (semantic-list 1064 . 1084) (symbol 1056 . 1064) (punctuation 1054 . 1055) (semantic-list 1000 . 1054) (punctuation 998 . 999) (semantic-list 980 . 997) (symbol 972 . 980) (symbol 315 . 321))
    :lexical-table 
        '(("CelloDictionary_h")
          )

    )
   (semanticdb-table "Exception.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloException_H" variable (:constant-flag t) nil [198 214])
            ("Prelude.h" include nil nil [216 236])
            ("TypeError" variable (:type ("var" type (:type "class") nil nil)) nil [245 259])
            ("ValueError" variable (:type ("var" type (:type "class") nil nil)) nil [267 282])
            ("ClassError" variable (:type ("var" type (:type "class") nil nil)) nil [290 305])
            ("IndexOutOfBoundsError" variable (:type ("var" type (:type "class") nil nil)) nil [313 339])
            ("KeyError" variable (:type ("var" type (:type "class") nil nil)) nil [347 360])
            ("OutOfMemoryError" variable (:type ("var" type (:type "class") nil nil)) nil [368 389])
            ("IOError" variable (:type ("var" type (:type "class") nil nil)) nil [397 409])
            ("FormatError" variable (:type ("var" type (:type "class") nil nil)) nil [417 433])
            ("BusyError" variable (:type ("var" type (:type "class") nil nil)) nil [441 455])
            ("ResourceError" variable (:type ("var" type (:type "class") nil nil)) nil [463 481])
            ("ProgramAbortedError" variable (:type ("var" type (:type "class") nil nil)) nil [490 514])
            ("DivisionByZeroError" variable (:type ("var" type (:type "class") nil nil)) nil [522 546])
            ("IllegalInstructionError" variable (:type ("var" type (:type "class") nil nil)) nil [554 582])
            ("ProgramInterruptedError" variable (:type ("var" type (:type "class") nil nil)) nil [590 618])
            ("SegmentationError" variable (:type ("var" type (:type "class") nil nil)) nil [626 648])
            ("ProgramTerminationError" variable (:type ("var" type (:type "class") nil nil)) nil [656 684])
            ("Exception_Register_Signals" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [756 761]))                  
                :type "void")
                nil [724 762])
            ("Exception_Inc" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [815 820]))                  
                :type "void")
                nil [796 821])
            ("Exception_Dec" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [841 846]))                  
                :type "void")
                nil [822 847])
            ("Exception_Active" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [870 875]))                  
                :type "bool")
                nil [848 876])
            ("Exception_Activate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [901 906]))                  
                :type "void")
                nil [877 907])
            ("Exception_Deactivate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [934 939]))                  
                :type "void")
                nil [908 940])
            ("Exception_Object" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [963 968]))                  
                :type ("var" type (:type "class") nil nil))
                nil [942 969])
            ("Exception_Message" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [992 997]))                  
                :type ("var" type (:type "class") nil nil))
                nil [970 998])
            ("Exception_Depth" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1020 1025]))                  
                :type "int")
                nil [999 1026])
            ("Exception_Buffer" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1050 1055]))                  
                :type "void")
                nil [1027 1056])
            ("Exception_Throw" function
               (:prototype-flag t
                :arguments 
                  ( ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1078 1086])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1087 1103])
                    ("file" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1104 1121])
                    ("func" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1122 1139])
                    ("lineno" variable (:type "int") (reparse-symbol arg-sub-list) [1140 1151])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1152 1164]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1058 1165])
            ("Exception_Catch" function
               (:prototype-flag t
                :arguments 
                  ( ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1186 1198]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1166 1199])
            ("try" variable (:constant-flag t) nil [1233 1236])
            ("catch" variable (:constant-flag t) nil [1323 1328])
            ("catch_scanned" variable (:constant-flag t) nil [1369 1382])
            ("throw" variable (:constant-flag t) nil [1535 1540]))          
    :file "Exception.h"
    :pointmax 1644
    :fsize 1643
    :lastmodtime '(21376 45128 658965 816000)
    :unmatched-syntax '((symbol 649 . 655) (symbol 619 . 625) (symbol 583 . 589) (symbol 547 . 553) (symbol 515 . 521) (symbol 483 . 489) (symbol 456 . 462) (symbol 434 . 440) (symbol 410 . 416) (symbol 390 . 396) (symbol 361 . 367) (symbol 340 . 346) (symbol 306 . 312) (symbol 283 . 289) (symbol 260 . 266) (symbol 238 . 244))
    :lexical-table 
        '(("catch_scanned" (spp-arg-list ("x" "...") 1382 . 1390) . 
              ((ELSE "else" 1391 . 1395) (semantic-list "{ Exception_Activate(); }" 1396 . 1421) (symbol "Exception_Dec" 1422 . 1435) (semantic-list "()" 1435 . 1437) (punctuation ";" 1437 . 1438) (FOR "for" 1439 . 1442) (semantic-list "(var x = Exception_Catch(var_list_new(__VA_ARGS__)); x != Undefined; x = Undefined)" 1443 . 1526)))
          ("CelloException_H")
          ("catch" (spp-arg-list ("...") 1328 . 1333) . ((symbol "catch_scanned" 1334 . 1347) (semantic-list "(__VA_ARGS__)" 1347 . 1360)))
          ("throw" (spp-arg-list ("e" "fmt" "...") 1540 . 1553) . ((symbol "Exception_Throw" 1554 . 1569) (semantic-list "(e, fmt, __FILE__, __func__, __LINE__, var_list_new(__VA_ARGS__))" 1569 . 1634)))
          ("try" . 
              ((symbol "Exception_Inc" 1237 . 1250) (semantic-list "()" 1250 . 1252) (punctuation ";" 1252 . 1253) (symbol "Exception_Deactivate" 1254 . 1274) (semantic-list "()" 1274 . 1276) (punctuation ";" 1276 . 1277) (IF "if" 1278 . 1280) (semantic-list "(!setjmp(Exception_Buffer()))" 1281 . 1310)))
          )

    )
   (semanticdb-table "File.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloFile_h" variable (:constant-flag t) nil [76 87])
            ("Prelude.h" include nil nil [89 109])
            ("Type.h" include nil nil [110 127])
            ("Format.h" include nil nil [128 147])
            ("stdio.h" include (:system-flag t) nil [149 167])
            ("File" variable (:type ("var" type (:type "class") nil nil)) nil [176 185])
            ("FileData" variable (:type "int") nil [219 228])
            ("File_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [243 252])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [253 265]))                  
                :type ("var" type (:type "class") nil nil))
                nil [230 266])
            ("File_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [283 292]))                  
                :type ("var" type (:type "class") nil nil))
                nil [267 293])
            ("File_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [311 316]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [294 317])
            ("File_Open" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [333 342])
                    ("filename" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [343 364])
                    ("access" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [365 384]))                  
                :type ("var" type (:type "class") nil nil))
                nil [319 385])
            ("File_Close" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [402 411]))                  
                :type "void")
                nil [386 412])
            ("File_Seek" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [429 438])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [439 447])
                    ("origin" variable (:type "int") (reparse-symbol arg-sub-list) [448 459]))                  
                :type "void")
                nil [414 460])
            ("File_Tell" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [475 484]))                  
                :type "int")
                nil [461 485])
            ("File_Flush" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [502 511]))                  
                :type "void")
                nil [486 512])
            ("File_EOF" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [528 537]))                  
                :type "bool")
                nil [514 538])
            ("File_Read" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [554 563])
                    ("output" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [564 577])
                    ("size" variable (:type "int") (reparse-symbol arg-sub-list) [578 587]))                  
                :type "int")
                nil [540 588])
            ("File_Write" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [604 613])
                    ("input" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [614 626])
                    ("size" variable (:type "int") (reparse-symbol arg-sub-list) [627 636]))                  
                :type "int")
                nil [589 637])
            ("File_Read_Data" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [659 668])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [669 680]))                  
                :type "void")
                nil [639 681])
            ("File_Write_Data" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [703 712])
                    ("input" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [713 723]))                  
                :type "void")
                nil [682 724])
            ("File_Get" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [739 748])
                    ("type" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [749 758]))                  
                :type ("var" type (:type "class") nil nil))
                nil [726 759])
            ("File_Put" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [774 783])
                    ("type" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [784 793])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [794 802]))                  
                :type "void")
                nil [760 803])
            ("File_Format_To" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [824 833])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [834 842])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [843 859])
                    ("va" variable (:type ("va_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [860 871]))                  
                :type "int")
                nil [805 872])
            ("File_Format_From" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [894 903])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [904 912])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [913 929])
                    ("va" variable (:type ("va_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [930 941]))                  
                :type "int")
                nil [873 942]))          
    :file "File.h"
    :pointmax 1286
    :fsize 1285
    :lastmodtime '(21376 45128 658965 816000)
    :unmatched-syntax '((punctuation 1276 . 1277) (semantic-list 1240 . 1276) (punctuation 1238 . 1239) (semantic-list 1223 . 1237) (symbol 1215 . 1223) (punctuation 1213 . 1214) (semantic-list 1191 . 1213) (punctuation 1189 . 1190) (semantic-list 1176 . 1188) (symbol 1168 . 1176) (punctuation 1166 . 1167) (semantic-list 1074 . 1166) (punctuation 1072 . 1073) (semantic-list 1057 . 1071) (symbol 1049 . 1057) (punctuation 1047 . 1048) (semantic-list 1027 . 1047) (punctuation 1025 . 1026) (semantic-list 1012 . 1024) (symbol 1004 . 1012) (punctuation 1002 . 1003) (semantic-list 966 . 1002) (punctuation 964 . 965) (semantic-list 952 . 963) (symbol 944 . 952) (semantic-list 192 . 218) (symbol 187 . 191) (symbol 169 . 175))
    :lexical-table 
        '(("CelloFile_h")
          )

    )
   (semanticdb-table "FunctionAuto.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloFunctionAuto_h" variable (:constant-flag t) nil [37 56])
            ("auto_lambda0" variable (:constant-flag t) nil [67 79])
            ("auto_lambda1" variable (:constant-flag t) nil [169 181]))          
    :file "FunctionAuto.h"
    :pointmax 282
    :fsize 281
    :lastmodtime '(21376 45128 658965 816000)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("auto_lambda0" (spp-arg-list ("func") 79 . 85) . 
              ((symbol "var" 86 . 89) (spp-symbol-merge ((symbol "__Plus_" 90 . 97) (symbol "func" 99 . 103)) 90 . 103) (semantic-list "(var self, var args)" 103 . 123) (semantic-list "{ return func(); }" 124 . 142) (punctuation ";" 142 . 143) (spp-symbol-merge ((symbol "__Plus_" 146 . 153) (symbol "func" 155 . 159)) 146 . 159)))
          ("auto_lambda1" (spp-arg-list ("func") 181 . 187) . 
              ((symbol "var" 190 . 193) (spp-symbol-merge ((symbol "__Plus_" 194 . 201) (symbol "func" 203 . 207)) 194 . 207) (semantic-list "(var self, var args)" 207 . 227) (semantic-list "{ var a0 = at(args, 0) return func(a0); }" 228 . 269) (punctuation ";" 269 . 270)))
          ("CelloFunctionAuto_h")
          )

    )
   (semanticdb-table "LambdaCurry.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloLambdaCurry_h" variable (:constant-flag t) nil [36 54])
            ("lambda_uncurry0" variable (:constant-flag t) nil [95 110])
            ("lambda_uncurry1" variable (:constant-flag t) nil [183 198])
            ("lambda_uncurry2" variable (:constant-flag t) nil [281 296])
            ("lambda_uncurry3" variable (:constant-flag t) nil [393 408])
            ("lambda_uncurry4" variable (:constant-flag t) nil [517 532])
            ("lambda_uncurry5" variable (:constant-flag t) nil [653 668])
            ("lambda_uncurry6" variable (:constant-flag t) nil [801 816])
            ("lambda_uncurry7" variable (:constant-flag t) nil [961 976])
            ("lambda_uncurry8" variable (:constant-flag t) nil [1133 1148])
            ("lambda_uncurry9" variable (:constant-flag t) nil [1317 1332])
            ("lambda_void_uncurry0" variable (:constant-flag t) nil [1550 1570])
            ("lambda_void_uncurry1" variable (:constant-flag t) nil [1649 1669])
            ("lambda_void_uncurry2" variable (:constant-flag t) nil [1758 1778])
            ("lambda_void_uncurry3" variable (:constant-flag t) nil [1881 1901])
            ("lambda_void_uncurry4" variable (:constant-flag t) nil [2016 2036])
            ("lambda_void_uncurry5" variable (:constant-flag t) nil [2163 2183])
            ("lambda_void_uncurry6" variable (:constant-flag t) nil [2322 2342])
            ("lambda_void_uncurry7" variable (:constant-flag t) nil [2493 2513])
            ("lambda_void_uncurry8" variable (:constant-flag t) nil [2676 2696])
            ("lambda_void_uncurry9" variable (:constant-flag t) nil [2871 2891]))          
    :file "LambdaCurry.h"
    :pointmax 3078
    :fsize 3077
    :lastmodtime '(21376 45128 658965 816000)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("lambda_uncurry7" (spp-arg-list ("name" "func_ptr") 976 . 992) . 
              ((symbol "lambda" 997 . 1003) (semantic-list "(name, args)" 1003 . 1015) (semantic-list "{ return func_ptr(at(args,0), at(args,1), at(args,2), at(args,3), at(args,4), at(args,5), at(args,6)); }" 1016 . 1120) (punctuation ";" 1120 . 1121)))
          ("lambda_void_uncurry0" (spp-arg-list ("name" "func_ptr") 1570 . 1586) . 
              ((symbol "lambda" 1591 . 1597) (semantic-list "(name, args)" 1597 . 1609) (semantic-list "{ func_ptr(); return None; }" 1610 . 1638) (punctuation ";" 1638 . 1639)))
          ("lambda_uncurry8" (spp-arg-list ("name" "func_ptr") 1148 . 1164) . 
              ((symbol "lambda" 1169 . 1175) (semantic-list "(name, args)" 1175 . 1187) (semantic-list "{ return func_ptr(at(args,0), at(args,1), at(args,2), at(args,3), at(args,4), at(args,5), at(args,6), at(args,7)); }" 1188 . 1304) (punctuation ";" 1304 . 1305)))
          ("lambda_void_uncurry1" (spp-arg-list ("name" "func_ptr") 1669 . 1685) . 
              ((symbol "lambda" 1690 . 1696) (semantic-list "(name, args)" 1696 . 1708) (semantic-list "{ func_ptr(at(args,0)); return None; }" 1709 . 1747) (punctuation ";" 1747 . 1748)))
          ("lambda_uncurry9" (spp-arg-list ("name" "func_ptr") 1332 . 1348) . 
              ((symbol "lambda" 1353 . 1359) (semantic-list "(name, args)" 1359 . 1371) (semantic-list "{ return func_ptr(at(args,0), at(args,1), at(args,2), at(args,3), at(args,4), at(args,5), at(args,6), at(args,7), at(args,8)); }" 1372 . 1500) (punctuation ";" 1500 . 1501)))
          ("lambda_void_uncurry2" (spp-arg-list ("name" "func_ptr") 1778 . 1794) . 
              ((symbol "lambda" 1799 . 1805) (semantic-list "(name, args)" 1805 . 1817) (semantic-list "{ func_ptr(at(args,0), at(args,1)); return None; }" 1818 . 1868) (punctuation ";" 1868 . 1869)))
          ("lambda_void_uncurry3" (spp-arg-list ("name" "func_ptr") 1901 . 1917) . 
              ((symbol "lambda" 1922 . 1928) (semantic-list "(name, args)" 1928 . 1940) (semantic-list "{ func_ptr(at(args,0), at(args,1), at(args,2)); return None; }" 1941 . 2003) (punctuation ";" 2003 . 2004)))
          ("lambda_void_uncurry4" (spp-arg-list ("name" "func_ptr") 2036 . 2052) . 
              ((symbol "lambda" 2057 . 2063) (semantic-list "(name, args)" 2063 . 2075) (semantic-list "{ func_ptr(at(args,0), at(args,1), at(args,2), at(args,3)); return None; }" 2076 . 2150) (punctuation ";" 2150 . 2151)))
          ("CelloLambdaCurry_h")
          ("lambda_void_uncurry5" (spp-arg-list ("name" "func_ptr") 2183 . 2199) . 
              ((symbol "lambda" 2204 . 2210) (semantic-list "(name, args)" 2210 . 2222) (semantic-list "{ func_ptr(at(args,0), at(args,1), at(args,2), at(args,3), at(args,4)); return None; }" 2223 . 2309) (punctuation ";" 2309 . 2310)))
          ("lambda_uncurry0" (spp-arg-list ("name" "func_ptr") 110 . 126) . 
              ((symbol "lambda" 131 . 137) (semantic-list "(name, args)" 137 . 149) (semantic-list "{ return func_ptr(); }" 150 . 172) (punctuation ";" 172 . 173)))
          ("lambda_void_uncurry6" (spp-arg-list ("name" "func_ptr") 2342 . 2358) . 
              ((symbol "lambda" 2363 . 2369) (semantic-list "(name, args)" 2369 . 2381) (semantic-list "{ func_ptr(at(args,0), at(args,1), at(args,2), at(args,3), at(args,4), at(args,5)); return None; }" 2382 . 2480) (punctuation ";" 2480 . 2481)))
          ("lambda_uncurry1" (spp-arg-list ("name" "func_ptr") 198 . 214) . 
              ((symbol "lambda" 219 . 225) (semantic-list "(name, args)" 225 . 237) (semantic-list "{ return func_ptr(at(args,0)); }" 238 . 270) (punctuation ";" 270 . 271)))
          ("lambda_void_uncurry7" (spp-arg-list ("name" "func_ptr") 2513 . 2529) . 
              ((symbol "lambda" 2534 . 2540) (semantic-list "(name, args)" 2540 . 2552) (semantic-list "{ func_ptr(at(args,0), at(args,1), at(args,2), at(args,3), at(args,4), at(args,5), at(args,6)); return None; }" 2553 . 2663) (punctuation ";" 2663 . 2664)))
          ("lambda_uncurry2" (spp-arg-list ("name" "func_ptr") 296 . 312) . 
              ((symbol "lambda" 317 . 323) (semantic-list "(name, args)" 323 . 335) (semantic-list "{ return func_ptr(at(args,0), at(args,1)); }" 336 . 380) (punctuation ";" 380 . 381)))
          ("lambda_void_uncurry8" (spp-arg-list ("name" "func_ptr") 2696 . 2712) . 
              ((symbol "lambda" 2717 . 2723) (semantic-list "(name, args)" 2723 . 2735) (semantic-list "{ func_ptr(at(args,0), at(args,1), at(args,2), at(args,3), at(args,4), at(args,5), at(args,6), at(args,7)); return None; }" 2736 . 2858) (punctuation ";" 2858 . 2859)))
          ("lambda_uncurry3" (spp-arg-list ("name" "func_ptr") 408 . 424) . 
              ((symbol "lambda" 429 . 435) (semantic-list "(name, args)" 435 . 447) (semantic-list "{ return func_ptr(at(args,0), at(args,1), at(args,2)); }" 448 . 504) (punctuation ";" 504 . 505)))
          ("lambda_void_uncurry9" (spp-arg-list ("name" "func_ptr") 2891 . 2907) . 
              ((symbol "lambda" 2912 . 2918) (semantic-list "(name, args)" 2918 . 2930) (semantic-list "{ func_ptr(at(args,0), at(args,1), at(args,2), at(args,3), at(args,4), at(args,5), at(args,6), at(args,7), at(args,8)); return None; }" 2931 . 3065) (punctuation ";" 3065 . 3066)))
          ("lambda_uncurry4" (spp-arg-list ("name" "func_ptr") 532 . 548) . 
              ((symbol "lambda" 553 . 559) (semantic-list "(name, args)" 559 . 571) (semantic-list "{ return func_ptr(at(args,0), at(args,1), at(args,2), at(args,3)); }" 572 . 640) (punctuation ";" 640 . 641)))
          ("lambda_uncurry5" (spp-arg-list ("name" "func_ptr") 668 . 684) . 
              ((symbol "lambda" 689 . 695) (semantic-list "(name, args)" 695 . 707) (semantic-list "{ return func_ptr(at(args,0), at(args,1), at(args,2), at(args,3), at(args,4)); }" 708 . 788) (punctuation ";" 788 . 789)))
          ("lambda_uncurry6" (spp-arg-list ("name" "func_ptr") 816 . 832) . 
              ((symbol "lambda" 837 . 843) (semantic-list "(name, args)" 843 . 855) (semantic-list "{ return func_ptr(at(args,0), at(args,1), at(args,2), at(args,3), at(args,4), at(args,5)); }" 856 . 948) (punctuation ";" 948 . 949)))
          )

    )
   (semanticdb-table "Lambda.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloLambda_h" variable (:constant-flag t) nil [219 232])
            ("Function.h" include nil nil [234 255])
            ("LambdaCurry.h" include nil nil [256 280])
            ("__VA_ARGC__" variable (:constant-flag t) nil [290 301])
            ("lambda_id" variable (:constant-flag t) nil [402 411])
            ("lambda_const" variable (:constant-flag t) nil [480 492])
            ("lambda_compose" variable (:constant-flag t) nil [548 562])
            ("lambda_flip" variable (:constant-flag t) nil [662 673])
            ("lambda_partial" variable (:constant-flag t) nil [868 882])
            ("lambda_partial_l" variable (:constant-flag t) nil [909 925])
            ("lambda_partial_r" variable (:constant-flag t) nil [1151 1167])
            ("lambda_void" variable (:constant-flag t) nil [1489 1500])
            ("lambda_uncurry" variable (:constant-flag t) nil [1577 1591])
            ("lambda_void_uncurry" variable (:constant-flag t) nil [1659 1678])
            ("lambda_pipe" variable (:constant-flag t) nil [1791 1802])
            ("lambda_method_pipe" variable (:constant-flag t) nil [1987 2005])
            ("map" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2228 2237])
                    ("func" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2238 2247]))                  
                :type "void")
                nil [2219 2248])
            ("new_map" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2313 2322])
                    ("func" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2323 2332]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2301 2333])
            ("new_filter" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2349 2358])
                    ("eq_func" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2359 2371]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2334 2372])
            ("new_foldl" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2387 2396])
                    ("func" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2397 2406])
                    ("base" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2407 2416]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2373 2417])
            ("new_foldr" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2432 2441])
                    ("func" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2442 2451])
                    ("base" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2452 2461]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2418 2462])
            ("new_sum" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2475 2484]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2463 2485])
            ("new_product" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2502 2511]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2486 2512]))          
    :file "Lambda.h"
    :pointmax 2522
    :fsize 2521
    :lastmodtime '(21376 45128 658965 816000)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("lambda_partial_l" (spp-arg-list ("name" "f" "...") 925 . 939) . 
              ((symbol "lambda" 944 . 950) (semantic-list "(name, args)" 950 . 962) (semantic-list "{ \\
    var partargs = new(List, __VA_ARGS__); \\
    foreach(a in args) { push(partargs, a); } \\
    var ret = call_with(f, partargs); \\
    return delete(partargs), ret; \\
  }" 963 . 1139)))
          ("lambda_void" (spp-arg-list ("name" "func_ptr") 1500 . 1516) . 
              ((symbol "lambda" 1517 . 1523) (semantic-list "(name, args)" 1523 . 1535) (semantic-list "{ func_ptr(args); return None; }" 1536 . 1568)))
          ("__VA_ARGC__" (spp-arg-list ("...") 301 . 306) . ((semantic-list "(sizeof((var[]){ __VA_ARGS__ }) / sizeof(var))" 307 . 353)))
          ("lambda_pipe" (spp-arg-list ("name" "...") 1802 . 1813) . 
              ((symbol "lambda" 1818 . 1824) (semantic-list "(name, args)" 1824 . 1836) (semantic-list "{ \\
    var funcs = new(List, __VA_ARGS__); \\
    foreach(f in funcs) { args = call_with(f, args); } \\
    return delete(funcs), args; \\
  }" 1837 . 1977)))
          ("CelloLambda_h")
          ("lambda_id" (spp-arg-list ("name" "f") 411 . 420) . 
              ((symbol "lambda" 421 . 427) (semantic-list "(name, args)" 427 . 439) (semantic-list "{ return call_with(f, args); }" 440 . 470)))
          ("lambda_partial_r" (spp-arg-list ("name" "f" "...") 1167 . 1181) . 
              ((symbol "lambda" 1186 . 1192) (semantic-list "(name, args)" 1192 . 1204) (semantic-list "{ \\
    var partargs = new(List, __VA_ARGS__); \\
    for(int i = len(args)-1; i >= 0; i--) { \\
      push_front(partargs, at(args,i) ); \\
    } \\
    var ret = call_with(f, partargs); \\
    return delete(partargs), ret; \\
  }" 1205 . 1430)))
          ("lambda_compose" (spp-arg-list ("name" "f" "g") 562 . 574) . 
              ((symbol "lambda" 579 . 585) (semantic-list "(name, args)" 585 . 597) (semantic-list "{ \\
    return call_with(f, call_with(g, args)); \\
  }" 598 . 652)))
          ("lambda_partial" . ((symbol "lambda_partial_l" 883 . 899)))
          ("lambda_flip" (spp-arg-list ("name" "f") 673 . 682) . 
              ((symbol "lambda" 687 . 693) (semantic-list "(name, args)" 693 . 705) (semantic-list "{ \\
    var argflip = copy(args); reverse(args); \\
    var ret = call_with(f, args); \\
    return delete(argflip), ret; \\
  }" 706 . 831)))
          ("lambda_uncurry" (spp-arg-list ("name" "func_ptr" "argc") 1591 . 1613) . ((spp-symbol-merge ((symbol "lambda_uncurry" 1614 . 1628) (symbol "argc" 1630 . 1634)) 1614 . 1634) (semantic-list "(name, func_ptr)" 1634 . 1650)))
          ("lambda_method_pipe" (spp-arg-list ("name" "...") 2005 . 2016) . 
              ((symbol "lambda" 2021 . 2027) (semantic-list "(name, args)" 2027 . 2039) (semantic-list "{ \\
    var funcs = new(List, __VA_ARGS__); \\
    foreach(f in funcs) { call_with(f, args); } \\
    return delete(funcs), None; \\
  }" 2040 . 2173)))
          ("lambda_const" (spp-arg-list ("name" "val") 492 . 503) . 
              ((symbol "lambda" 504 . 510) (semantic-list "(name, args)" 510 . 522) (semantic-list "{ return val; }" 523 . 538)))
          ("lambda_void_uncurry" (spp-arg-list ("name" "func_ptr" "argc") 1678 . 1700) . ((spp-symbol-merge ((symbol "lambda_void_uncurry" 1701 . 1720) (symbol "argc" 1722 . 1726)) 1701 . 1726) (semantic-list "(name, func_ptr)" 1726 . 1742)))
          )

    )
   (semanticdb-table "List.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloList_h" variable (:constant-flag t) nil [221 232])
            ("Prelude.h" include nil nil [234 254])
            ("Type.h" include nil nil [255 272])
            ("Format.h" include nil nil [273 292])
            ("List" variable (:type ("var" type (:type "class") nil nil)) nil [301 310])
            ("List_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [325 334])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [335 347]))                  
                :type ("var" type (:type "class") nil nil))
                nil [312 348])
            ("List_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [365 374]))                  
                :type ("var" type (:type "class") nil nil))
                nil [349 375])
            ("List_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [393 398]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [376 399])
            ("List_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [417 426])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [427 435]))                  
                :type "void")
                nil [400 436])
            ("List_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [451 460]))                  
                :type ("var" type (:type "class") nil nil))
                nil [437 461])
            ("List_Eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [475 484])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [485 493]))                  
                :type ("var" type (:type "class") nil nil))
                nil [463 494])
            ("List_Len" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [509 518]))                  
                :type "int")
                nil [496 519])
            ("List_Clear" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [536 545]))                  
                :type "void")
                nil [520 546])
            ("List_Contains" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [565 574])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [575 583]))                  
                :type ("var" type (:type "class") nil nil))
                nil [547 584])
            ("List_Discard" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [603 612])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [613 621]))                  
                :type "void")
                nil [585 622])
            ("List_Push_Back" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [644 653])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [654 662]))                  
                :type "void")
                nil [624 663])
            ("List_Push_Front" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [685 694])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [695 703]))                  
                :type "void")
                nil [664 704])
            ("List_Push_At" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [723 732])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [733 741])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [742 748]))                  
                :type "void")
                nil [705 749])
            ("List_Pop_Back" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [769 778]))                  
                :type ("var" type (:type "class") nil nil))
                nil [751 779])
            ("List_Pop_Front" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [799 808]))                  
                :type ("var" type (:type "class") nil nil))
                nil [780 809])
            ("List_Pop_At" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [826 835])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [836 842]))                  
                :type ("var" type (:type "class") nil nil))
                nil [810 843])
            ("List_At" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [857 866])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [867 873]))                  
                :type ("var" type (:type "class") nil nil))
                nil [845 874])
            ("List_Set" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [889 898])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [899 905])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [906 914]))                  
                :type "void")
                nil [875 915])
            ("List_Iter_Start" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [937 946]))                  
                :type ("var" type (:type "class") nil nil))
                nil [917 947])
            ("List_Iter_End" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [966 975]))                  
                :type ("var" type (:type "class") nil nil))
                nil [948 976])
            ("List_Iter_Next" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [996 1005])
                    ("curr" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1006 1015]))                  
                :type ("var" type (:type "class") nil nil))
                nil [977 1016])
            ("List_Reverse" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1036 1045]))                  
                :type "void")
                nil [1018 1046])
            ("List_Sort" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1062 1071]))                  
                :type "void")
                nil [1047 1072])
            ("List_Show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1088 1097])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1098 1109])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1110 1118]))                  
                :type "int")
                nil [1074 1119]))          
    :file "List.h"
    :pointmax 1827
    :fsize 1826
    :lastmodtime '(21376 45128 658965 816000)
    :unmatched-syntax '((punctuation 1816 . 1817) (semantic-list 1797 . 1816) (punctuation 1795 . 1796) (semantic-list 1782 . 1794) (symbol 1774 . 1782) (punctuation 1772 . 1773) (semantic-list 1754 . 1772) (punctuation 1752 . 1753) (semantic-list 1737 . 1751) (symbol 1729 . 1737) (punctuation 1727 . 1728) (semantic-list 1714 . 1727) (punctuation 1712 . 1713) (semantic-list 1699 . 1711) (symbol 1691 . 1699) (punctuation 1689 . 1690) (semantic-list 1673 . 1689) (punctuation 1671 . 1672) (semantic-list 1655 . 1670) (symbol 1647 . 1655) (punctuation 1645 . 1646) (semantic-list 1595 . 1645) (punctuation 1593 . 1594) (semantic-list 1580 . 1592) (symbol 1572 . 1580) (punctuation 1570 . 1571) (semantic-list 1549 . 1570) (punctuation 1547 . 1548) (semantic-list 1536 . 1546) (symbol 1528 . 1536) (punctuation 1526 . 1527) (semantic-list 1402 . 1526) (punctuation 1400 . 1401) (semantic-list 1387 . 1399) (symbol 1379 . 1387) (punctuation 1377 . 1378) (semantic-list 1324 . 1377) (punctuation 1322 . 1323) (semantic-list 1303 . 1321) (symbol 1295 . 1303) (punctuation 1293 . 1294) (semantic-list 1282 . 1293) (punctuation 1280 . 1281) (semantic-list 1269 . 1279) (symbol 1261 . 1269) (punctuation 1259 . 1260) (semantic-list 1246 . 1259) (punctuation 1244 . 1245) (semantic-list 1231 . 1243) (symbol 1223 . 1231) (punctuation 1221 . 1222) (semantic-list 1206 . 1221) (punctuation 1204 . 1205) (semantic-list 1189 . 1203) (symbol 1181 . 1189) (punctuation 1179 . 1180) (semantic-list 1143 . 1179) (punctuation 1141 . 1142) (semantic-list 1129 . 1140) (symbol 1121 . 1129) (symbol 294 . 300))
    :lexical-table 
        '(("CelloList_h")
          )

    )
   (semanticdb-table "Map.h"
    :major-mode 'c-mode
    :tags nil
    :file "Map.h"
    :pointmax 1202
    :fsize 1201
    :lastmodtime '(21376 45128 659965 786000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "Module.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloModule_h" variable (:constant-flag t) nil [31 44])
            ("dlfcn.h" include (:system-flag t) nil [160 180])
            ("Prelude.h" include nil nil [190 210])
            ("Function.h" include nil nil [211 232])
            ("Exception.h" include nil nil [233 255])
            ("Module" variable (:type ("var" type (:type "class") nil nil)) nil [264 275])
            ("ModuleData" variable (:type "int") nil [385 396])
            ("module" variable (:constant-flag t) nil [406 412])
            ("Module_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [457 466])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [467 479]))                  
                :type ("var" type (:type "class") nil nil))
                nil [442 480])
            ("Module_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [499 508]))                  
                :type ("var" type (:type "class") nil nil))
                nil [481 509])
            ("Module_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [529 534]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [510 535])
            ("Module_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [553 562]))                  
                :type ("var" type (:type "class") nil nil))
                nil [537 563])
            ("Module_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [583 592])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [593 601]))                  
                :type "void")
                nil [564 602])
            ("Module_Enter" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [622 631]))                  
                :type "void")
                nil [604 632])
            ("Module_Exit" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [650 659]))                  
                :type "void")
                nil [633 660])
            ("Module_Get" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [677 686])
                    ("k" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [687 693]))                  
                :type ("var" type (:type "class") nil nil))
                nil [662 694])
            ("Module_Call" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [712 721])
                    ("args" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [722 731]))                  
                :type ("var" type (:type "class") nil nil))
                nil [696 732]))          
    :file "Module.h"
    :pointmax 1042
    :fsize 1096
    :lastmodtime '(21376 45128 659965 786000)
    :unmatched-syntax '((punctuation 1033 . 1034) (semantic-list 1018 . 1033) (punctuation 1016 . 1017) (semantic-list 1001 . 1015) (symbol 993 . 1001) (punctuation 991 . 992) (semantic-list 971 . 991) (punctuation 969 . 970) (semantic-list 954 . 968) (symbol 946 . 954) (punctuation 944 . 945) (semantic-list 915 . 944) (punctuation 913 . 914) (semantic-list 898 . 912) (symbol 890 . 898) (punctuation 888 . 889) (semantic-list 871 . 888) (punctuation 869 . 870) (semantic-list 852 . 868) (symbol 844 . 852) (punctuation 842 . 843) (semantic-list 827 . 842) (punctuation 825 . 826) (semantic-list 810 . 824) (symbol 802 . 810) (punctuation 800 . 801) (semantic-list 758 . 800) (punctuation 756 . 757) (semantic-list 742 . 755) (symbol 734 . 742) (semantic-list 282 . 384) (symbol 277 . 281) (symbol 257 . 263))
    :lexical-table 
        '(("CelloModule_h")
          ("module" (spp-arg-list ("name") 412 . 418) . ((symbol "$" 419 . 420) (semantic-list "(Module, name, NULL)" 420 . 440)))
          )

    )
   (semanticdb-table "None.h"
    :major-mode 'c-mode
    :tags nil
    :file "None.h"
    :pointmax 219
    :fsize 218
    :lastmodtime '(21376 45128 659965 786000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "Number.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloNumber_h" variable (:constant-flag t) nil [31 44])
            ("Prelude.h" include nil nil [46 66])
            ("Type.h" include nil nil [67 84])
            ("Num" variable (:type ("" type
                 (:members 
                    ( ("add" variable
                         (:functionpointer-flag t
                          :type "void")
                          (reparse-symbol classsubparts) [138 160])
                      ("sub" variable
                         (:functionpointer-flag t
                          :type "void")
                          (reparse-symbol classsubparts) [163 185])
                      ("mul" variable
                         (:functionpointer-flag t
                          :type "void")
                          (reparse-symbol classsubparts) [188 210])
                      ("div" variable
                         (:functionpointer-flag t
                          :type "void")
                          (reparse-symbol classsubparts) [213 235])
                      ("negate" variable
                         (:functionpointer-flag t
                          :type "void")
                          (reparse-symbol classsubparts) [238 258])
                      ("absolute" variable
                         (:functionpointer-flag t
                          :type "void")
                          (reparse-symbol classsubparts) [261 283]))                    
                  :type "class")
                  nil nil)) nil [128 290])
            ("add" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [301 310])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [311 319]))                  
                :type "void")
                nil [292 320])
            ("sub" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [330 339])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [340 348]))                  
                :type "void")
                nil [321 349])
            ("mul" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [359 368])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [369 377]))                  
                :type "void")
                nil [350 378])
            ("divide" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [391 400])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [401 409]))                  
                :type "void")
                nil [379 410])
            ("negate" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [424 433]))                  
                :type "void")
                nil [412 434])
            ("absolute" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [449 458]))                  
                :type "void")
                nil [435 459])
            ("Int" variable (:type ("var" type (:type "class") nil nil)) nil [517 525])
            ("IntData" variable (:type "int") nil [562 570])
            ("Int_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [584 593])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [594 606]))                  
                :type ("var" type (:type "class") nil nil))
                nil [572 607])
            ("Int_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [623 632]))                  
                :type ("var" type (:type "class") nil nil))
                nil [608 633])
            ("Int_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [650 655]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [634 656])
            ("Int_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [673 682])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [683 691]))                  
                :type "void")
                nil [657 692])
            ("Int_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [706 715]))                  
                :type ("var" type (:type "class") nil nil))
                nil [693 716])
            ("Int_Eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [729 738])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [739 747]))                  
                :type ("var" type (:type "class") nil nil))
                nil [718 748])
            ("Int_Gt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [760 769])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [770 778]))                  
                :type ("var" type (:type "class") nil nil))
                nil [749 779])
            ("Int_Lt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [791 800])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [801 809]))                  
                :type ("var" type (:type "class") nil nil))
                nil [780 810])
            ("Int_Hash" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [826 835]))                  
                :type "long")
                nil [812 836])
            ("Int_Add" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [851 860])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [861 869]))                  
                :type "void")
                nil [838 870])
            ("Int_Sub" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [884 893])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [894 902]))                  
                :type "void")
                nil [871 903])
            ("Int_Mul" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [917 926])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [927 935]))                  
                :type "void")
                nil [904 936])
            ("Int_Div" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [950 959])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [960 968]))                  
                :type "void")
                nil [937 969])
            ("Int_Neg" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [983 992]))                  
                :type "void")
                nil [970 993])
            ("Int_Abs" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1007 1016]))                  
                :type "void")
                nil [994 1017])
            ("Int_AsLong" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1035 1044]))                  
                :type "long")
                nil [1019 1045])
            ("Int_AsDouble" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1066 1075]))                  
                :type "double")
                nil [1046 1076])
            ("Int_Serial_Read" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1099 1108])
                    ("input" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1109 1119]))                  
                :type "void")
                nil [1078 1120])
            ("Int_Serial_Write" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1143 1152])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1153 1164]))                  
                :type "void")
                nil [1121 1165])
            ("Int_Show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1180 1189])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1190 1201])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1202 1210]))                  
                :type "int")
                nil [1167 1211])
            ("Int_Look" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1225 1234])
                    ("input" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1235 1245])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [1246 1254]))                  
                :type "int")
                nil [1212 1255])
            ("Real" variable (:type ("var" type (:type "class") nil nil)) nil [1836 1845])
            ("RealData" variable (:type "int") nil [1884 1893])
            ("Real_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1908 1917])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1918 1930]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1895 1931])
            ("Real_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1948 1957]))                  
                :type ("var" type (:type "class") nil nil))
                nil [1932 1958])
            ("Real_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1976 1981]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [1959 1982])
            ("Real_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2000 2009])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2010 2018]))                  
                :type "void")
                nil [1983 2019])
            ("Real_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2034 2043]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2020 2044])
            ("Real_Eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2058 2067])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2068 2076]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2046 2077])
            ("Real_Gt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2090 2099])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2100 2108]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2078 2109])
            ("Real_Lt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2122 2131])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2132 2140]))                  
                :type ("var" type (:type "class") nil nil))
                nil [2110 2141])
            ("Real_Hash" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2158 2167]))                  
                :type "long")
                nil [2143 2168])
            ("Real_Add" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2184 2193])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2194 2202]))                  
                :type "void")
                nil [2170 2203])
            ("Real_Sub" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2218 2227])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2228 2236]))                  
                :type "void")
                nil [2204 2237])
            ("Real_Mul" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2252 2261])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2262 2270]))                  
                :type "void")
                nil [2238 2271])
            ("Real_Div" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2286 2295])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2296 2304]))                  
                :type "void")
                nil [2272 2305])
            ("Real_Neg" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2320 2329]))                  
                :type "void")
                nil [2306 2330])
            ("Real_Abs" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2345 2354]))                  
                :type "void")
                nil [2331 2355])
            ("Real_AsDouble" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2378 2387]))                  
                :type "double")
                nil [2357 2388])
            ("Real_AsLong" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2406 2415]))                  
                :type "long")
                nil [2389 2416])
            ("Real_Serial_Read" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2440 2449])
                    ("input" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2450 2460]))                  
                :type "void")
                nil [2418 2461])
            ("Real_Serial_Write" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2485 2494])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2495 2506]))                  
                :type "void")
                nil [2462 2507])
            ("Real_Show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2523 2532])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2533 2544])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [2545 2553]))                  
                :type "int")
                nil [2509 2554])
            ("Real_Look" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2569 2578])
                    ("input" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2579 2589])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [2590 2598]))                  
                :type "int")
                nil [2555 2599]))          
    :file "Number.h"
    :pointmax 3157
    :fsize 3156
    :lastmodtime '(21376 45128 659965 786000)
    :unmatched-syntax '((punctuation 3147 . 3148) (semantic-list 3123 . 3147) (punctuation 3121 . 3122) (semantic-list 3108 . 3120) (symbol 3100 . 3108) (punctuation 3098 . 3099) (semantic-list 3059 . 3098) (punctuation 3057 . 3058) (semantic-list 3039 . 3056) (symbol 3031 . 3039) (punctuation 3029 . 3030) (semantic-list 2967 . 3029) (punctuation 2965 . 2966) (semantic-list 2953 . 2964) (symbol 2945 . 2953) (punctuation 2943 . 2944) (semantic-list 2928 . 2943) (punctuation 2926 . 2927) (semantic-list 2911 . 2925) (symbol 2903 . 2911) (punctuation 2901 . 2902) (semantic-list 2884 . 2901) (punctuation 2882 . 2883) (semantic-list 2865 . 2881) (symbol 2857 . 2865) (punctuation 2855 . 2856) (semantic-list 2842 . 2855) (punctuation 2840 . 2841) (semantic-list 2827 . 2839) (symbol 2819 . 2827) (punctuation 2817 . 2818) (semantic-list 2797 . 2817) (punctuation 2795 . 2796) (semantic-list 2783 . 2794) (symbol 2775 . 2783) (punctuation 2773 . 2774) (semantic-list 2762 . 2773) (punctuation 2760 . 2761) (semantic-list 2749 . 2759) (symbol 2741 . 2749) (punctuation 2739 . 2740) (semantic-list 2726 . 2739) (punctuation 2724 . 2725) (semantic-list 2711 . 2723) (symbol 2703 . 2711) (punctuation 2701 . 2702) (semantic-list 2686 . 2701) (punctuation 2684 . 2685) (semantic-list 2669 . 2683) (symbol 2661 . 2669) (punctuation 2659 . 2660) (semantic-list 2623 . 2659) (punctuation 2621 . 2622) (semantic-list 2609 . 2620) (symbol 2601 . 2609) (semantic-list 1852 . 1883) (symbol 1847 . 1851) (symbol 1829 . 1835) (punctuation 1771 . 1772) (semantic-list 1749 . 1771) (punctuation 1747 . 1748) (semantic-list 1735 . 1746) (symbol 1727 . 1735) (punctuation 1725 . 1726) (semantic-list 1688 . 1725) (punctuation 1686 . 1687) (semantic-list 1669 . 1685) (symbol 1661 . 1669) (punctuation 1659 . 1660) (semantic-list 1603 . 1659) (punctuation 1601 . 1602) (semantic-list 1590 . 1600) (symbol 1582 . 1590) (punctuation 1580 . 1581) (semantic-list 1564 . 1580) (punctuation 1562 . 1563) (semantic-list 1546 . 1561) (symbol 1538 . 1546) (punctuation 1536 . 1537) (semantic-list 1522 . 1536) (punctuation 1520 . 1521) (semantic-list 1506 . 1519) (symbol 1498 . 1506) (punctuation 1496 . 1497) (semantic-list 1484 . 1496) (punctuation 1482 . 1483) (semantic-list 1470 . 1481) (symbol 1462 . 1470) (punctuation 1460 . 1461) (semantic-list 1442 . 1460) (punctuation 1440 . 1441) (semantic-list 1429 . 1439) (symbol 1421 . 1429) (punctuation 1419 . 1420) (semantic-list 1409 . 1419) (punctuation 1407 . 1408) (semantic-list 1397 . 1406) (symbol 1389 . 1397) (punctuation 1387 . 1388) (semantic-list 1375 . 1387) (punctuation 1373 . 1374) (semantic-list 1361 . 1372) (symbol 1353 . 1361) (punctuation 1351 . 1352) (semantic-list 1337 . 1351) (punctuation 1335 . 1336) (semantic-list 1321 . 1334) (symbol 1313 . 1321) (punctuation 1311 . 1312) (semantic-list 1278 . 1311) (punctuation 1276 . 1277) (semantic-list 1265 . 1275) (symbol 1257 . 1265) (semantic-list 532 . 561) (symbol 527 . 531) (symbol 510 . 516))
    :lexical-table 
        '(("CelloNumber_h")
          )

    )
   (semanticdb-table "Pool.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloPool_h" variable (:constant-flag t) nil [163 174])
            ("Table.h" include nil nil [176 194])
            ("Reference.h" include nil nil [195 217])
            ("Retain" variable (:type ("" type
                 (:members 
                    ( ("retain" variable
                         (:functionpointer-flag t
                          :type ("var" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [229 257])
                      ("release" variable
                         (:functionpointer-flag t
                          :type "void")
                          (reparse-symbol classsubparts) [260 290]))                    
                  :type "class")
                  nil nil)) nil [219 300])
            ("retain" function
               (:prototype-flag t
                :arguments 
                  ( ("p" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [313 319])
                    ("x" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [320 326]))                  
                :type ("var" type (:type "class") nil nil))
                nil [302 327])
            ("release" function
               (:prototype-flag t
                :arguments 
                  ( ("p" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [341 347])
                    ("x" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [348 354]))                  
                :type "void")
                nil [328 355])
            ("Pool" variable (:type ("var" type (:type "class") nil nil)) nil [381 390])
            ("Pool_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [405 414])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [415 427]))                  
                :type ("var" type (:type "class") nil nil))
                nil [392 428])
            ("Pool_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [445 454]))                  
                :type ("var" type (:type "class") nil nil))
                nil [429 455])
            ("Pool_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [473 478]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [456 479])
            ("Pool_Retain" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [497 506])
                    ("x" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [507 513]))                  
                :type ("var" type (:type "class") nil nil))
                nil [481 514])
            ("Pool_Release" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [533 542])
                    ("x" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [543 549]))                  
                :type "void")
                nil [515 550])
            ("Pool_Len" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [565 574]))                  
                :type "int")
                nil [552 575])
            ("Pool_Clear" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [592 601]))                  
                :type "void")
                nil [576 602])
            ("Pool_Contains" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [621 630])
                    ("x" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [631 637]))                  
                :type ("var" type (:type "class") nil nil))
                nil [603 638])
            ("Pool_Discard" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [657 666])
                    ("x" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [667 673]))                  
                :type "void")
                nil [639 674])
            ("Pool_Get" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [689 698])
                    ("k" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [699 705]))                  
                :type ("var" type (:type "class") nil nil))
                nil [676 706])
            ("Pool_Put" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [721 730])
                    ("k" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [731 737])
                    ("v" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [738 744]))                  
                :type "void")
                nil [707 745]))          
    :file "Pool.h"
    :pointmax 1002
    :fsize 1001
    :lastmodtime '(21376 45128 659965 786000)
    :unmatched-syntax '((punctuation 992 . 993) (semantic-list 970 . 992) (punctuation 968 . 969) (semantic-list 955 . 967) (symbol 947 . 955) (punctuation 945 . 946) (semantic-list 892 . 945) (punctuation 890 . 891) (semantic-list 871 . 889) (symbol 863 . 871) (punctuation 861 . 862) (semantic-list 832 . 861) (punctuation 830 . 831) (semantic-list 815 . 829) (symbol 807 . 815) (punctuation 805 . 806) (semantic-list 769 . 805) (punctuation 767 . 768) (semantic-list 755 . 766) (symbol 747 . 755) (symbol 374 . 380))
    :lexical-table 
        '(("CelloPool_h")
          )

    )
   (semanticdb-table "Table.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloTable_h" variable (:constant-flag t) nil [232 244])
            ("Prelude.h" include nil nil [246 266])
            ("Type.h" include nil nil [267 284])
            ("Table" variable (:type ("var" type (:type "class") nil nil)) nil [293 303])
            ("Table_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [319 328])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [329 341]))                  
                :type ("var" type (:type "class") nil nil))
                nil [305 342])
            ("Table_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [360 369]))                  
                :type ("var" type (:type "class") nil nil))
                nil [343 370])
            ("Table_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [389 394]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [371 395])
            ("Table_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [414 423])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [424 432]))                  
                :type "void")
                nil [396 433])
            ("Table_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [449 458]))                  
                :type ("var" type (:type "class") nil nil))
                nil [434 459])
            ("Table_Eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [474 483])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [484 492]))                  
                :type ("var" type (:type "class") nil nil))
                nil [461 493])
            ("Table_Len" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [509 518]))                  
                :type "int")
                nil [495 519])
            ("Table_Clear" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [537 546]))                  
                :type "void")
                nil [520 547])
            ("Table_Contains" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [567 576])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [577 585]))                  
                :type ("var" type (:type "class") nil nil))
                nil [548 586])
            ("Table_Discard" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [606 615])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [616 624]))                  
                :type "void")
                nil [587 625])
            ("Table_Get" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [641 650])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [651 659]))                  
                :type ("var" type (:type "class") nil nil))
                nil [627 660])
            ("Table_Put" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [676 685])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [686 694])
                    ("val" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [695 703]))                  
                :type "void")
                nil [661 704])
            ("Table_Iter_Start" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [727 736]))                  
                :type ("var" type (:type "class") nil nil))
                nil [706 737])
            ("Table_Iter_End" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [757 766]))                  
                :type ("var" type (:type "class") nil nil))
                nil [738 767])
            ("Table_Iter_Next" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [788 797])
                    ("curr" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [798 807]))                  
                :type ("var" type (:type "class") nil nil))
                nil [768 808])
            ("Table_Show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [825 834])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [835 846])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [847 855]))                  
                :type "int")
                nil [810 856]))          
    :file "Table.h"
    :pointmax 1316
    :fsize 1315
    :lastmodtime '(21376 45128 660965 755000)
    :unmatched-syntax '((punctuation 1304 . 1305) (semantic-list 1284 . 1304) (punctuation 1282 . 1283) (semantic-list 1268 . 1281) (symbol 1260 . 1268) (punctuation 1258 . 1259) (semantic-list 1205 . 1258) (punctuation 1203 . 1204) (semantic-list 1189 . 1202) (symbol 1181 . 1189) (punctuation 1179 . 1180) (semantic-list 1155 . 1179) (punctuation 1153 . 1154) (semantic-list 1139 . 1152) (symbol 1131 . 1139) (punctuation 1129 . 1130) (semantic-list 1072 . 1129) (punctuation 1070 . 1071) (semantic-list 1050 . 1069) (symbol 1042 . 1050) (punctuation 1040 . 1041) (semantic-list 1028 . 1040) (punctuation 1026 . 1027) (semantic-list 1014 . 1025) (symbol 1006 . 1014) (punctuation 1004 . 1005) (semantic-list 990 . 1004) (punctuation 988 . 989) (semantic-list 974 . 987) (symbol 966 . 974) (punctuation 964 . 965) (semantic-list 948 . 964) (punctuation 946 . 947) (semantic-list 930 . 945) (symbol 922 . 930) (punctuation 920 . 921) (semantic-list 881 . 920) (punctuation 879 . 880) (semantic-list 866 . 878) (symbol 858 . 866) (symbol 286 . 292))
    :lexical-table 
        '(("CelloTable_h")
          )

    )
   (semanticdb-table "Reference.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloReference_h" variable (:constant-flag t) nil [191 207])
            ("Prelude.h" include nil nil [209 229])
            ("Format.h" include nil nil [230 249])
            ("Reference" variable (:type ("var" type (:type "class") nil nil)) nil [258 272])
            ("ReferenceData" variable (:type "int") nil [306 320])
            ("Reference_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [340 349])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [350 362]))                  
                :type ("var" type (:type "class") nil nil))
                nil [322 363])
            ("Reference_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [385 394]))                  
                :type ("var" type (:type "class") nil nil))
                nil [364 395])
            ("Reference_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [418 423]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [396 424])
            ("Reference_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [447 456])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [457 465]))                  
                :type "void")
                nil [425 466])
            ("Reference_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [486 495]))                  
                :type ("var" type (:type "class") nil nil))
                nil [467 496])
            ("Reference_Eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [514 523])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [524 532]))                  
                :type ("var" type (:type "class") nil nil))
                nil [497 533])
            ("Reference_Hash" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [554 563]))                  
                :type "long")
                nil [534 564])
            ("Reference_At" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [582 591])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [592 598]))                  
                :type ("var" type (:type "class") nil nil))
                nil [565 599])
            ("Reference_Set" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [619 628])
                    ("i" variable (:type "int") (reparse-symbol arg-sub-list) [629 635])
                    ("x" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [636 642]))                  
                :type "void")
                nil [600 643])
            ("Reference_Exit" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [664 673]))                  
                :type "void")
                nil [644 674])
            ("Reference_Show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [695 704])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [705 716])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [717 725]))                  
                :type "int")
                nil [676 726]))          
    :file "Reference.h"
    :pointmax 1175
    :fsize 1174
    :lastmodtime '(21376 45128 659965 786000)
    :unmatched-syntax '((punctuation 1165 . 1166) (semantic-list 1141 . 1165) (punctuation 1139 . 1140) (semantic-list 1121 . 1138) (symbol 1113 . 1121) (punctuation 1111 . 1112) (semantic-list 1087 . 1111) (punctuation 1085 . 1086) (semantic-list 1067 . 1084) (symbol 1059 . 1067) (punctuation 1057 . 1058) (semantic-list 1026 . 1057) (punctuation 1024 . 1025) (semantic-list 1008 . 1023) (symbol 1000 . 1008) (punctuation 998 . 999) (semantic-list 980 . 998) (punctuation 978 . 979) (semantic-list 960 . 977) (symbol 952 . 960) (punctuation 950 . 951) (semantic-list 934 . 950) (punctuation 932 . 933) (semantic-list 916 . 931) (symbol 908 . 916) (punctuation 906 . 907) (semantic-list 888 . 906) (punctuation 886 . 887) (semantic-list 868 . 885) (symbol 860 . 868) (punctuation 858 . 859) (semantic-list 838 . 858) (punctuation 836 . 837) (semantic-list 816 . 835) (symbol 808 . 816) (punctuation 806 . 807) (semantic-list 755 . 806) (punctuation 753 . 754) (semantic-list 736 . 752) (symbol 728 . 736) (semantic-list 279 . 305) (symbol 274 . 278) (symbol 251 . 257))
    :lexical-table 
        '(("CelloReference_h")
          )

    )
   (semanticdb-table "String.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloString_h" variable (:constant-flag t) nil [82 95])
            ("Prelude.h" include nil nil [97 117])
            ("Type.h" include nil nil [118 135])
            ("Format.h" include nil nil [136 155])
            ("String" variable (:type ("var" type (:type "class") nil nil)) nil [164 175])
            ("StringData" variable (:type "int") nil [213 224])
            ("String_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [241 250])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [251 263]))                  
                :type ("var" type (:type "class") nil nil))
                nil [226 264])
            ("String_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [283 292]))                  
                :type ("var" type (:type "class") nil nil))
                nil [265 293])
            ("String_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [313 318]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [294 319])
            ("String_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [339 348])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [349 357]))                  
                :type "void")
                nil [320 358])
            ("String_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [375 384]))                  
                :type ("var" type (:type "class") nil nil))
                nil [359 385])
            ("String_Eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [401 410])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [411 419]))                  
                :type ("var" type (:type "class") nil nil))
                nil [387 420])
            ("String_Gt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [435 444])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [445 453]))                  
                :type ("var" type (:type "class") nil nil))
                nil [421 454])
            ("String_Lt" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [469 478])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [479 487]))                  
                :type ("var" type (:type "class") nil nil))
                nil [455 488])
            ("String_Len" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [505 514]))                  
                :type "int")
                nil [490 515])
            ("String_Clear" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [534 543]))                  
                :type "void")
                nil [516 544])
            ("String_Contains" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [565 574])
                    ("sub" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [575 583]))                  
                :type ("var" type (:type "class") nil nil))
                nil [545 584])
            ("String_Discard" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [605 614])
                    ("sub" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [615 623]))                  
                :type "void")
                nil [585 624])
            ("String_Hash" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [643 652]))                  
                :type "long")
                nil [626 653])
            ("String_AsStr" function
               (:prototype-flag t
                :pointer 1
                :constant-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [680 689]))                  
                :type "char")
                nil [655 690])
            ("String_Append" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [711 720])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [721 729]))                  
                :type "void")
                nil [692 730])
            ("String_Reverse" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [751 760]))                  
                :type "void")
                nil [731 761])
            ("String_Format_To" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [784 793])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [794 802])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [803 819])
                    ("va" variable (:type ("va_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [820 831]))                  
                :type "int")
                nil [763 832])
            ("String_Format_From" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [856 865])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [866 874])
                    ("fmt" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [875 891])
                    ("va" variable (:type ("va_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [892 903]))                  
                :type "int")
                nil [833 904])
            ("String_Show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [922 931])
                    ("out" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [932 940])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [941 949]))                  
                :type "int")
                nil [906 950])
            ("String_Look" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [967 976])
                    ("input" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [977 987])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [988 996]))                  
                :type "int")
                nil [951 997]))          
    :file "String.h"
    :pointmax 1649
    :fsize 1648
    :lastmodtime '(21376 45128 660965 755000)
    :unmatched-syntax '((punctuation 1639 . 1640) (semantic-list 1611 . 1639) (punctuation 1609 . 1610) (semantic-list 1594 . 1608) (symbol 1586 . 1594) (punctuation 1584 . 1585) (semantic-list 1544 . 1584) (punctuation 1542 . 1543) (semantic-list 1525 . 1541) (symbol 1517 . 1525) (punctuation 1515 . 1516) (semantic-list 1498 . 1515) (punctuation 1496 . 1497) (semantic-list 1479 . 1495) (symbol 1471 . 1479) (punctuation 1469 . 1470) (semantic-list 1453 . 1469) (punctuation 1451 . 1452) (semantic-list 1435 . 1450) (symbol 1427 . 1435) (punctuation 1425 . 1426) (semantic-list 1407 . 1425) (punctuation 1405 . 1406) (semantic-list 1387 . 1404) (symbol 1379 . 1387) (punctuation 1377 . 1378) (semantic-list 1362 . 1377) (punctuation 1360 . 1361) (semantic-list 1345 . 1359) (symbol 1337 . 1345) (punctuation 1335 . 1336) (semantic-list 1274 . 1335) (punctuation 1272 . 1273) (semantic-list 1251 . 1271) (symbol 1243 . 1251) (punctuation 1241 . 1242) (semantic-list 1217 . 1241) (punctuation 1215 . 1216) (semantic-list 1201 . 1214) (symbol 1193 . 1201) (punctuation 1191 . 1192) (semantic-list 1178 . 1191) (punctuation 1176 . 1177) (semantic-list 1163 . 1175) (symbol 1155 . 1163) (punctuation 1153 . 1154) (semantic-list 1138 . 1153) (punctuation 1136 . 1137) (semantic-list 1121 . 1135) (symbol 1113 . 1121) (punctuation 1111 . 1112) (semantic-list 1094 . 1111) (punctuation 1092 . 1093) (semantic-list 1075 . 1091) (symbol 1067 . 1075) (punctuation 1065 . 1066) (semantic-list 1023 . 1065) (punctuation 1021 . 1022) (semantic-list 1007 . 1020) (symbol 999 . 1007) (semantic-list 182 . 212) (symbol 177 . 181) (symbol 157 . 163))
    :lexical-table 
        '(("CelloString_h")
          )

    )
   (semanticdb-table "Tree.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloTree_h" variable (:constant-flag t) nil [229 240])
            ("Prelude.h" include nil nil [242 262])
            ("Type.h" include nil nil [263 280])
            ("Tree" variable (:type ("var" type (:type "class") nil nil)) nil [289 298])
            ("Tree_New" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [313 322])
                    ("vl" variable (:type ("var_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [323 335]))                  
                :type ("var" type (:type "class") nil nil))
                nil [300 336])
            ("Tree_Delete" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [353 362]))                  
                :type ("var" type (:type "class") nil nil))
                nil [337 363])
            ("Tree_Size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [381 386]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [364 387])
            ("Tree_Assign" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [406 415])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [416 424]))                  
                :type "void")
                nil [389 425])
            ("Tree_Copy" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [440 449]))                  
                :type ("var" type (:type "class") nil nil))
                nil [426 450])
            ("Tree_Eq" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [464 473])
                    ("obj" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [474 482]))                  
                :type ("var" type (:type "class") nil nil))
                nil [452 483])
            ("Tree_Len" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [498 507]))                  
                :type "int")
                nil [485 508])
            ("Tree_Clear" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [525 534]))                  
                :type "void")
                nil [509 535])
            ("Tree_Contains" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [554 563])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [564 572]))                  
                :type ("var" type (:type "class") nil nil))
                nil [536 573])
            ("Tree_Discard" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [592 601])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [602 610]))                  
                :type "void")
                nil [574 611])
            ("Tree_Get" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [626 635])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [636 644]))                  
                :type ("var" type (:type "class") nil nil))
                nil [613 645])
            ("Tree_Put" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [660 669])
                    ("key" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [670 678])
                    ("val" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [679 687]))                  
                :type "void")
                nil [646 688])
            ("Tree_Iter_Start" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [710 719]))                  
                :type ("var" type (:type "class") nil nil))
                nil [690 720])
            ("Tree_Iter_End" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [739 748]))                  
                :type ("var" type (:type "class") nil nil))
                nil [721 749])
            ("Tree_Iter_Next" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [769 778])
                    ("curr" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [779 788]))                  
                :type ("var" type (:type "class") nil nil))
                nil [750 789])
            ("Tree_Show" function
               (:prototype-flag t
                :arguments 
                  ( ("self" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [805 814])
                    ("output" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [815 826])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [827 835]))                  
                :type "int")
                nil [791 836]))          
    :file "Tree.h"
    :pointmax 1272
    :fsize 1271
    :lastmodtime '(21376 45128 660965 755000)
    :unmatched-syntax '((punctuation 1260 . 1261) (semantic-list 1241 . 1260) (punctuation 1239 . 1240) (semantic-list 1226 . 1238) (symbol 1218 . 1226) (punctuation 1216 . 1217) (semantic-list 1166 . 1216) (punctuation 1164 . 1165) (semantic-list 1151 . 1163) (symbol 1143 . 1151) (punctuation 1141 . 1142) (semantic-list 1119 . 1141) (punctuation 1117 . 1118) (semantic-list 1104 . 1116) (symbol 1096 . 1104) (punctuation 1094 . 1095) (semantic-list 1041 . 1094) (punctuation 1039 . 1040) (semantic-list 1020 . 1038) (symbol 1012 . 1020) (punctuation 1010 . 1011) (semantic-list 999 . 1010) (punctuation 997 . 998) (semantic-list 986 . 996) (symbol 978 . 986) (punctuation 976 . 977) (semantic-list 963 . 976) (punctuation 961 . 962) (semantic-list 948 . 960) (symbol 940 . 948) (punctuation 938 . 939) (semantic-list 923 . 938) (punctuation 921 . 922) (semantic-list 906 . 920) (symbol 898 . 906) (punctuation 896 . 897) (semantic-list 860 . 896) (punctuation 858 . 859) (semantic-list 846 . 857) (symbol 838 . 846) (symbol 282 . 288))
    :lexical-table 
        '(("CelloTree_h")
          )

    )
   (semanticdb-table "Value.h"
    :major-mode 'c-mode
    :tags 
        '( ("CelloValue_h" variable (:constant-flag t) nil [30 42])
            ("val" variable (:constant-flag t) nil [344 347]))          
    :file "Value.h"
    :pointmax 367
    :fsize 366
    :lastmodtime '(21376 45128 660965 755000)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("CelloValue_h")
          ("val" (spp-arg-list ("T") 347 . 350) . ((spp-symbol-merge ((symbol "T" 351 . 352) (symbol "Data" 354 . 358)) 351 . 358)))
          )

    )
   )
  :file "!home!chz!Projects!CWork!libCello!include!Cello!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
