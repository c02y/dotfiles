;; Object calendar/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "calendar/"
  :tables (list 
   (semanticdb-table "calendar.el.gz"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("load" code nil nil [5530 5557])
            ("calendar" package nil nil [5625 5644])
            ("cal-menu" include nil nil [5645 5664])
            ("calendar" customgroup (:user-visible-flag t) nil [5666 5776])
            ("calendar-hooks" customgroup (:user-visible-flag t) nil [5778 5868])
            ("calendar-faces" customgroup (:user-visible-flag t) nil [5870 5960])
            ("calendar-offset" variable nil nil [5962 6275])
            ("calendar-setup" variable nil nil [6277 7003])
            ("calendar-minimum-window-height" variable (:default-value 8) nil [7005 7181])
            ("calendar-split-width-threshold" variable nil nil [7214 7507])
            ("calendar-week-start-day" variable nil nil [7509 8250])
            ("define-obsolete-variable-alias" code nil nil [8252 8359])
            ("calendar-view-diary-initially-flag" variable nil nil [8361 8801])
            ("define-obsolete-variable-alias" code nil nil [8803 8910])
            ("calendar-mark-diary-entries-flag" variable nil nil [8926 9150])
            ("calendar-remove-frame-by-deleting" variable (:default-value t) nil [9152 9450])
            ("calendar-today" variable
               (:default-value (quote ((t (:underline t))))
                :type "face")
                nil [9452 9621])
            ("define-obsolete-face-alias" code nil nil [9623 9695])
            ("diary" variable
               (:default-value (quote ((((min-colors 88) (class color) (background light)) :foreground "red1") (((class color) (background light)) :foreground "red") (((min-colors 88) (class color) (background dark)) :foreground "yellow1") (((class color) (background dark)) :foreground "yellow") (t :weight bold)))
                :type "face")
                nil [9697 10223])
            ("define-obsolete-face-alias" code nil nil [10225 10279])
            ("holiday" variable
               (:default-value (quote ((((class color) (background light)) :background "pink") (((class color) (background dark)) :background "chocolate4") (t :inverse-video t)))
                :type "face")
                nil [10281 10586])
            ("define-obsolete-face-alias" code nil nil [10588 10646])
            ("diary-entry-marker" variable (:default-value (quote diary)) nil [11297 11552])
            ("calendar-today-marker" variable (:default-value (quote calendar-today)) nil [11554 11854])
            ("calendar-holiday-marker" variable (:default-value (quote holiday)) nil [11856 12121])
            ("define-obsolete-variable-alias" code nil nil [12123 12237])
            ("calendar-view-holidays-initially-flag" variable nil nil [12239 12487])
            ("define-obsolete-variable-alias" code nil nil [12489 12586])
            ("calendar-mark-holidays-flag" variable nil nil [12602 12821])
            ("calendar-mode-hook" variable nil nil [12823 12940])
            ("calendar-load-hook" variable nil nil [12942 13148])
            ("define-obsolete-variable-alias" code nil nil [13150 13251])
            ("calendar-initial-window-hook" variable nil nil [13253 13496])
            ("define-obsolete-variable-alias" code nil nil [13498 13597])
            ("calendar-today-visible-hook" variable nil nil [13599 14104])
            ("define-obsolete-variable-alias" code nil nil [14106 14209])
            ("calendar-today-invisible-hook" variable nil nil [14211 14406])
            ("calendar-move-hook" variable nil nil [14408 14739])
            ("calendar-date-echo-text" variable (:default-value "mouse-2: general menu
mouse-3: menu for this date") nil [14741 15803])
            ("calendar-month-digit-width" variable nil nil [15806 15913])
            ("calendar-month-width" variable nil nil [15915 15994])
            ("calendar-right-margin" variable nil nil [15996 16064])
            ("calendar-month-edges" variable nil nil [16066 16352])
            ("calendar-month-edges" function (:arguments ("segment")) nil [16354 17451])
            ("calendar-recompute-layout-variables" function nil nil [17453 18180])
            ("calendar-set-layout-variable" function (:arguments ("symbol" "value" "minmax")) nil [18215 18830])
            ("calendar-left-margin" variable (:default-value 5) nil [18832 19062])
            ("calendar-intermonth-spacing" variable (:default-value 4) nil [19234 19509])
            ("calendar-column-width" variable (:default-value 3) nil [19549 19803])
            ("calendar-day-header-width" variable (:default-value 2) nil [19805 20150])
            ("calendar-day-digit-width" variable (:default-value 2) nil [20189 20464])
            ("calendar-intermonth-header" variable nil nil [20466 21025])
            ("calendar-intermonth-text" variable nil nil [21027 22539])
            ("diary-file" variable (:default-value "~/diary") nil [22541 26445])
            ("diary-nonmarking-symbol" variable (:default-value "&") nil [26495 26644])
            ("define-obsolete-variable-alias" code nil nil [26646 26741])
            ("diary-hebrew-entry-symbol" variable (:default-value "H") nil [26743 26886])
            ("define-obsolete-variable-alias" code nil nil [26888 26985])
            ("diary-islamic-entry-symbol" variable (:default-value "I") nil [26987 27132])
            ("define-obsolete-variable-alias" code nil nil [27134 27227])
            ("diary-bahai-entry-symbol" variable (:default-value "B") nil [27229 27371])
            ("european-calendar-style" variable nil nil [27373 28167])
            ("make-obsolete-variable" code nil nil [28169 28246])
            ("calendar-date-style" variable (:default-value (if european-calendar-style (quote european) (quote american))) nil [28324 29328])
            ("diary-iso-date-forms" variable (:default-value (quote ((month "[-/]" day "[^-/0-9]") (year "[-/]" month "[-/]" day "[^0-9]") (monthname " *" day "[^-0-9]") (year " *" monthname " *" day "[^0-9]") (dayname "\\W")))) nil [29421 30593])
            ("define-obsolete-variable-alias" code nil nil [30595 30692])
            ("diary-american-date-forms" variable (:default-value (quote ((month "/" day "[^/0-9]") (month "/" day "/" year "[^0-9]") (monthname " *" day "[^,0-9]") (monthname " *" day ", *" year "[^0-9]") (dayname "\\W")))) nil [30694 31694])
            ("define-obsolete-variable-alias" code nil nil [31696 31793])
            ("diary-european-date-forms" variable (:default-value (quote ((day "/" month "[^/0-9]") (day "/" month "/" year "[^0-9]") (backup day " *" monthname "\\W+\\<\\([^*0-9]\\|\\([0-9]+[:aApP]\\)\\)") (day " *" monthname " *" year "[^0-9]") (dayname "\\W")))) nil [31795 32835])
            ("diary-font-lock-keywords" variable nil nil [32837 32870])
            ("diary-date-forms" variable (:default-value (cond ((eq calendar-date-style (quote iso)) diary-iso-date-forms) ((eq calendar-date-style (quote european)) diary-european-date-forms) (t diary-american-date-forms))) nil [32872 35915])
            ("calendar-iso-date-display-form" variable (:default-value (quote ((format "%s-%.2d-%.2d" year (string-to-number month) (string-to-number day))))) nil [35990 36414])
            ("define-obsolete-variable-alias" code nil nil [36416 36526])
            ("calendar-european-date-display-form" variable (:default-value (quote ((if dayname (concat dayname ", ")) day " " monthname " " year))) nil [36528 36837])
            ("define-obsolete-variable-alias" code nil nil [36839 36949])
            ("calendar-american-date-display-form" variable (:default-value (quote ((if dayname (concat dayname ", ")) monthname " " day ", " year))) nil [36951 37261])
            ("calendar-date-display-form" variable (:default-value (cond ((eq calendar-date-style (quote iso)) calendar-iso-date-display-form) ((eq calendar-date-style (quote european)) calendar-european-date-display-form) (t calendar-american-date-display-form))) nil [37263 38484])
            ("calendar-american-month-header" variable (:default-value (quote (propertize (format "%s %d" (calendar-month-name month) year) (quote font-lock-face) (quote font-lock-function-name-face)))) nil [38486 38863])
            ("calendar-european-month-header" variable (:default-value (quote (propertize (format "%s %d" (calendar-month-name month) year) (quote font-lock-face) (quote font-lock-function-name-face)))) nil [38865 39242])
            ("calendar-iso-month-header" variable (:default-value (quote (propertize (format "%d %s" year (calendar-month-name month)) (quote font-lock-face) (quote font-lock-function-name-face)))) nil [39244 39611])
            ("calendar-month-header" variable (:default-value (cond ((eq calendar-date-style (quote iso)) calendar-iso-month-header) ((eq calendar-date-style (quote european)) calendar-european-month-header) (t calendar-american-month-header))) nil [39613 40708])
            ("calendar-set-date-style" function
               (:user-visible-flag t
                :arguments ("style"))
                nil [40710 41624])
            ("european-calendar" function nil nil [41626 41833])
            ("american-calendar" function nil nil [41835 42042])
            ("define-obsolete-variable-alias" code nil nil [42044 42137])
            ("diary-show-holidays-flag" variable (:default-value t) nil [42139 42472])
            ("calendar-debug-sexp" variable nil nil [42474 42620])
            ("define-obsolete-variable-alias" code nil nil [42622 42728])
            ("calendar-hebrew-all-holidays-flag" variable nil nil [42730 43032])
            ("define-obsolete-variable-alias" code nil nil [43034 43146])
            ("calendar-christian-all-holidays-flag" variable nil nil [43148 43462])
            ("define-obsolete-variable-alias" code nil nil [43464 43572])
            ("calendar-islamic-all-holidays-flag" variable nil nil [43574 43880])
            ("define-obsolete-variable-alias" code nil nil [43882 43986])
            ("calendar-bahai-all-holidays-flag" variable nil nil [43988 44280])
            ("calendar-chinese-all-holidays-flag" variable nil nil [44282 44454])
            ("calendar-recompute-layout-variables" code nil nil [44482 44519])
            ("calendar-first-date-row" variable
               (:constant-flag t
                :default-value 3)
                nil [44521 44606])
            ("calendar-buffer" variable
               (:constant-flag t
                :default-value "*Calendar*")
                nil [44608 44693])
            ("holiday-buffer" variable
               (:constant-flag t
                :default-value "*Holidays*")
                nil [44695 44794])
            ("diary-fancy-buffer" variable
               (:constant-flag t
                :default-value "*Fancy Diary Entries*")
                nil [44796 44922])
            ("define-obsolete-variable-alias" code nil nil [44924 45003])
            ("calendar-other-calendars-buffer" variable
               (:constant-flag t
                :default-value "*Other Calendars*")
                nil [45005 45139])
            ("lunar-phases-buffer" variable
               (:constant-flag t
                :default-value "*Phases of Moon*")
                nil [45141 45240])
            ("solar-sunrises-buffer" variable
               (:constant-flag t
                :default-value "*Sunrise/Sunset Times*")
                nil [45242 45349])
            ("calendar-hebrew-yahrzeit-buffer" variable
               (:constant-flag t
                :default-value "*Yahrzeits*")
                nil [45351 45461])
            ("calendar-increment-month" function (:arguments ("mon" "yr" "n" "nmonths")) nil [45463 46390])
            ("define-obsolete-function-alias" code nil nil [46413 46506])
            ("displayed-month" variable nil nil [46508 46532])
            ("displayed-year" variable nil nil [46533 46556])
            ("calendar-increment-month-cons" function (:arguments ("n" "mon" "yr")) nil [46558 46902])
            ("calendar-for-loop" function (:arguments ("var" "from" "init" "to" "final" "do" "body")) nil [46904 47371])
            ("calendar-sum" function (:arguments ("index" "initial" "condition" "expression")) nil [47373 47702])
            ("calendar-in-read-only-buffer" function (:arguments ("buffer" "body")) nil [47704 48312])
            ("calendar-extract-month" function (:arguments ("date")) nil [49458 49583])
            ("define-obsolete-function-alias" code nil nil [49585 49674])
            ("calendar-extract-day" function (:arguments ("date")) nil [49798 49920])
            ("define-obsolete-function-alias" code nil nil [49922 50007])
            ("calendar-extract-year" function (:arguments ("date")) nil [50009 50134])
            ("define-obsolete-function-alias" code nil nil [50136 50223])
            ("calendar-leap-year-p" function (:arguments ("year")) nil [50225 50562])
            ("calendar-last-day-of-month" function (:arguments ("month" "year")) nil [50828 51039])
            ("calendar-day-number" function (:arguments ("date")) nil [51178 51775])
            ("calendar-absolute-from-gregorian" function (:arguments ("date")) nil [51777 53006])
            ("calendar" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [53043 54949])
            ("calendar-basic-setup" function
               (:user-visible-flag t
                :arguments ("arg" "nodisplay"))
                nil [54951 58497])
            ("calendar-generate-window" function (:arguments ("mon" "yr")) nil [58499 60292])
            ("calendar-generate" function (:arguments ("month" "year")) nil [60294 61109])
            ("calendar-move-to-column" function (:arguments ("indent")) nil [61111 61283])
            ("calendar-ensure-newline" function nil nil [61285 61429])
            ("calendar-insert-at-column" function (:arguments ("indent" "string" "truncate")) nil [61431 62720])
            ("calendar-generate-month" function (:arguments ("month" "year" "indent")) nil [62722 65307])
            ("calendar-redraw" function (:user-visible-flag t) nil [65309 65682])
            ("calendar-mode-map" variable (:default-value (let ((map (make-keymap))) (suppress-keymap map) (dolist (c (quote (narrow-to-region mark-word mark-sexp mark-paragraph mark-defun mark-whole-buffer mark-page downcase-region upcase-region kill-region copy-region-as-kill capitalize-region write-region))) (define-key map (vector (quote remap) c) (quote calendar-not-implemented))) (define-key map "<" (quote calendar-scroll-right)) (define-key map "<" (quote calendar-scroll-right)) (define-key map [prior] (quote calendar-scroll-right-three-months)) (define-key map "v" (quote calendar-scroll-right-three-months)) (define-key map ">" (quote calendar-scroll-left)) (define-key map ">" (quote calendar-scroll-left)) (define-key map [next] (quote calendar-scroll-left-three-months)) (define-key map "" (quote calendar-scroll-left-three-months)) (define-key map "" (quote calendar-backward-day)) (define-key map "" (quote calendar-backward-week)) (define-key map "{" (quote calendar-backward-month)) (define-key map "[" (quote calendar-backward-year)) (define-key map "" (quote calendar-forward-day)) (define-key map "" (quote calendar-forward-week)) (define-key map [left] (quote calendar-backward-day)) (define-key map [up] (quote calendar-backward-week)) (define-key map [right] (quote calendar-forward-day)) (define-key map [down] (quote calendar-forward-week)) (define-key map "}" (quote calendar-forward-month)) (define-key map "]" (quote calendar-forward-year)) (define-key map "" (quote calendar-beginning-of-week)) (define-key map "" (quote calendar-end-of-week)) (define-key map "a" (quote calendar-beginning-of-month)) (define-key map "e" (quote calendar-end-of-month)) (define-key map "<" (quote calendar-beginning-of-year)) (define-key map ">" (quote calendar-end-of-year)) (define-key map " " (quote calendar-set-mark)) (define-key map [67108896] (quote calendar-set-mark)) (define-key map "" (quote calendar-exchange-point-and-mark)) (define-key map "=" (quote calendar-count-days-region)) (define-key map "gd" (quote calendar-goto-date)) (define-key map "gD" (quote calendar-goto-day-of-year)) (define-key map "gj" (quote calendar-julian-goto-date)) (define-key map "ga" (quote calendar-astro-goto-day-number)) (define-key map "gh" (quote calendar-hebrew-goto-date)) (define-key map "gi" (quote calendar-islamic-goto-date)) (define-key map "gb" (quote calendar-bahai-goto-date)) (define-key map "gC" (quote calendar-chinese-goto-date)) (define-key map "gk" (quote calendar-coptic-goto-date)) (define-key map "ge" (quote calendar-ethiopic-goto-date)) (define-key map "gp" (quote calendar-persian-goto-date)) (define-key map "gc" (quote calendar-iso-goto-date)) (define-key map "gw" (quote calendar-iso-goto-week)) (define-key map "gf" (quote calendar-french-goto-date)) (define-key map "gml" (quote calendar-mayan-goto-long-count-date)) (define-key map "gmpc" (quote calendar-mayan-previous-round-date)) (define-key map "gmnc" (quote calendar-mayan-next-round-date)) (define-key map "gmph" (quote calendar-mayan-previous-haab-date)) (define-key map "gmnh" (quote calendar-mayan-next-haab-date)) (define-key map "gmpt" (quote calendar-mayan-previous-tzolkin-date)) (define-key map "gmnt" (quote calendar-mayan-next-tzolkin-date)) (define-key map "Aa" (quote appt-add)) (define-key map "Ad" (quote appt-delete)) (define-key map "S" (quote calendar-sunrise-sunset)) (define-key map "M" (quote calendar-lunar-phases)) (define-key map " " (quote scroll-other-window)) (define-key map "" (quote scroll-other-window-down)) (define-key map "" (quote calendar-redraw)) (define-key map "." (quote calendar-goto-today)) (define-key map "o" (quote calendar-other-month)) (define-key map "q" (quote calendar-exit)) (define-key map "a" (quote calendar-list-holidays)) (define-key map "h" (quote calendar-cursor-holidays)) (define-key map "x" (quote calendar-mark-holidays)) (define-key map "u" (quote calendar-unmark)) (define-key map "m" (quote diary-mark-entries)) (define-key map "d" (quote diary-view-entries)) (define-key map "D" (quote diary-view-other-diary-entries)) (define-key map "s" (quote diary-show-all-entries)) (define-key map "pd" (quote calendar-print-day-of-year)) (define-key map "pC" (quote calendar-chinese-print-date)) (define-key map "pk" (quote calendar-coptic-print-date)) (define-key map "pe" (quote calendar-ethiopic-print-date)) (define-key map "pp" (quote calendar-persian-print-date)) (define-key map "pc" (quote calendar-iso-print-date)) (define-key map "pj" (quote calendar-julian-print-date)) (define-key map "pa" (quote calendar-astro-print-day-number)) (define-key map "ph" (quote calendar-hebrew-print-date)) (define-key map "pi" (quote calendar-islamic-print-date)) (define-key map "pb" (quote calendar-bahai-print-date)) (define-key map "pf" (quote calendar-french-print-date)) (define-key map "pm" (quote calendar-mayan-print-date)) (define-key map "po" (quote calendar-print-other-dates)) (define-key map "id" (quote diary-insert-entry)) (define-key map "iw" (quote diary-insert-weekly-entry)) (define-key map "im" (quote diary-insert-monthly-entry)) (define-key map "iy" (quote diary-insert-yearly-entry)) (define-key map "ia" (quote diary-insert-anniversary-entry)) (define-key map "ib" (quote diary-insert-block-entry)) (define-key map "ic" (quote diary-insert-cyclic-entry)) (define-key map "ihd" (quote diary-hebrew-insert-entry)) (define-key map "ihm" (quote diary-hebrew-insert-monthly-entry)) (define-key map "ihy" (quote diary-hebrew-insert-yearly-entry)) (define-key map "iid" (quote diary-islamic-insert-entry)) (define-key map "iim" (quote diary-islamic-insert-monthly-entry)) (define-key map "iiy" (quote diary-islamic-insert-yearly-entry)) (define-key map "iBd" (quote diary-bahai-insert-entry)) (define-key map "iBm" (quote diary-bahai-insert-monthly-entry)) (define-key map "iBy" (quote diary-bahai-insert-yearly-entry)) (define-key map "?" (quote calendar-goto-info-node)) (define-key map "Hm" (quote cal-html-cursor-month)) (define-key map "Hy" (quote cal-html-cursor-year)) (define-key map "tm" (quote cal-tex-cursor-month)) (define-key map "tM" (quote cal-tex-cursor-month-landscape)) (define-key map "td" (quote cal-tex-cursor-day)) (define-key map "tw1" (quote cal-tex-cursor-week)) (define-key map "tw2" (quote cal-tex-cursor-week2)) (define-key map "tw3" (quote cal-tex-cursor-week-iso)) (define-key map "tw4" (quote cal-tex-cursor-week-monday)) (define-key map "twW" (quote cal-tex-cursor-week2-summary)) (define-key map "tfd" (quote cal-tex-cursor-filofax-daily)) (define-key map "tfw" (quote cal-tex-cursor-filofax-2week)) (define-key map "tfW" (quote cal-tex-cursor-filofax-week)) (define-key map "tfy" (quote cal-tex-cursor-filofax-year)) (define-key map "ty" (quote cal-tex-cursor-year)) (define-key map "tY" (quote cal-tex-cursor-year-landscape)) (define-key map [menu-bar edit] (quote undefined)) (define-key map [menu-bar search] (quote undefined)) (easy-menu-define nil map nil cal-menu-sunmoon-menu) (easy-menu-define nil map nil cal-menu-diary-menu) (easy-menu-define nil map nil cal-menu-holidays-menu) (easy-menu-define nil map nil cal-menu-goto-menu) (easy-menu-define nil map nil cal-menu-scroll-menu) (define-key map [down-mouse-3] (easy-menu-binding cal-menu-context-mouse-menu)) (define-key map [down-mouse-2] (easy-menu-binding cal-menu-global-mouse-menu)) (if (and (boundp (quote x-toolkit-scroll-bars)) x-toolkit-scroll-bars) (define-key map [vertical-scroll-bar mouse-1] (quote calendar-scroll-toolkit-scroll)) (define-key map [vertical-scroll-bar mouse-1] (quote calendar-scroll-left)) (define-key map [vertical-scroll-bar drag-mouse-1] (quote calendar-scroll-left)) (define-key map [vertical-scroll-bar mouse-3] (quote calendar-scroll-right)) (define-key map [vertical-scroll-bar drag-mouse-3] (quote calendar-scroll-right))) map)) nil [65684 73742])
            ("put" code nil nil [73808 73849])
            ("calendar-mode-line-entry" function (:arguments ("command" "echo" "key" "string")) nil [73851 74410])
            ("calendar-mode-line-format" variable (:default-value (list (calendar-mode-line-entry (quote calendar-scroll-right) "previous month" "<") "Calendar" (concat (calendar-mode-line-entry (quote calendar-goto-info-node) "read Info on Calendar" nil "info") " / " (calendar-mode-line-entry (quote calendar-other-month) "choose another month" nil "other") " / " (calendar-mode-line-entry (quote calendar-goto-today) "go to today's date" nil "today")) (quote (calendar-date-string (calendar-current-date) t)) (calendar-mode-line-entry (quote calendar-scroll-left) "next month" ">"))) nil [74440 76146])
            ("calendar-goto-info-node" function (:user-visible-flag t) nil [76148 76298])
            ("calendar-mark-ring" variable nil nil [76300 76364])
            ("define-derived-mode" code nil nil [76366 77351])
            ("calendar-string-spread" function (:arguments ("strings" "char" "length")) nil [77353 78548])
            ("calendar-update-mode-line" function nil nil [78550 79412])
            ("calendar-buffer-list" function nil nil [79414 79875])
            ("calendar-exit" function
               (:user-visible-flag t
                :arguments ("kill"))
                nil [79877 80866])
            ("define-obsolete-function-alias" code nil nil [80868 80937])
            ("calendar-current-date" function (:arguments ("offset")) nil [80939 81340])
            ("calendar-column-to-segment" function nil nil [81342 81719])
            ("calendar-cursor-to-date" function (:arguments ("error" "event")) nil [81721 83307])
            ("calendar-gregorian-from-absolute" function (:arguments ("date")) nil [84503 85656])
            ("calendar-other-month" function
               (:user-visible-flag t
                :arguments ("month" "year" "event"))
                nil [85658 86504])
            ("calendar-set-mark" function
               (:user-visible-flag t
                :arguments ("arg" "event"))
                nil [86506 87494])
            ("calendar-exchange-point-and-mark" function (:user-visible-flag t) nil [87496 87870])
            ("calendar-count-days-region" function (:user-visible-flag t) nil [87872 88400])
            ("calendar-not-implemented" function (:user-visible-flag t) nil [88402 88569])
            ("calendar-read" function (:arguments ("prompt" "acceptable" "initial-contents")) nil [88571 89070])
            ("calendar-customized-p" function (:arguments ("symbol")) nil [89073 89345])
            ("calendar-abbrev-construct" function (:arguments ("full")) nil [89347 89675])
            ("calendar-day-name-array" variable (:default-value ["Sunday" "Monday" "Tuesday" "Wednesday" "Thursday" "Friday" "Saturday"]) nil [89677 90978])
            ("calendar-abbrev-length" variable (:default-value 3) nil [90980 92129])
            ("calendar-day-abbrev-array" variable (:default-value (calendar-abbrev-construct calendar-day-name-array)) nil [92131 93445])
            ("calendar-month-name-array" variable (:default-value ["January" "February" "March" "April" "May" "June" "July" "August" "September" "October" "November" "December"]) nil [93447 94692])
            ("calendar-month-abbrev-array" variable (:default-value (calendar-abbrev-construct calendar-month-name-array)) nil [94694 95863])
            ("calendar-make-alist" function (:arguments ("sequence" "start-index" "filter" "sequences")) nil [95865 96820])
            ("calendar-read-date" function (:arguments ("noday")) nil [96822 97971])
            ("calendar-interval" function (:arguments ("mon1" "yr1" "mon2" "yr2")) nil [97973 98368])
            ("calendar-font-lock-keywords" variable (:default-value (\` (((\, (concat (regexp-opt (mapcar (quote identity) calendar-month-name-array) t) " -?[0-9]+")) . font-lock-function-name-face) ((\, (regexp-opt (list (substring (aref calendar-day-name-array 6) 0 calendar-day-header-width) (substring (aref calendar-day-name-array 0) 0 calendar-day-header-width)))) . font-lock-comment-face) ((\, (regexp-opt (mapcar (lambda (x) (substring x 0 calendar-day-header-width)) calendar-day-name-array))) . font-lock-constant-face)))) nil [98370 99312])
            ("calendar-day-name" function (:arguments ("date" "abbrev" "absolute")) nil [99314 99944])
            ("calendar-month-name" function (:arguments ("month" "abbrev")) nil [99946 100350])
            ("calendar-day-of-week" function (:arguments ("date")) nil [100352 100626])
            ("calendar-week-end-day" function nil nil [100628 100771])
            ("calendar-unmark" function (:user-visible-flag t) nil [100773 101073])
            ("calendar-date-is-visible-p" function (:arguments ("date")) nil [101075 101402])
            ("calendar-nongregorian-visible-p" function (:arguments ("month" "day" "toabs" "fromabs" "switch")) nil [101458 103450])
            ("calendar-date-is-valid-p" function (:arguments ("date")) nil [103452 104279])
            ("define-obsolete-function-alias" code nil nil [104281 104376])
            ("calendar-date-equal" function (:arguments ("date1" "date2")) nil [104378 104678])
            ("calendar-make-temp-face" function (:arguments ("attrlist")) nil [104680 106060])
            ("calendar-mark-visible-date" function (:arguments ("date" "mark")) nil [106062 107570])
            ("define-obsolete-function-alias" code nil nil [107572 107669])
            ("calendar-star-date" function nil nil [107671 108481])
            ("calendar-mark-today" function nil nil [108483 108771])
            ("calendar-date-compare" function (:arguments ("date1" "date2")) nil [108838 109092])
            ("calendar-date-string" function (:arguments ("date" "abbreviate" "nodayname")) nil [109094 109914])
            ("calendar-dayname-on-or-before" function (:arguments ("dayname" "date")) nil [109916 110433])
            ("calendar-nth-named-absday" function (:arguments ("n" "dayname" "month" "year" "day")) nil [110435 111236])
            ("calendar-nth-named-day" function (:arguments ("n" "dayname" "month" "year" "day")) nil [111238 111519])
            ("calendar-day-of-year-string" function (:arguments ("date")) nil [111521 112005])
            ("calendar-other-dates" function (:arguments ("date")) nil [112007 113944])
            ("declare-function" code nil nil [113946 114002])
            ("calendar-print-other-dates" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [114004 114761])
            ("calendar-print-day-of-year" function (:user-visible-flag t) nil [114763 114969])
            ("calendar-set-mode-line" function (:arguments ("str")) nil [114971 115695])
            ("define-obsolete-function-alias" code nil nil [115697 115769])
            ("run-hooks" code nil nil [115771 115802])
            ("calendar" package nil nil [115804 115823]))          
    :file "calendar.el.gz"
    :pointmax 115924
    :fsize 29614
    :lastmodtime '(20707 18685 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!usr!share!emacs!24.3!lisp!calendar!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
