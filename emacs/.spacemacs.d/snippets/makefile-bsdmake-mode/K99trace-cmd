;; Object Recentchange/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Recentchange/"
  :tables (list 
   (semanticdb-table "axelget.py"
    :major-mode 'python-mode
    :tags 
        '( ("os" include nil nil [1109 1145])
            ("sys" include nil nil [1109 1145])
            ("time" include nil nil [1109 1145])
            ("datetime" include nil nil [1109 1145])
            ("glob" include nil nil [1109 1145])
            ("yum" include nil nil [1146 1156])
            ("yum.plugins" include nil nil [1157 1223])
            ("requires_api_version" variable nil nil [1225 1253])
            ("plugin_type" variable nil nil [1254 1280])
            ("enablesize" variable nil nil [1282 1299])
            ("trymirrornum" code nil nil [1300 1315])
            ("maxconn" variable nil nil [1316 1325])
            ("httpdownloadonly" variable nil nil [1326 1348])
            ("cleanOnException" variable nil nil [1349 1367])
            ("is_plugin_exists" function
               (:documentation "
    Check whether a plugin is installed.
    "
                :arguments 
                  ( ("name" variable nil (reparse-symbol function_parameters) [1391 1395]))                  )
                nil [1370 1620])
            ("download_drpm" function
               (:documentation "
    Download delta rpm.
    "
                :arguments 
                  ( ("conduit" variable nil (reparse-symbol function_parameters) [1639 1646]))                  )
                nil [1621 3340])
            ("get_fastest_mirror" function (:arguments 
              ( ("mirrors" variable nil (reparse-symbol function_parameters) [3364 3371]))              ) nil [3341 3771])
            ("get_metadata_list" function
               (:documentation "Parser repomd.xml file and return metadata url list"
                :arguments 
                  ( ("repo" variable nil (reparse-symbol function_parameters) [3794 3798])
                    ("repomd" variable nil (reparse-symbol function_parameters) [3800 3806])
                    ("localFlag" variable nil (reparse-symbol function_parameters) [3808 3817]))                  )
                nil [3772 5898])
            ("init_hook" function (:arguments 
              ( ("conduit" variable nil (reparse-symbol function_parameters) [5913 5920]))              ) nil [5899 6378])
            ("postreposetup_hook" function (:arguments 
              ( ("conduit" variable nil (reparse-symbol function_parameters) [6402 6409]))              ) nil [6379 9412])
            ("predownload_hook" function (:arguments 
              ( ("conduit" variable nil (reparse-symbol function_parameters) [9434 9441]))              ) nil [9413 13426])
            ("if" code nil nil [13428 14402]))          
    :file "axelget.py"
    :pointmax 14402
    :fsize 14401
    :lastmodtime '(21309 2608 156251 649000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "Results - FEBE 2014 11-09 23.00.21.html"
    :major-mode 'html-mode
    :tags 
        '( ("FEBE Results" section nil nil [96 3650])
            ("// This page must be able to be viewed off-line, therefore it does not have any dependencies (external script or css files).  All are include here.
function buildTooltips(){
	// Add event listeners to create and remove tooltips
	let elements = document.getElementsByClassName('itemname');
	for (let i = 0; i < elements.length; i++) {
		let item = elements[i];
		let rawdata = item.getAttribute(\"data-tooltipdata\")
		let data = decodeURI(rawdata);
		try{
			let obj = JSON.parse(data);
			item.addEventListener('mouseover', function(event) {makeTT(event,obj)},false);
			item.addEventListener('mouseout', function(event) {deleteTT()},false);
		}catch(err){
			continue;
		}
	}
	return
}

function makeTT(event,obj){
	// Create the tooltip
	if(obj == null) return true;
	let iconData = obj.icon;
	let authorLabel = obj.author.label;
	let authorDesc = obj.author.name;
	let idLabel = obj.id.label;
	let idDesc = obj.id.guid;
	let sizeLabel = obj.size.label;
	let sizeDesc = obj.size.data;
	let installdateLabel = obj.installDate.label;
	let installdateDesc = obj.installDate.date;
	let statusLabel = obj.status.label;
	let statusDesc = obj.status.text;

	var div = document.createElement(\"div\");
	var table = document.createElement(\"table\");
	var tbody = document.createElement(\"tbody\");
	var oRow = document.createElement(\"tr\");
	var oCell = document.createElement(\"td\");
	var img = document.createElement(\"img\");
	var cellStyle = \"position:relative; top:0px;\";
	var cellClassField = \"TTfield\";
	var cellClassDesc = \"TTdesc\";

	// Setup the table
	table.setAttribute(\"style\",\"text-align: left;\");
	table.setAttribute(\"border\",\"0\");
	table.setAttribute(\"cellpadding\",\"2\");
  table.setAttribute(\"cellspacing\",\"2\");
	
	// Create the image cell
	var row = oRow.cloneNode(false);
	var cell = oCell.cloneNode(false);
	cell.setAttribute(\"rowspan\", \"5\");
	cell.setAttribute(\"style\",cellStyle);
	img.src = iconData;
	cell.appendChild(img);
	row.appendChild(cell);
	
	// Author
	var cell = oCell.cloneNode(false);
	var txt = document.createTextNode(authorLabel);
	cell.setAttribute(\"style\",cellStyle);
	cell.className = cellClassField;
	cell.appendChild(txt);
	row.appendChild(cell);
	
	var cell = oCell.cloneNode(false);
	var txt = document.createTextNode(authorDesc);
	cell.setAttribute(\"style\",cellStyle);
	cell.className = cellClassDesc;
	cell.appendChild(txt);
	row.appendChild(cell);
	table.appendChild(row);

	// ID
	var row = oRow.cloneNode(false);
	var cell = oCell.cloneNode(false);
	var txt = document.createTextNode(idLabel);
	cell.setAttribute(\"style\",cellStyle);
	cell.className = cellClassField;
	cell.appendChild(txt);
	row.appendChild(cell);
	
	var cell = oCell.cloneNode(false);
	var txt = document.createTextNode(idDesc);
	cell.setAttribute(\"style\",cellStyle);
	cell.className = cellClassDesc;
	cell.appendChild(txt);
	row.appendChild(cell);
	table.appendChild(row);

	// Size
	var row = oRow.cloneNode(false);
	var cell = oCell.cloneNode(false);
	var txt = document.createTextNode(sizeLabel);
	cell.setAttribute(\"style\",cellStyle);
	cell.className = cellClassField;
	cell.appendChild(txt);
	row.appendChild(cell);
	
	var cell = oCell.cloneNode(false);
	var txt = document.createTextNode(sizeDesc);
	cell.setAttribute(\"style\",cellStyle);
	cell.className = cellClassDesc;
	cell.appendChild(txt);
	row.appendChild(cell);
	table.appendChild(row);

	// Install date
	var row = oRow.cloneNode(false);
	var cell = oCell.cloneNode(false);
	var txt = document.createTextNode(installdateLabel);
	cell.setAttribute(\"style\",cellStyle);
	cell.className = cellClassField;
	cell.appendChild(txt);
	row.appendChild(cell);
	
	var cell = oCell.cloneNode(false);
	var txt = document.createTextNode(installdateDesc);
	cell.setAttribute(\"style\",cellStyle);
	cell.className = cellClassDesc;
	cell.appendChild(txt);
	row.appendChild(cell);
	table.appendChild(row);
	
	// Status (enabled, disabled)
	var row = oRow.cloneNode(false);
	var cell = oCell.cloneNode(false);
	var txt = document.createTextNode(statusLabel);
	cell.setAttribute(\"style\",cellStyle);
	cell.className = cellClassField;
	cell.appendChild(txt);
	row.appendChild(cell);
	
	var cell = oCell.cloneNode(false);
	var txt = document.createTextNode(statusDesc);
	cell.setAttribute(\"style\",cellStyle);
	cell.className = cellClassDesc;
	cell.appendChild(txt);
	row.appendChild(cell);
	table.appendChild(row);

	// Make the div
	div.id = \"ttDiv\";
	div.className = \"tooltip\";
	div.style.left = event.pageX+\"px\";
	div.style.top = event.pageY+\"px\";
	div.style.visibility = \"visible\";
	div.appendChild(table);
	document.body.appendChild(div);
	return true;
}

function deleteTT(){
	// Remove the tooltip
	var div = document.getElementById(\"ttDiv\");
	if(!!div) div.parentNode.removeChild(div);
	return true;
}" section nil nil [3650 8470])
            ("FEBE Results Report" section (:members 
              ( ("/home/chz/Recentchange" anchor nil nil [14852 14855])
                ("FEBE homepage." anchor nil nil [19512 19515])
                ("%linkmsg%" anchor nil nil [19891 19894]))              ) nil [8470 19981]))          
    :file "Results - FEBE 2014 11-09 23.00.21.html"
    :pointmax 19981
    :fsize 19984
    :lastmodtime '(21599 33181 913449 376000)
    :unmatched-syntax 'nil
    )
   )
  :file "!home!chz!Recentchange!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
