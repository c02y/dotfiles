# sync this file with `lazygit -c > /tmp/config.yml` which is the default config
gui:
    authorColors: {}
    branchColors: {}
    scrollHeight: 2
    scrollPastBottom: false
    scrollOffMargin: 2
    scrollOffBehavior: margin
    mouseEvents: true
    skipDiscardChangeWarning: false
    skipStashWarning: false
    skipNoStagedFilesWarning: false
    skipRewordInEditorWarning: false
    sidePanelWidth: 0.3333 # float number from 0 to 1
    expandFocusedSidePanel: false
    mainPanelSplitMode: vertical # horizontal/flexible/vertical
    enlargedSideViewLocation: left
    language: auto # auto/en/zh/pl/nl
    timeFormat: 2006-01-02 15:04
    shortTimeFormat: 03:04
    theme:
        activeBorderColor:
            - green
            - bold
        inactiveBorderColor:
            - default
        searchingActiveBorderColor:
            - cyan
            - bold
        optionsTextColor:
            - blue
        selectedLineBgColor:
            - blue
        inactiveViewSelectedLineBgColor:
            - bold
        cherryPickedCommitFgColor:
            - blue
        cherryPickedCommitBgColor:
            - cyan
        markedBaseCommitFgColor:
            - blue
        markedBaseCommitBgColor:
            - yellow
        unstagedChangesColor:
            - red
        defaultFgColor:
            - default
    commitLength:
        show: true
    showListFooter: true # for seeing the '5 of 20' message in list panels
    showFileTree: false # for rendering changes files in a tree format
    showRandomTip: true
    showCommandLog: true
    showBottomLine: false # for hiding the bottom information line (unless it is important)
    showPanelJumps: true
    showIcons: false
    nerdFontsVersion: ""
    showFileIcons: true
    commitAuthorShortLength: 2
    commitAuthorLongLength: 17
    commitHashLength: 7 # 7 is the commit hash lenght of github commits list
    showBranchCommitHash: false
    showDivergenceFromBaseBranch: none
    commandLogSize: 8
    splitDiff: auto
    screenMode: normal # default layout, normal/half/full
    border: single # single/double/rounded/hidden
    animateExplosion: true
    portraitMode: auto
    filterMode: substring
    spinner:
    frames:
        - "|"
        - /
        - "-"
        - \
    rate: 50
    statusPanelView: dashboard
    switchToFilesAfterStashPop: true
    switchToFilesAfterStashApply: true
git:
    paging:
        colorArg: always
        #pager: delta --dark --paging=never --true-color=never --line-numbers
        pager: delta --paging=never --line-numbers --hyperlinks --hyperlinks-file-link-format="lazygit-edit://{path}:{line}"
        # useConfig: false
        # externalDiffCommand: difft --color=always --display=inline --syntax-highlight=off
    commit:
        signOff: false
        autoWrapCommitMessage: true
        autoWrapWidth: 72
    merging:
        # only applicable to unix users
        manualCommit: false
        # extra args passed to `git merge`, e.g. --no-ff
        args: ""
        squashMergeMessage: Squash merge {{selectedRef}} into {{currentBranch}}
    mainBranches:
        - master
        - main
    skipHookPrefix: WIP
    autoFetch: true
    autoRefresh: true
    fetchAll: true
    autoStageResolvedConflicts: true
    branchLogCmd: git log --graph --color=always --abbrev-commit --decorate --date=format:%F\ %T --pretty=medium {{branchName}} --
    allBranchesLogCmd: git log --graph --all --color=always --abbrev-commit --decorate --date=format:%F\ %T  --pretty=medium
    allBranchesLogCmds: []
    overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
    disableForcePushing: false
    commitPrefix: null
    commitPrefixes: {}
    branchPrefix: ""
    parseEmoji: false
    log:
        order: topo-order # date-order/author-date-order/topo-order
        showGraph: when-maximised # always/never/when-maximised
        showWholeGraph: false
    truncateCopiedCommitHashesTo: 12
update:
    method: never # prompt/background/never
    days: 14
refresher:
    refreshInterval: 10 # File/submodule refresh interval in seconds. Auto-refresh can be disabled via option 'git.autoRefresh'.
    fetchInterval: 60 # Re-fetch interval in seconds. Auto-fetch can be disabled via option 'git.autoFetch'.
confirmOnQuit: false
# determines whether hitting 'esc' will quit the application when there is nothing to cancel/close
quitOnTopLevelReturn: false
disableStartupPopups: false
# TODO: test
customCommands:
    - key: "G"
      prompts:
        - type: "menu"
          title: "undo the last unpushed commit"
          options:
            - name: "soft reset"
              description: "keeps changes"
              value: "soft"
            - name: "hard reset"
              description: "discard changes"
              value: "hard"
      command: "git reset --{{index .PromptResponses 0}} HEAD~1"
      context: "global"
      loadingText: "reset last unpushed commit"
    - key: "A"
      command: "git commit --amend"
      context: "files"
      subprocess: true
services: {}
notARepository: prompt # prompt/create/skip
promptToReturnFromSubprocess: false # display confirmation when subprocess terminates
keybinding:
    universal:
        quit: q
        quit-alt1: <c-c>
        return: <esc>
        quitWithoutChangingDirectory: Q
        togglePanel: <tab>
        prevItem: <up>
        nextItem: <down>
        prevItem-alt: k
        nextItem-alt: j
        prevPage: ","
        nextPage: .
        scrollLeft: H
        scrollRight: L
        gotoTop: <
        gotoBottom: ">"
        toggleRangeSelect: v
        rangeSelectDown: <s-down>
        rangeSelectUp: <s-up>
        prevBlock: <left>
        nextBlock: <right>
        prevBlock-alt: h
        nextBlock-alt: l
        nextBlock-alt2: <tab>
        prevBlock-alt2: <backtab>
        jumpToBlock:
            - "1"
            - "2"
            - "3"
            - "4"
            - "5"
        nextMatch: "n"
        prevMatch: "N"
        startSearch: /
        optionMenu: <disabled> # show help menu
        optionMenu-alt1: "?"
        select: <space>
        goInto: <enter>
        confirm: <enter>
        confirmInEditor: <a-enter>
        remove: d
        new: "n"
        edit: e
        openFile: o
        scrollUpMain: <pgup>
        scrollDownMain: <pgdown>
        scrollUpMain-alt1: K
        scrollDownMain-alt1: J
        scrollUpMain-alt2: <c-u>
        scrollDownMain-alt2: <c-d>
        executeShellCommand: ":"
        createRebaseOptionsMenu: m
        pushFiles: P
        pullFiles: p
        refresh: R
        createPatchOptionsMenu: <c-p>
        nextTab: "]"
        prevTab: "["
        nextScreenMode: +
        prevScreenMode: _
        undo: z
        redo: <c-z>
        filteringMenu: <c-s>
        diffingMenu: W
        diffingMenu-alt: <c-e>
        copyToClipboard: <c-o>
        openRecentRepos: <c-r>
        submitEditorText: <enter>
        extrasMenu: "@"
        toggleWhitespaceInDiffView: <c-w>
        increaseContextInDiffView: "}"
        decreaseContextInDiffView: "{"
        increaseRenameSimilarityThreshold: )
        decreaseRenameSimilarityThreshold: (
        openDiffTool: <c-t>
    status:
        checkForUpdate: u
        recentRepos: <enter>
        allBranchesLogGraph: a
    files:
        commitChanges: c
        commitChangesWithoutHook: w
        amendLastCommit: A
        commitChangesWithEditor: C
        findBaseCommitForFixup: <c-f>
        confirmDiscard: x
        ignoreFile: i
        refreshFiles: r
        stashAllChanges: s
        viewStashOptions: S
        toggleStagedAll: a
        viewResetOptions: D
        fetch: f
        toggleTreeView: "`"
        openMergeTool: M
        openStatusFilter: <c-b>
        copyFileInfoToClipboard: "y"
    branches:
        createPullRequest: o
        viewPullRequestOptions: O
        copyPullRequestURL: <c-y>
        checkoutBranchByName: c
        forceCheckoutBranch: F
        rebaseBranch: r
        renameBranch: R
        mergeIntoCurrentBranch: M
        viewGitFlowOptions: i
        fastForward: f
        createTag: T
        pushTag: P
        setUpstream: u
        fetchRemote: f
        sortOrder: s
    worktrees:
        viewWorktreeOptions: w
    commits:
        squashDown: s
        renameCommit: r
        renameCommitWithEditor: R
        viewResetOptions: g
        markCommitAsFixup: f
        createFixupCommit: F
        squashAboveCommits: S
        moveDownCommit: <c-j>
        moveUpCommit: <c-k>
        amendToCommit: A
        resetCommitAuthor: a
        pickCommit: p
        revertCommit: t
        cherryPickCopy: C
        pasteCommits: V
        markCommitAsBaseForRebase: B
        tagCommit: T
        checkoutCommit: <space>
        resetCherryPick: <c-R>
        copyCommitAttributeToClipboard: "y"
        openLogMenu: <c-l>
        openInBrowser: o
        viewBisectOptions: b
        startInteractiveRebase: i
    amendAttribute:
        resetAuthor: a
        setAuthor: A
        addCoAuthor: c
    stash:
        popStash: g
        renameStash: r
    commitFiles:
        checkoutCommitFile: c
    main:
        toggleSelectHunk: a
        pickBothHunks: b
        editSelectHunk: E
    submodules:
        init: i
        update: u
        bulkMenu: b
    commitMessage:
        commitMenu: <c-o>
